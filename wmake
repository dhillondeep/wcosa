#!/bin/bash
#!/usr/bin/env bash

set -o errexit
trap 'echo "Aborting due to errexit on line $LINENO. Exit code: $?" >&2' ERR
set -o errtrace
set -o pipefail
DEFAULT_IFS="${IFS}"
SAFER_IFS=$'\n\t'
IFS="${SAFER_IFS}"
_ME=$(basename "${0}")

_print_help() {
  cat <<HEREDOC
                 __               .__
__  _  _______ _/  |_  ___________|  |   ____   ____ ______
\\ \\/ \\/ /\\__  \\\\   __\\/ __ \\_  __ \\  |  /  _ \\ /  _ \\\\____ \\
 \\     /  / __ \\|  | \\  ___/|  | \\/  |_(  <_> |  <_> )  |_> >
  \\/\\_/  (____  /__|  \\___  >__|  |____/\\____/ \\____/|   __/
              \\/          \\/                         |__|
Waterloop code base builder
HEREDOC
}

_test() {
    cd test
    ./symlinks.sh
    ./runtests.sh
}

_simple() {
    root_dir=$(cd -P -- "$(dirname -- "$0")" && pwd -P)
    root_dir_name=$(basename "$root_dir")
    cd "$root_dir"

    if [ "$1" == 'test' ] ; then
        _test
    elif [ "$1" == 'release' ] ; then
         if [ $# -le 3 ] ; then
            echo "Provide tag name, tag description and git remote"
            exit 3
         fi
        printf "Releasing wio\n"
        _release $2 $3 $4
    else
        _print_help
    fi
}

_main() {
  # Avoid complex option parsing when only one program option is expected.
  if [[ "${1:-}" =~ ^-h|--help$  ]] || [ $# -lt "1" ]
  then
    _print_help
  else
    _simple "$@"
  fi
}

_main "$@"
