// Code generated by go-bindata.
// sources:
// ../../../assets/cli-helper/app-help.txt
// ../../../assets/cli-helper/command-help.txt
// ../../../assets/cli-helper/subcommand-help.txt
// ../../../assets/configurations/structure-avr.json
// ../../../assets/templates/cmake/CMakeListsAVR.txt.tpl
// ../../../assets/templates/cmake/CMakeListsNative.txt.tpl
// ../../../assets/templates/config/app-helper.txt
// ../../../assets/templates/config/dependencies-helper.txt
// ../../../assets/templates/config/pkg-helper.txt
// ../../../assets/templates/config/targets-helper.txt
// ../../../assets/templates/gitignore/.gitignore-clion
// ../../../assets/templates/gitignore/.gitignore-general
// ../../../assets/templates/ide/clion/app/CMakeLists.txt.tpl
// ../../../assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl
// ../../../assets/templates/ide/clion/lib/CMakeLists.txt.tpl
// ../../../assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl
// ../../../assets/templates/readme/APP_README.md
// ../../../assets/templates/readme/PKG_README.md
// ../../../assets/templates/sample-program/app/main.cpp
// ../../../assets/templates/sample-program/pkg/main.cpp
// ../../../assets/templates/sample-program/pkg/output.cpp
// ../../../assets/templates/sample-program/pkg/output.h
// ../../../assets/templates/sample-program/pkg-header-only/main.cpp
// ../../../assets/templates/sample-program/pkg-header-only/printer.h
// DO NOT EDIT!

package sys

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCliHelperAppHelpTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x5f\x4f\xdb\x30\x10\x7f\xcf\xa7\xf8\x29\xe2\x8d\x2a\xbc\x57\x0c\x89\x55\xda\xe0\x65\x93\xa6\xc1\x1e\xca\xb4\xba\xc9\x25\x35\x38\x77\x96\x9d\xc0\x50\xe4\xef\x3e\xd9\x49\x28\x6d\xd1\xfa\x74\xee\xdd\xef\xdf\xc5\xfe\xa5\x05\xda\x43\x31\xc4\x12\xc3\x4b\xef\x4a\xc2\xed\xf7\x9f\xa8\xe8\x99\x8c\xd8\x96\xb8\x03\xf1\xb3\x76\xc2\xb1\xce\x56\x8e\x54\x47\x0b\x7c\xee\xb5\xa9\x16\x50\x5c\xe1\xce\x1a\x51\x15\x56\x17\xab\xf3\x73\x58\x27\x8f\x54\x76\x1e\xb5\x93\x16\x2b\x69\x5b\xc5\x95\xd1\x4c\x45\x96\xc5\x93\xf0\xfc\xa7\x5f\x66\x19\x00\xbc\x68\x41\x99\x58\x71\x39\xa1\xff\x74\xaf\x96\xae\xb0\x16\xdb\x69\x61\xff\x3b\xcd\xc5\xdf\xa8\x0e\x05\xa6\x17\x44\xf3\x13\x00\x2f\x3b\x72\x27\x78\xed\xb1\x51\xd6\x6e\x20\x0e\x1b\xfb\xd4\x6c\xf6\x82\xdb\x68\xff\x03\x81\x14\x0b\xdd\x8e\x0e\xd8\xb7\xca\x53\x05\x61\x28\x63\x52\xb3\x14\xae\x75\xd3\x3b\x95\xe0\xa8\xa8\xd6\x4c\xd5\x9e\xde\xf5\xfc\x01\xf9\xb8\xa8\x8b\x1f\x3d\x1f\x2b\xec\x91\x9a\x7d\x17\x55\x4e\xd1\xb7\x63\xc7\xa7\x31\xab\xca\x27\xd5\x90\x87\x8a\xea\x96\xb8\x22\x2e\x35\xf9\x2c\xbb\xf3\xaa\xa1\x25\x86\xa1\xb8\x21\x63\xbf\xa9\x96\x42\xc0\x30\xe8\x1a\xc5\xbd\xf6\x7a\x6b\xe8\x8b\x51\x8d\x0f\x61\xdd\x18\xd9\x2a\x83\x59\x68\x18\x88\xab\x10\xc6\xd1\xf9\x1b\x85\x80\x72\x2c\xb1\x9e\x8b\x23\xc0\x44\x7e\xed\x1a\x9f\xb4\x23\xc5\xe1\x89\x8c\xa7\x10\xd6\xca\x35\x7d\xbc\x43\xbe\x28\x8a\x19\x1c\xd3\x25\xbc\x21\x46\x71\xdd\x77\x3b\x71\x3e\x84\xec\xeb\x81\xb7\xe5\x38\xe6\x14\x37\x74\x1c\x63\x18\x8a\x99\x66\xf2\x7f\x10\xc3\xbe\x3a\xdd\xec\x3a\x84\x90\x5d\x3f\x2b\x6d\xd4\xd6\xd0\x1c\xc9\x2f\xb3\x37\xd2\x7d\xe0\x84\x64\xe9\x50\xdc\xe8\x8a\xe2\x12\x43\x48\xf4\x8f\xa2\x19\x45\xdc\xa8\x47\xbe\x40\x1e\x47\x91\x3f\x74\xa9\x28\xde\xd2\x22\x7f\xe0\x1c\xef\x8c\x9c\xda\x3a\x4c\xf0\xbf\xb0\x67\x9a\x2b\xfa\xbb\xc0\xd9\xd8\xc4\xf2\xd3\x69\x7e\x5d\x4f\x63\x47\x7b\x98\x30\x1f\x5b\x78\xdb\x4c\x08\xf1\x61\x4e\x87\x49\xfb\xa0\xfb\x9e\x32\x99\x27\xe7\x13\x6d\x76\x4f\xde\x69\xe1\x19\xb4\x6f\xec\x21\x59\xbc\xec\x79\x7a\xe2\xd3\xed\xb9\xdc\x91\xb1\x57\x39\x6a\x71\x68\xc5\x11\x34\xd7\xe2\xda\xf4\x92\xa0\xb6\xd2\x77\x50\xf3\x70\x91\xfd\x0b\x00\x00\xff\xff\xfe\x80\x8d\x8e\xa1\x04\x00\x00"

func assetsCliHelperAppHelpTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsCliHelperAppHelpTxt,
		"assets/cli-helper/app-help.txt",
	)
}

func assetsCliHelperAppHelpTxt() (*asset, error) {
	bytes, err := assetsCliHelperAppHelpTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/cli-helper/app-help.txt", size: 1185, mode: os.FileMode(436), modTime: time.Unix(1532388173, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCliHelperCommandHelpTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x3d\x4e\x34\x31\x0c\x86\xfb\x9c\xc2\xda\x03\xe4\x00\xdb\xad\xbe\x4f\x88\x8a\x02\x01\xcd\x8a\xc2\xb3\x6b\x42\x24\x4f\x32\x8a\xb3\xfc\xc8\xf2\xdd\xd1\xfc\x04\x4d\xa8\xe2\xd7\xf6\x63\xfb\x8d\xaa\x7f\x16\x0c\x64\xe6\xdc\x12\x1c\x41\x35\xbe\xc1\x9a\x7d\xa2\xaf\x6a\xd6\x7a\x9a\x22\x16\x5a\xb2\xf7\xc4\xd3\x03\x8e\x8b\x98\x99\x97\x28\x71\x60\xba\x63\x0c\x62\x06\xe7\x4b\x1e\x47\x4c\x57\xc8\x53\x8d\x39\xc9\xab\x2a\xa5\xab\xd9\xb6\xe1\x54\x82\x6c\xbb\x55\x7b\xb5\x6e\x38\x63\x09\xb7\x91\x52\x15\xef\x7d\x83\x7f\x9f\x79\xc4\x3f\xac\x14\x72\xf9\x9e\xaf\x6f\xf1\xd1\x01\x80\xea\xae\xd6\x21\xff\x49\x2e\x25\x2e\x07\xcd\xd4\x4e\x36\xb0\xeb\xe8\xd8\xde\x9f\x73\xa7\x0f\x8c\x8c\x03\x13\x6c\x4e\x65\x9b\x51\x30\x05\xfa\xdb\xaf\xea\xcd\xd6\xfa\xde\x89\x7b\xbc\x25\x38\x7c\xc6\x0c\xef\xc4\xd3\x01\x6a\x06\x21\x82\xc0\x79\x40\x6e\x5f\xe7\xdd\x4f\x00\x00\x00\xff\xff\xd0\xcb\xcd\x27\xa9\x01\x00\x00"

func assetsCliHelperCommandHelpTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsCliHelperCommandHelpTxt,
		"assets/cli-helper/command-help.txt",
	)
}

func assetsCliHelperCommandHelpTxt() (*asset, error) {
	bytes, err := assetsCliHelperCommandHelpTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/cli-helper/command-help.txt", size: 425, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCliHelperSubcommandHelpTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xc1\x4e\xc4\x30\x0c\x44\xef\xf9\x0a\x2b\x67\x94\x0f\xe8\x6d\x85\x84\x38\x81\x84\x80\xcb\xc2\xc1\xcb\x9a\x10\x94\x26\x55\x9d\x05\x24\xcb\xff\x8e\xba\x49\xba\x2a\x9c\x5a\xbb\x9e\x99\xd7\x11\x71\x4f\x8c\x9e\x54\x8d\x39\xbf\x0c\x20\x12\xde\xa1\x6e\x1f\xe9\xa7\xa8\xf6\x9b\x3e\x51\x64\x3a\x6f\x6f\x29\x4e\x77\x38\x92\x2a\xbc\xe5\x71\xc4\x74\xac\xda\xe7\xc0\xe1\x10\xe9\x26\xa2\x67\x55\xd8\xb7\x8f\x90\xa7\x12\x72\xe2\x57\x11\x4a\x47\xd5\x96\xb4\x9b\x3d\x37\x06\x91\xed\x54\x93\xf6\x38\xfb\xd3\x48\xa9\xb0\x73\xae\x8b\xdb\xc3\x98\xdd\x17\x86\x88\x87\x48\x9d\x81\x07\x91\x19\x93\xa7\x15\xe4\x1a\x0b\xf9\x3c\x07\xe2\x45\xb7\x64\x56\x6a\x03\x00\x22\x6d\x18\x56\xe3\x3f\xe2\xe6\x5a\xcf\x17\xc1\x67\x0e\xa9\x5a\x30\xd8\x2b\xb0\x8b\xc6\xbe\x14\x7b\x69\xea\x82\xb7\x9a\xfe\xef\xc5\xdc\xd7\x3a\x86\x8a\xb1\x4d\x6d\x37\x22\xae\x63\x6e\xfe\xfa\xe1\x94\xc0\x7e\x87\x0c\x1f\x14\x27\x0b\x25\x03\x13\x81\x8f\xf9\x80\xb1\xd7\xec\xcc\x6f\x00\x00\x00\xff\xff\x7a\x3a\xa0\x4c\xdd\x01\x00\x00"

func assetsCliHelperSubcommandHelpTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsCliHelperSubcommandHelpTxt,
		"assets/cli-helper/subcommand-help.txt",
	)
}

func assetsCliHelperSubcommandHelpTxt() (*asset, error) {
	bytes, err := assetsCliHelperSubcommandHelpTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/cli-helper/subcommand-help.txt", size: 477, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigurationsStructureAvrJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x96\x41\x6b\xdc\x30\x10\x85\xef\xfe\x15\x42\xe7\x5d\xeb\xbe\xd0\x43\x68\x43\x0f\x6d\x60\xe9\xb5\x84\x32\x58\x13\xaf\x58\x59\x1a\x46\xe3\x90\x50\xf2\xdf\x8b\xdd\xd6\x71\x1c\x7b\x71\x36\xdb\xad\x0f\x7b\x93\xf5\x46\x03\xdf\x93\xf4\xac\x9f\x99\x52\x1a\x88\xf4\x46\x35\x43\xa5\x34\x81\xec\x92\xde\xa8\xef\xed\xa7\xfa\x33\xdd\x4a\x45\x0c\x49\x18\x5c\x90\xb6\xe0\x76\xf5\x2c\x61\x10\x7e\xd4\x1b\xa5\x8d\xee\xcd\xde\x39\x8f\xfd\x5e\x2f\xfb\x8d\xf5\xd4\xf8\x20\x0c\xba\xd7\xfa\x77\x23\x8e\x55\xd3\x5d\xb0\x22\x0f\x82\xc9\x94\x4e\x5c\x19\x22\xa3\xc9\xbb\xe1\xba\xc4\x80\x0c\x5e\x0f\x56\x4b\x6c\xd6\x3e\xd7\x0d\xf5\x78\x8f\xcc\xce\xa2\xde\xa8\x3b\xf0\x09\x07\x72\x4d\x16\xa4\x13\x7b\xda\xd3\xea\xf4\x5c\x8c\x60\x2b\x34\x57\xdb\xed\x8f\x6f\xd7\x57\x9f\x6e\xae\xf3\xca\x8e\xf3\x4c\xca\xe7\xc0\x71\x16\x3f\x14\xde\xc5\x30\x03\xc9\x59\x34\x6d\xad\x01\x22\xf3\xf1\x06\xf6\xf8\xd5\x25\x49\xb9\x3c\x48\x2e\x34\xb1\x5d\x2f\xeb\x8e\x65\x14\xae\xff\x27\xe2\x96\xdd\x3d\x08\xce\x25\xed\x95\x1f\x00\x6e\x98\xe6\xf2\x76\xe3\xdb\x6c\xe0\xc0\x5b\xef\x75\xe2\xe2\xdd\x57\x1b\x2a\xf2\x38\xc3\xce\xd4\x16\xae\x89\x63\xc9\x50\xb5\x9e\x56\xe0\x42\x5e\x10\x8d\x5b\x38\xa5\x1e\x7d\x15\x5e\xfb\x96\xfd\xfd\x6a\x1d\xd4\xb4\x2f\x2f\x99\xb9\xac\xcc\xdc\x7e\xf9\x7c\xc9\xcc\x4b\x66\x8e\x02\xff\xeb\xcc\xd4\x21\xae\x77\x08\x16\x79\x1d\x83\x7f\xd4\x8b\xcb\x50\xda\x97\x26\xd6\x42\xb5\x4c\xa7\xe8\xb4\x7e\xc2\x1c\x3d\xf6\xff\xe3\x42\xe1\x6b\x8b\x27\xf2\x6f\xa5\x0e\xec\xd8\x9b\x1d\xdd\x1d\xf4\xf3\x95\x7a\x9e\xec\xec\x40\xdf\x4b\xd9\xb7\xc9\x10\xbb\x20\xc8\x53\xc8\x93\xf2\x02\x4e\x90\x60\x92\xb4\xac\xf3\x73\xe6\x57\xcd\x02\xce\xcf\x82\xde\x71\xd9\x53\xf6\x2b\x00\x00\xff\xff\xbb\x05\x04\x5f\xff\x0e\x00\x00"

func assetsConfigurationsStructureAvrJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigurationsStructureAvrJson,
		"assets/configurations/structure-avr.json",
	)
}

func assetsConfigurationsStructureAvrJson() (*asset, error) {
	bytes, err := assetsConfigurationsStructureAvrJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/configurations/structure-avr.json", size: 3839, mode: os.FileMode(436), modTime: time.Unix(1532388173, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistsavrTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x51\x93\xa2\x46\x10\x7e\xe7\x57\x74\x5c\x1e\x20\x57\xd1\xad\xdc\x2f\xe0\x60\xd8\x23\x87\x0c\x19\x46\xcf\x7b\x9a\x9a\x85\x46\x27\x87\x40\x60\xac\xad\x2b\xca\xff\x9e\x02\x95\x55\xd7\x64\x37\x57\xeb\x0b\xd3\x3d\x6d\x7f\x9f\xfd\x7d\x36\x77\xef\xf2\x31\xee\x80\x6f\x54\x0b\xaa\x05\xb9\xd3\xd5\x6f\x6b\x2c\xb1\x91\x1a\x33\x78\xfc\x01\x4f\xaa\x32\xde\x09\xc6\x68\x51\x5b\xee\xdc\xf9\x42\xc4\x92\x30\xf8\x38\xbd\x9f\xde\xdb\x43\x32\x66\xf4\x0f\xe2\x72\x11\x39\x73\x02\x5d\x77\x1e\xee\xf7\x97\x25\xb1\xc3\x3f\xc3\xe4\xb9\xa6\x8f\xf7\xfb\x89\x7d\xd6\x9c\x53\x1a\xba\x9f\x9d\x20\x1a\x8b\x2f\x33\x57\xe5\x73\xea\x2d\x42\x72\xac\x35\xbb\x43\xd2\x5d\x30\x46\x22\x2e\x12\xba\x60\x2e\x11\x5e\xc0\x4e\x5f\xf2\x48\x4c\x22\x8f\x44\xee\x37\xe1\x07\x21\x81\x0c\x6b\x2c\x33\x2c\x53\x85\xad\x6d\x18\x77\xe0\x7e\xf8\x00\xad\x96\x65\x26\x9b\xec\x0c\xc6\x5d\xad\x44\xc2\x9d\xc8\x73\x98\x07\x5d\xe7\xc6\xf1\x18\x9e\x7e\xe3\xcb\x42\xc1\xc8\x9f\x8b\x80\x11\x0f\x68\x74\x5d\x43\x56\x9c\x44\x49\x40\xa3\x04\xa8\xef\x1f\xa0\x6f\x02\x5f\xc0\xfe\x1b\xe8\xeb\x90\xb7\x00\x65\x51\x80\xde\x20\xd4\x52\x6f\x5a\xd0\x55\x55\xa4\x1b\xa9\x4a\x48\x65\x09\x8f\x08\x52\x83\xa5\x8f\xd6\x7a\xc4\x54\xee\x5a\x84\x2a\x87\x4c\xe5\x39\x36\x58\x6a\xa8\x65\xfa\x5d\xae\x11\xb6\xb2\x94\x6b\x6c\x5a\xdb\x50\x39\x58\x64\x15\x24\x3c\x79\x16\xe3\x4a\xbe\xd9\xb9\xa0\xbd\x06\x82\x91\x70\x10\x15\x00\xe0\x96\x0f\x06\xa1\xfe\x7f\x3b\x2c\x5a\x7c\x0b\x9f\xe9\xf4\xbd\x29\xfd\x57\xc7\x6b\x56\xb3\x5d\xdb\xcc\xda\x8d\x6c\x70\xf6\xa4\xaa\x9f\x65\xf2\xd6\x2e\x3d\xba\x75\x68\xb6\xc5\xb6\x95\x6b\xb4\x7c\x87\x3b\xa1\x20\x8c\x51\x06\x13\x5f\xaa\x02\x33\xd0\x15\xe4\xaa\xcc\xc0\x59\xb2\x33\x5b\xe4\xaa\xc0\xf6\x97\xbe\x4b\x99\xa9\xdc\x1a\x2c\x54\x37\x55\x8d\x8d\x56\xd8\x0e\x66\xe3\x0e\x7b\x20\xe3\x26\x38\x8b\xc6\x45\x10\x3a\xdc\xa7\x6c\xde\xef\x89\xe3\xf1\x74\xe5\x33\x67\x4e\xbe\x52\xf6\x05\xba\x6e\x3c\x9f\x2e\x3f\xd1\xc3\x3f\x60\x78\x9e\x92\x24\xe2\xec\x1b\x74\xdd\xf0\xec\x93\x46\xba\x95\xdf\x51\x6c\x55\xa9\xb6\xbb\xad\x68\xf0\xef\x9d\x6a\x30\xb3\x96\x84\xf5\xce\x87\x93\x60\xc7\x78\x6f\x1b\x75\x53\xfd\x85\xa9\xb6\xcc\xcb\xb5\x05\x2e\xb8\xab\x15\x38\xc9\xdc\x3e\xf6\xac\xab\x42\xa5\x3f\xac\x84\x70\x70\xe7\xf1\xfd\xfd\xef\x1f\x81\x86\x9e\x6d\x18\xfd\x54\xac\x87\x90\x7e\x12\x8c\xb8\x0b\x96\x10\x48\x98\x3b\x4c\x3d\x19\xe6\x3c\x31\x2f\xb7\xdd\xcc\x3c\xf2\x9d\xfd\x3a\x4d\xeb\x7a\xf2\x7a\x51\xfa\x86\x9a\x89\x6d\x18\xa7\xcd\x2f\x64\x93\xed\x54\x59\x89\x5c\x35\xdb\x27\xd9\xa0\x65\x5e\x48\x31\x74\x4b\x98\x9b\x80\xd9\x8d\x5c\x0f\xd9\xc3\x98\xcd\xe3\x98\x87\x54\x4c\x19\xef\xd5\xa2\x8c\x0f\x23\xd6\xb2\x59\xa3\x16\x69\xb5\xad\x55\x81\x22\xc3\x5c\x95\x4a\xab\xaa\x6c\xad\xa1\xfe\x06\x56\xcc\x82\xa5\xc3\xc9\x70\xfe\x1a\x50\x71\x52\x5e\x98\xcf\x26\x18\x2f\x47\xe9\x85\x79\x66\x83\xf1\x7a\x60\x26\x2e\x18\x8e\x46\x73\xe9\x3c\xee\xdd\xee\x11\x3f\x88\x02\xde\xef\xba\x5b\x94\xab\xfa\x40\xf7\x15\xa6\x2f\xda\xfa\xa1\xf3\x70\x68\xa8\xca\xb4\xd8\x65\xfd\x5c\xaf\xde\x27\x7b\xdb\xf8\x27\x00\x00\xff\xff\x38\x59\x68\x98\xd6\x07\x00\x00"

func assetsTemplatesCmakeCmakelistsavrTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistsavrTxtTpl,
		"assets/templates/cmake/CMakeListsAVR.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistsavrTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistsavrTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsAVR.txt.tpl", size: 2006, mode: os.FileMode(436), modTime: time.Unix(1532388173, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistsnativeTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xdd\x6e\x9b\x4c\x10\xbd\xe7\x29\x46\x09\x17\xe6\x8b\xbe\x24\x52\x9f\x80\x2c\x43\x4a\x03\x2c\x5d\xb0\xe3\x5c\xad\x08\x6c\xd2\x6d\x6d\xa0\x80\xd5\x56\x2b\xde\xbd\x5a\x8c\x09\x24\xae\x5c\x55\xf1\xcd\xce\xcf\xf1\x9c\x33\x3f\xe2\xfc\x5d\x7e\xc6\x39\x24\x5f\x64\x03\xb2\x81\x74\xd7\x96\xff\x3f\x8b\x42\xd4\x69\x2b\x72\x78\xfc\x05\x3f\x64\x69\xbc\x13\x8d\xd1\x88\x76\x41\x02\xfb\x0e\xf9\x0a\x19\x7c\xb8\xbc\xbe\xbc\xb6\xfa\x60\xc4\xe8\x27\x24\x09\x0f\xed\x00\x41\xa9\xa9\xdb\x75\x73\x48\x64\x27\x1f\xe1\xec\x05\xa3\xfd\xae\x3b\xb3\x26\xc5\x03\xea\x2c\x7d\xdc\x23\x4d\xb5\x8f\x91\x25\x63\x18\x26\x3c\xa6\x4b\x46\x90\x3b\x1e\x1b\xea\x3a\x18\x61\xe8\x60\x48\x1e\xb8\xeb\xf9\x08\xb9\xa8\x44\x91\x8b\x22\x93\xa2\xb1\x0c\xe3\x1c\xc8\xc5\x05\x34\x6d\x5a\xe4\x69\x9d\x4f\x48\xc8\x7a\xcd\xe3\xc4\x0e\x1d\x9b\x39\xa0\x14\x89\xa2\xd1\x3d\x48\x7e\x0b\xe4\x0c\x3f\x2f\x3d\x86\x0e\xd0\xf0\x35\x06\xd7\x09\x86\xb1\x47\xc3\x18\xa8\xeb\xee\xa9\x8f\x12\xcf\x68\xff\x44\x7a\x9a\xf2\x18\x61\x54\x97\x95\xa8\x5b\x29\x9a\x1e\x99\xd8\xec\x16\xc7\xad\x4c\xbc\x03\x19\x8d\x41\x29\x1a\x8f\x3b\xf2\xed\xc4\xa5\x2c\xd0\x2b\x1c\xcc\x43\xca\x65\x76\x80\xf7\x94\xdd\x81\x52\xa3\x7d\x48\x62\x98\xb0\x07\x50\xaa\x7f\x75\x50\xf7\xae\x55\x1a\xd9\x36\xfd\x26\xf8\x56\x16\x72\xbb\xdb\xf2\x5a\x7c\xdf\xc9\x5a\xe4\x8b\x15\x32\x2d\x7c\xdc\xee\xe0\x77\x96\x51\xd5\xe5\x57\x91\xb5\x0b\x73\x7e\x44\x40\x80\xac\xd7\x60\xc7\x41\x5f\x7c\x95\xd6\x32\x7d\xdc\x0c\x6d\xfe\xab\xec\x1b\xba\x5f\x42\xff\xf6\xb2\x9f\xe4\x46\x2c\x6e\x7d\x7a\xc3\x19\x92\x25\x8b\x11\xcc\xd9\xd8\xb8\x06\x34\x06\x00\x80\x39\xbf\xe0\x2b\x73\xe8\xfe\xea\xbf\xcb\xac\xaa\x4e\x42\xb2\x93\x08\xcb\x30\xd2\x3c\xe7\xe2\xa7\xc8\x76\xad\x6e\x76\x31\xd7\x02\xa6\x3a\x26\x4e\xb7\xd1\xa6\xf5\xb3\x68\x79\x56\x6e\x2b\xb9\x11\x3c\x17\x4f\xb2\x90\xad\x2c\x8b\x66\x31\xd0\x4e\xff\xd7\x87\x22\xe6\xad\xec\x04\x7b\xfb\xde\xa3\xfc\x30\x48\x6e\xbe\xcc\x74\x4c\x8e\x93\xe4\xe6\x64\xaa\x63\x9a\xc6\xdc\xd4\x57\xd5\x07\xc6\xbb\x23\x34\x88\x3c\x1f\xb9\x83\xae\x17\x7a\x89\xbe\xdb\xee\x88\xd8\xb2\xfa\x7b\xa1\x6f\x6a\xbb\xbe\x7d\xbb\xaf\x2a\x8b\x6c\xb3\xcb\xf5\xcc\x5e\x7d\x20\x3a\xcb\xf8\x1d\x00\x00\xff\xff\x7c\x71\xa6\x66\x76\x05\x00\x00"

func assetsTemplatesCmakeCmakelistsnativeTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistsnativeTxtTpl,
		"assets/templates/cmake/CMakeListsNative.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistsnativeTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistsnativeTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsNative.txt.tpl", size: 1398, mode: os.FileMode(436), modTime: time.Unix(1532388173, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigAppHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xb1\x6a\x03\x31\x10\x44\xfb\x7c\xc5\x80\x9b\x04\x5f\xfc\x01\x57\x9b\x34\x69\x02\xce\x0f\xec\xad\x56\xe7\xc5\xba\x5d\xb1\x92\x30\xf9\xfb\x90\x8b\x1b\x77\xc3\xbc\xe1\x31\x07\x24\xc9\x6a\x82\xb5\xf8\x42\x05\x54\x2b\xd8\x2d\xeb\x3a\x82\xba\xba\xb5\x13\xbe\xaf\xda\xa0\x0d\x64\x7f\xb8\x28\xef\x00\x64\x09\x4c\x86\x45\xb0\x0c\x2d\x7d\x42\x8c\xff\x76\xd4\xe2\x94\x24\x9d\x70\xf1\x4d\xd0\x25\x36\x35\x2f\xbe\xfe\xcc\x2f\x07\xbc\xe3\x23\x68\x93\xbb\xc7\x6d\xc6\xe5\xfc\x89\xec\x81\x7e\x95\x27\xf9\x2b\x7b\xa3\x09\x14\x69\xa8\xf9\x04\x9e\xc0\xc7\xe3\x04\xe9\xfc\xb6\x3b\xbe\x0a\xf5\xec\xb1\xcd\xa8\x8f\x84\xee\xfb\x91\xf4\x24\xca\x1e\xfb\xfe\x2c\x55\x2c\x89\xb1\x4a\x9b\x71\x57\x47\x25\xbe\xd1\x2a\xed\x37\x00\x00\xff\xff\x4f\xa8\xbb\x64\x03\x01\x00\x00"

func assetsTemplatesConfigAppHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigAppHelperTxt,
		"assets/templates/config/app-helper.txt",
	)
}

func assetsTemplatesConfigAppHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigAppHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/app-helper.txt", size: 259, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigDependenciesHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x4f\xc3\x30\x10\x85\xf7\xfe\x8a\x27\x67\x85\xa8\x30\x66\xa6\x12\x43\x44\x36\x16\x14\x90\x6b\x5f\x92\x03\xc7\x67\xd9\x4e\x4b\xff\x3d\x4a\x41\x4d\x24\x10\xaa\x37\xdf\x7d\xef\xe9\xbb\x02\xca\x52\x20\x6f\xc9\x1b\xa6\xa4\x90\x75\x0f\xed\x9c\x1c\x13\xa6\x44\x11\x59\xc0\xde\xb8\xc9\x12\x24\x0f\x14\x71\x64\x41\xd0\xe6\x43\xf7\x94\xc0\x3e\x0b\xf2\x40\x1c\x11\xa2\xbc\x93\xc9\x25\x1e\x56\x7d\x30\xda\x63\x4f\x08\x4e\x1b\xb2\x9b\x02\xec\x71\x20\x6f\x25\xa2\x13\x67\x29\x82\xbb\x39\x9f\x08\x3a\x12\x9c\x18\xed\x2e\xed\x25\x76\x9f\x7a\x0c\x8e\x52\xb5\x29\xb0\xd6\x9c\xff\x40\x81\x3c\x70\x02\x27\x68\x44\x1a\x25\xd3\x02\x9d\x70\x46\xc6\x53\xcd\xfb\x6f\x7a\x7e\x07\x8a\x89\xc5\x57\x78\xdd\x96\xdb\xf2\xee\x32\x5f\x62\x6f\x9d\xd3\x7d\xaa\xf0\xd2\xfe\xb5\xb4\xd4\xb1\xe7\xcc\xe2\x67\x44\x3d\xee\xea\xba\x51\x37\x50\x4f\x4d\xa3\xda\x5f\x4e\x3f\x87\x2e\xf9\x45\xe9\x7e\xed\x34\x53\x15\x72\x9c\xe8\x3f\x21\x75\xdb\x19\x19\x03\x3b\x52\xd7\xb8\x3d\x9f\x6b\x55\xfb\x15\x00\x00\xff\xff\xc3\x0f\xf6\x3b\xe1\x01\x00\x00"

func assetsTemplatesConfigDependenciesHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigDependenciesHelperTxt,
		"assets/templates/config/dependencies-helper.txt",
	)
}

func assetsTemplatesConfigDependenciesHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigDependenciesHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/dependencies-helper.txt", size: 481, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigPkgHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\x41\x4e\xc3\x40\x0c\x45\xf7\x3d\xc5\x57\xbb\x01\x35\xf4\x00\x59\x17\x36\x6c\x90\xca\x05\x9c\x19\x27\x31\x9d\x8c\x47\x1e\x0f\x55\x6f\x8f\x92\x22\x24\x76\xd6\xd3\xf7\x93\xde\x01\x91\x47\xc9\x8c\x29\xe9\x40\x09\xe5\x3a\x21\x68\x1e\x65\x6a\x46\x2e\x9a\xeb\x09\x9f\xb3\x54\x48\x05\xa1\x50\xb8\xd2\xc4\xa0\x1c\x57\x10\x8c\xc9\x39\xc2\x15\x03\xa3\x55\x8e\x18\xee\x50\x9f\xd9\x70\x13\x45\x31\xfd\xe2\xe0\xf5\x84\xd7\x6f\xce\xf0\x59\xdb\x34\xef\x0e\x7f\x9a\x40\x39\xab\xaf\xbf\x43\x93\xe4\x1d\xc4\x57\xb6\x02\xe7\xea\x0f\x5d\xab\x92\x27\xec\x57\x50\xf7\x88\x62\x1c\x5c\xed\x7e\xc2\x45\x97\x75\x67\x8b\x64\x4d\x3a\xdd\xfb\xdd\x01\x2f\x78\x33\x5a\xf8\xa6\x76\xed\x71\x39\xbf\x63\x54\x83\xcf\x0c\x2a\x25\x49\xd8\x8a\xf0\x14\xb4\x52\x07\xb2\xd8\x24\x6b\x87\xd0\x21\x1c\x8f\x1d\xd8\xc3\xf3\xe6\xf8\x48\xe4\xa3\xda\xd2\xa3\xfc\x5e\x5b\x62\x93\x14\xff\x89\x46\xb5\x6d\x7f\xe6\xc2\x39\x72\x0e\xc2\xb5\x7f\x94\x3f\x0a\xeb\x4f\x00\x00\x00\xff\xff\xd3\x8f\x84\x75\x5f\x01\x00\x00"

func assetsTemplatesConfigPkgHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigPkgHelperTxt,
		"assets/templates/config/pkg-helper.txt",
	)
}

func assetsTemplatesConfigPkgHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigPkgHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/pkg-helper.txt", size: 351, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigTargetsHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\x41\x6e\x83\x50\x0c\x44\xf7\x39\xc5\x28\x6c\x23\x0e\xd1\x5b\x74\xe9\xf0\xfd\xc1\xea\xc7\x46\xb6\x01\x71\xfb\x8a\x40\xd5\xad\xe7\x8d\x9f\xa6\xc3\x33\xc9\x47\xce\x78\x22\x69\x04\xb5\x66\x7b\xa0\x9a\x23\x39\x52\x74\x04\x69\x41\xe1\x8d\x9b\x2d\x33\x6b\x7e\xb2\x8d\x5c\x6c\x0d\x04\xe7\xc9\xc4\x07\x1a\x4c\xab\x8c\xab\x53\x8a\x69\xf4\xf8\xb6\x15\x03\x29\x06\x67\x4a\x7e\x74\x98\xd7\x96\xb2\x34\xc6\xad\xc4\x3e\xb1\x33\x8e\x9b\x2b\x5c\x45\x19\x45\x6a\x65\x3f\x4d\x79\x2c\x1c\xb0\x8a\xb7\x91\x97\x78\xa1\x3a\xcd\xbc\x9b\xff\x5c\xc2\xda\x68\x8c\x1e\x5f\xc7\x59\xa5\xb5\x25\x4c\xff\x9e\x3f\x3a\x48\xdc\xea\xf2\xc2\x3e\xc9\x30\x9d\x97\x4b\x52\xf0\xa6\xe0\x02\xd3\xff\x09\x8b\xdb\x26\x85\x0b\x44\x91\x13\x5f\x5d\x31\x3d\x83\x81\x23\xfa\xdf\x00\x00\x00\xff\xff\xc8\xf7\x81\xf4\x2c\x01\x00\x00"

func assetsTemplatesConfigTargetsHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigTargetsHelperTxt,
		"assets/templates/config/targets-helper.txt",
	)
}

func assetsTemplatesConfigTargetsHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigTargetsHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/targets-helper.txt", size: 300, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreClion = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x4f\x6b\xc2\x40\x10\xc5\xef\xf3\x29\x16\xbc\x45\x1c\xed\x27\x28\xc5\x1c\x7a\x50\x14\x22\xed\xa1\x14\xd9\x3f\x53\x33\x3a\xc9\xa6\xbb\x13\xad\xdf\xbe\x24\xc5\x5a\xe8\x61\x66\x1e\xbc\xf7\x7e\x30\x13\x73\xe1\x08\x78\xe1\x38\x07\x98\x98\xa5\x70\x6c\x61\xb9\xb6\x27\x5a\x71\xd6\xbc\x4d\x7c\xb6\x4a\xa8\x5f\x0a\xc8\x81\xec\x1c\x7c\x63\x4f\x34\x73\x3d\x4b\x98\x05\x72\xfd\x61\x2c\xae\xad\x37\x9b\x0a\xb0\xac\xf6\x95\xc6\x44\x77\xf5\x08\xf8\xd4\x75\x42\x65\xec\x9d\x10\xe0\xaa\xda\x9c\x29\x25\x0e\x04\xb8\x2f\x00\xab\x2e\xaa\xf0\xa1\xd6\xd9\xcb\xc3\x62\x01\xb8\x4b\x36\xd7\x94\x81\x6a\xad\xfb\xc6\x65\x0c\x0e\x76\xbf\x0a\x26\xe6\x95\xdb\x10\x2f\xf7\xc0\xfe\xcc\x59\xed\x60\xbe\x95\xe1\x9d\xf2\x49\x63\x87\xdc\x32\x8c\x0f\x4d\xa7\x66\x9b\x28\xd1\x67\xcf\x99\x95\x32\x14\x18\x6e\xc6\x32\x36\x1d\x0b\x05\xb3\x71\x47\xf2\x6a\x3e\x58\xc6\x40\x96\x08\x05\x8e\x6b\x1c\x77\xfc\x83\xf2\xb7\xd2\x33\xd9\x40\x69\xc8\x1f\x7c\x0d\x05\x76\xbe\xfe\x07\x2e\xaf\xad\x6d\xd8\x1b\x61\x97\x6c\xe2\x1f\xfa\xc0\x0c\x57\x61\x37\x5c\x11\xf8\x0e\x00\x00\xff\xff\x71\x80\x05\xad\x84\x01\x00\x00"

func assetsTemplatesGitignoreGitignoreClionBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreClion,
		"assets/templates/gitignore/.gitignore-clion",
	)
}

func assetsTemplatesGitignoreGitignoreClion() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreClionBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-clion", size: 388, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreGeneral = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8c\x4f\x4b\xf3\x40\x10\xc6\xef\xf3\x29\x16\x72\x4b\x79\xe7\xad\x9f\x40\xa4\x39\x78\x50\x22\xa4\xe8\x41\x24\xec\x9f\xb1\x3b\x75\x92\x5d\x77\x37\x0d\xfd\xf6\x92\x48\xad\xe0\x61\x66\x1e\x78\x7e\xf3\xab\xd4\xcc\x01\x70\xe6\xf0\x1f\xa0\x52\x8f\xda\xaa\xb6\x03\x6c\xba\xbe\x2b\x21\xd1\x35\xdd\x02\xde\xc5\x28\xd4\x84\xc9\x08\x01\x3e\x74\xed\x89\x52\x62\x47\x80\x7d\x0d\xd8\xc5\x50\x84\x0f\xbe\xfc\x7b\xbe\xd9\x6e\x01\xf7\x49\x67\x4f\x19\xc8\x17\x3f\x0d\x26\xa3\x33\xb0\xff\x49\x50\xa9\x17\x1e\x5d\x98\xaf\x40\x7f\xe2\x5c\xf4\x52\xbe\x36\xee\x8d\xf2\x47\x09\x11\x79\x64\x58\xe0\xdd\x66\xa3\x9e\x12\x25\xfa\x9c\x38\x73\xa1\x0c\x35\xba\x4b\xb1\x0b\x43\x64\x21\xa7\x5a\x73\x24\x5b\xd4\x3b\xcb\x0a\x64\x09\x50\xe3\xba\xd6\x31\xc7\x5f\x2a\x7b\x79\xba\x27\xed\x28\x2d\xfc\xc1\x7a\xa8\x31\x5a\xff\x47\xdc\x9c\x47\x3d\xb0\x55\xc2\x26\xe9\xc4\xdf\xf6\xc5\xe9\xce\xc2\x66\xb9\x22\xf0\x15\x00\x00\xff\xff\x0b\x90\x5c\xd2\x4b\x01\x00\x00"

func assetsTemplatesGitignoreGitignoreGeneralBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreGeneral,
		"assets/templates/gitignore/.gitignore-general",
	)
}

func assetsTemplatesGitignoreGitignoreGeneral() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreGeneralBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-general", size: 331, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsTxtTpl,
		"assets/templates/ide/clion/app/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsTxtTpl,
		"assets/templates/ide/clion/lib/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesReadmeApp_readmeMd = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xa8\xae\x0e\x08\xf2\xf7\x72\x75\x0e\x89\xf7\x73\xf4\x75\xad\xad\xe5\xe2\x0a\xc9\xc8\x2c\x56\xc8\x2c\x56\x48\x54\x48\x28\xcf\xcc\x4f\x00\xa9\xf0\x71\x0c\x71\xf3\x0f\xf2\xad\xad\x4d\x2c\x28\xc8\xc9\x4c\x4e\x2c\xc9\xcc\xcf\xd3\xe3\xe2\x0a\xc9\x57\x48\x2a\xcd\xcc\x49\x51\x28\x01\x69\x41\x92\xb3\xe2\x4a\x48\x48\x48\x4a\x2c\xce\xe0\x2a\xcf\x84\xaa\x01\x89\x80\x75\x14\x95\xe6\x11\x50\x5f\x54\x9a\x07\x56\x0d\x08\x00\x00\xff\xff\x68\xd4\x20\xfa\x9d\x00\x00\x00"

func assetsTemplatesReadmeApp_readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesReadmeApp_readmeMd,
		"assets/templates/readme/APP_README.md",
	)
}

func assetsTemplatesReadmeApp_readmeMd() (*asset, error) {
	bytes, err := assetsTemplatesReadmeApp_readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/readme/APP_README.md", size: 157, mode: os.FileMode(436), modTime: time.Unix(1532388173, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesReadmePkg_readmeMd = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x0e\x82\x30\x14\x45\xf7\xf7\x15\x2f\x71\xd1\x81\x1f\x60\x23\x06\x06\x15\x31\x0d\x89\xa3\xef\x09\x45\x1a\x0a\x25\x2d\xa6\x31\xa4\xff\x6e\x6a\x74\x72\xbe\x39\xe7\xdc\x0d\xae\xeb\x45\x54\x87\x7c\x5f\xdf\xce\x59\x99\x87\x00\x50\xf7\xca\xa1\x72\xc8\x48\x5e\x19\xc2\x99\x9b\x81\x1f\x12\x3b\x63\x21\xc1\x59\xf3\xd2\x19\x3b\x6e\xdd\x2e\x8d\xf0\x29\xab\x8b\x4a\x94\x21\x40\x82\x9d\xe5\x51\x7a\x63\x87\xef\x58\x88\xac\xcc\xaf\x95\x38\x7e\xb4\x06\xd5\xd4\xe8\x67\x2b\x71\x89\x85\x9f\x96\x63\xa9\x95\xb3\x9c\x5a\x39\x35\xaf\x14\x80\x88\xee\xec\x7a\xf0\x2a\x22\x6e\x61\xad\xff\x6f\x12\x11\xbc\x03\x00\x00\xff\xff\x43\x7e\x3d\x91\xbe\x00\x00\x00"

func assetsTemplatesReadmePkg_readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesReadmePkg_readmeMd,
		"assets/templates/readme/PKG_README.md",
	)
}

func assetsTemplatesReadmePkg_readmeMd() (*asset, error) {
	bytes, err := assetsTemplatesReadmePkg_readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/readme/PKG_README.md", size: 190, mode: os.FileMode(436), modTime: time.Unix(1532388173, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramAppMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\xb0\x71\xce\x2f\x4e\xd4\x0f\x0a\x09\xd1\xcb\xc8\xb0\xe3\x42\x13\xf6\x2f\x2d\x29\x28\x2d\x09\xc8\xcc\x03\x4b\x72\xc1\xb9\x0a\x39\xa9\x29\x01\x99\x79\x1a\x4e\xf9\x89\x45\x29\x56\x56\x3e\xae\x2e\x9a\xd6\x5c\x5c\x65\xf9\x99\x29\x0a\xc5\xa9\x25\xa5\x05\x1a\x9a\x0a\xd5\x5c\x0a\x0a\x0a\x0a\x41\x21\x21\x56\x56\x49\xa9\xe9\x99\x79\x1a\x9a\xd6\x5c\xb5\x50\x35\x39\xf9\xf9\x08\x25\x10\xa3\xf4\xf2\xc1\x2a\x40\x02\x29\xa9\x39\x89\x95\x1a\xa6\x06\x50\x2e\x4c\x3e\x2d\x0d\x5d\x81\x01\xd8\x48\x40\x00\x00\x00\xff\xff\xca\x5a\x2a\xce\xca\x00\x00\x00"

func assetsTemplatesSampleProgramAppMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramAppMainCpp,
		"assets/templates/sample-program/app/main.cpp",
	)
}

func assetsTemplatesSampleProgramAppMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramAppMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/app/main.cpp", size: 202, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\xb0\x71\xce\x2f\x4e\xd4\x0f\x0a\x09\xd1\xcb\xc8\xb0\xe3\x42\x08\xe7\x97\x96\x14\x94\x96\xe8\x65\xd8\x71\x71\x95\xe5\x67\xa6\x28\x14\xa7\x96\x94\x16\x68\x68\x2a\x54\x73\x29\x28\x28\x28\x04\x85\x84\x58\x59\x25\xa5\xa6\x67\xe6\x69\x68\x5a\x73\xd5\x42\xd5\xe4\xe4\xe7\x23\x94\x24\x95\x66\xe6\x94\xf8\xa4\xa6\xf8\x83\x95\x80\x44\x52\x52\x73\x12\x2b\x35\x4c\x0d\xa0\x5c\xb8\x82\xb4\x34\x74\x15\x06\x60\x43\x01\x01\x00\x00\xff\xff\x09\x56\x5f\x0e\xa4\x00\x00\x00"

func assetsTemplatesSampleProgramPkgMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgMainCpp,
		"assets/templates/sample-program/pkg/main.cpp",
	)
}

func assetsTemplatesSampleProgramPkgMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg/main.cpp", size: 164, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgOutputCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\xb0\x71\xce\x2f\x4e\xd4\xf7\x2f\x2d\x29\x28\x2d\x09\xc8\xcc\xd3\xcb\xc8\xb0\xe3\x42\x48\xe6\x83\xc5\xf5\x32\xec\xb8\xb8\xe0\x4a\x14\x72\x52\x53\x02\x32\xf3\x34\x9c\xf2\x13\x8b\x52\xac\xac\x7c\x5c\x5d\x34\xad\xb9\xb8\xca\xf2\x33\x53\x14\x92\x4a\x33\x73\x4a\x7c\x52\x53\xfc\xf3\x34\x34\x15\xaa\xb9\x14\x14\x14\xa0\x8a\xf5\xf2\xf3\x34\x34\xad\xb9\x6a\xd1\xd5\xa5\xa5\x61\x28\x04\x09\x81\x54\x02\x02\x00\x00\xff\xff\x09\xae\xb8\x13\xa2\x00\x00\x00"

func assetsTemplatesSampleProgramPkgOutputCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgOutputCpp,
		"assets/templates/sample-program/pkg/output.cpp",
	)
}

func assetsTemplatesSampleProgramPkgOutputCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgOutputCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg/output.cpp", size: 162, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgOutputH = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\x4c\xcb\x4b\x49\x4d\x53\xf0\x0f\x0d\x09\x08\x0d\x89\xf7\xe0\x52\x4e\x49\x4d\xcb\xcc\x4b\x45\x08\x70\xe9\xeb\x2b\x84\x94\x16\xe5\x15\x2b\x24\x95\x66\xe6\x94\x28\x64\xe6\x29\xf8\xb8\xba\x28\xf8\xfb\x29\x68\x04\x78\xfa\x29\x18\x1a\x6b\x72\x95\xe5\x67\xa6\x40\x64\x7d\x52\x53\xfc\xf3\x34\x34\xad\x71\xea\x72\x73\xc3\xa5\x2d\x2d\x0d\xac\x4f\x39\x35\x2f\x25\x33\x4d\x41\x5f\x0b\xee\x02\x05\x2d\x7d\x2e\x40\x00\x00\x00\xff\xff\xea\x03\x2b\xa5\xa7\x00\x00\x00"

func assetsTemplatesSampleProgramPkgOutputHBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgOutputH,
		"assets/templates/sample-program/pkg/output.h",
	)
}

func assetsTemplatesSampleProgramPkgOutputH() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgOutputHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg/output.h", size: 167, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgHeaderOnlyMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\xb0\x71\xce\x2f\x4e\xd4\x0f\x29\x4a\x4c\x4e\xd5\xcb\xc8\xb0\xe3\x42\x93\x08\x75\x0c\x0a\x41\x13\x2f\x28\xca\xcc\x2b\x49\x2d\xd2\xcb\xb0\xe3\xe2\x2a\xcb\xcf\x4c\x51\x28\x4e\x2d\x29\x2d\xd0\xd0\x54\xa8\xe6\x52\x50\x50\x50\x28\x4d\x2c\x2a\xd1\x4b\x4a\x4d\xcf\xcc\xd3\xb0\x34\x33\x30\xd0\xb4\x06\x8b\x96\x80\x2d\x80\x08\xab\x81\x94\x68\x5a\x73\xd5\x42\xf5\xe7\xe4\xe7\x23\xb4\x17\x27\x56\x7a\xa4\xe6\xe4\xe4\x6b\x28\x85\xe7\x17\xe5\xa4\x28\x41\xd4\x01\x02\x00\x00\xff\xff\xec\xd3\x87\xf9\xaf\x00\x00\x00"

func assetsTemplatesSampleProgramPkgHeaderOnlyMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgHeaderOnlyMainCpp,
		"assets/templates/sample-program/pkg-header-only/main.cpp",
	)
}

func assetsTemplatesSampleProgramPkgHeaderOnlyMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgHeaderOnlyMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg-header-only/main.cpp", size: 175, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgHeaderOnlyPrinterH = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x31\x4b\x04\x31\x10\x46\xfb\xf9\x15\x1f\x97\x46\xb7\x30\xbd\x06\x1b\x39\x38\x1b\x39\x8e\x03\x4b\x89\x99\x09\x19\x08\x89\x24\xbb\xea\x22\xfe\x77\xd9\x28\x78\xdd\xf0\x98\x37\x6f\x8c\xc6\xc2\x12\x71\x3c\x3d\x3e\x9d\xf7\xa7\x97\x03\x19\x96\xa8\x45\x2e\x08\x19\x2d\x21\x2f\x2c\x70\x0f\xb5\x7b\x7b\x6e\x3e\xc8\x4d\x4a\xf7\x44\xd6\xe2\xd8\xb4\xcc\x1d\x07\xc9\xb9\xc2\x17\xc6\x9c\x04\x1f\xb5\x31\xfa\x9b\x04\x8d\x2a\x8c\xd7\x75\xd0\xa5\x4b\xdb\x94\xfd\xe7\xed\xdf\xfe\x73\x6d\x99\xe9\xbd\x2a\xa3\xfb\x75\xb0\xab\x90\x7c\x9b\xc6\x85\x6b\x7c\x11\x00\xcc\x5b\x10\xce\x61\xf7\x6b\xed\xb6\x79\x24\x9c\x83\x14\xce\x77\xf4\x4d\x64\xa4\xb0\x46\xd8\xe9\xff\x75\x4c\x96\x7e\x02\x00\x00\xff\xff\xd5\xea\xf2\x80\xe2\x00\x00\x00"

func assetsTemplatesSampleProgramPkgHeaderOnlyPrinterHBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgHeaderOnlyPrinterH,
		"assets/templates/sample-program/pkg-header-only/printer.h",
	)
}

func assetsTemplatesSampleProgramPkgHeaderOnlyPrinterH() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgHeaderOnlyPrinterHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg-header-only/printer.h", size: 226, mode: os.FileMode(436), modTime: time.Unix(1531784988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/cli-helper/app-help.txt": assetsCliHelperAppHelpTxt,
	"assets/cli-helper/command-help.txt": assetsCliHelperCommandHelpTxt,
	"assets/cli-helper/subcommand-help.txt": assetsCliHelperSubcommandHelpTxt,
	"assets/configurations/structure-avr.json": assetsConfigurationsStructureAvrJson,
	"assets/templates/cmake/CMakeListsAVR.txt.tpl": assetsTemplatesCmakeCmakelistsavrTxtTpl,
	"assets/templates/cmake/CMakeListsNative.txt.tpl": assetsTemplatesCmakeCmakelistsnativeTxtTpl,
	"assets/templates/config/app-helper.txt": assetsTemplatesConfigAppHelperTxt,
	"assets/templates/config/dependencies-helper.txt": assetsTemplatesConfigDependenciesHelperTxt,
	"assets/templates/config/pkg-helper.txt": assetsTemplatesConfigPkgHelperTxt,
	"assets/templates/config/targets-helper.txt": assetsTemplatesConfigTargetsHelperTxt,
	"assets/templates/gitignore/.gitignore-clion": assetsTemplatesGitignoreGitignoreClion,
	"assets/templates/gitignore/.gitignore-general": assetsTemplatesGitignoreGitignoreGeneral,
	"assets/templates/ide/clion/app/CMakeLists.txt.tpl": assetsTemplatesIdeClionAppCmakelistsTxtTpl,
	"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
	"assets/templates/ide/clion/lib/CMakeLists.txt.tpl": assetsTemplatesIdeClionLibCmakelistsTxtTpl,
	"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
	"assets/templates/readme/APP_README.md": assetsTemplatesReadmeApp_readmeMd,
	"assets/templates/readme/PKG_README.md": assetsTemplatesReadmePkg_readmeMd,
	"assets/templates/sample-program/app/main.cpp": assetsTemplatesSampleProgramAppMainCpp,
	"assets/templates/sample-program/pkg/main.cpp": assetsTemplatesSampleProgramPkgMainCpp,
	"assets/templates/sample-program/pkg/output.cpp": assetsTemplatesSampleProgramPkgOutputCpp,
	"assets/templates/sample-program/pkg/output.h": assetsTemplatesSampleProgramPkgOutputH,
	"assets/templates/sample-program/pkg-header-only/main.cpp": assetsTemplatesSampleProgramPkgHeaderOnlyMainCpp,
	"assets/templates/sample-program/pkg-header-only/printer.h": assetsTemplatesSampleProgramPkgHeaderOnlyPrinterH,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"cli-helper": &bintree{nil, map[string]*bintree{
			"app-help.txt": &bintree{assetsCliHelperAppHelpTxt, map[string]*bintree{}},
			"command-help.txt": &bintree{assetsCliHelperCommandHelpTxt, map[string]*bintree{}},
			"subcommand-help.txt": &bintree{assetsCliHelperSubcommandHelpTxt, map[string]*bintree{}},
		}},
		"configurations": &bintree{nil, map[string]*bintree{
			"structure-avr.json": &bintree{assetsConfigurationsStructureAvrJson, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"cmake": &bintree{nil, map[string]*bintree{
				"CMakeListsAVR.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistsavrTxtTpl, map[string]*bintree{}},
				"CMakeListsNative.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistsnativeTxtTpl, map[string]*bintree{}},
			}},
			"config": &bintree{nil, map[string]*bintree{
				"app-helper.txt": &bintree{assetsTemplatesConfigAppHelperTxt, map[string]*bintree{}},
				"dependencies-helper.txt": &bintree{assetsTemplatesConfigDependenciesHelperTxt, map[string]*bintree{}},
				"pkg-helper.txt": &bintree{assetsTemplatesConfigPkgHelperTxt, map[string]*bintree{}},
				"targets-helper.txt": &bintree{assetsTemplatesConfigTargetsHelperTxt, map[string]*bintree{}},
			}},
			"gitignore": &bintree{nil, map[string]*bintree{
				".gitignore-clion": &bintree{assetsTemplatesGitignoreGitignoreClion, map[string]*bintree{}},
				".gitignore-general": &bintree{assetsTemplatesGitignoreGitignoreGeneral, map[string]*bintree{}},
			}},
			"ide": &bintree{nil, map[string]*bintree{
				"clion": &bintree{nil, map[string]*bintree{
					"app": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
					"lib": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
				}},
			}},
			"readme": &bintree{nil, map[string]*bintree{
				"APP_README.md": &bintree{assetsTemplatesReadmeApp_readmeMd, map[string]*bintree{}},
				"PKG_README.md": &bintree{assetsTemplatesReadmePkg_readmeMd, map[string]*bintree{}},
			}},
			"sample-program": &bintree{nil, map[string]*bintree{
				"app": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramAppMainCpp, map[string]*bintree{}},
				}},
				"pkg": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramPkgMainCpp, map[string]*bintree{}},
					"output.cpp": &bintree{assetsTemplatesSampleProgramPkgOutputCpp, map[string]*bintree{}},
					"output.h": &bintree{assetsTemplatesSampleProgramPkgOutputH, map[string]*bintree{}},
				}},
				"pkg-header-only": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramPkgHeaderOnlyMainCpp, map[string]*bintree{}},
					"printer.h": &bintree{assetsTemplatesSampleProgramPkgHeaderOnlyPrinterH, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

