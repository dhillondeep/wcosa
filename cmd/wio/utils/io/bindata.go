// Code generated by go-bindata.
// sources:
// ../../../../assets/.DS_Store
// ../../../../assets/cli-helper/app-help.txt
// ../../../../assets/cli-helper/command-help.txt
// ../../../../assets/cli-helper/subcommand-help.txt
// ../../../../assets/config/create_paths.json
// ../../../../assets/config/defaults.yml
// ../../../../assets/config/paths.yml
// ../../../../assets/config/update_paths.json
// ../../../../assets/templates/.DS_Store
// ../../../../assets/templates/cmake/CMakeListsApp.txt.tpl
// ../../../../assets/templates/cmake/CMakeListsPkg.txt.tpl
// ../../../../assets/templates/cmake/dependencies.txt
// ../../../../assets/templates/config/app-helper.txt
// ../../../../assets/templates/config/dependencies-helper.txt
// ../../../../assets/templates/config/pkg-helper.txt
// ../../../../assets/templates/config/project-app.yml
// ../../../../assets/templates/config/project-pkg.yml
// ../../../../assets/templates/config/targets-helper.txt
// ../../../../assets/templates/gitignore/.gitignore-clion
// ../../../../assets/templates/gitignore/.gitignore-general
// ../../../../assets/templates/ide/clion/app/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/readme/APP_README.md
// ../../../../assets/templates/readme/PKG_README.md
// ../../../../assets/templates/sample-program/app/main.cpp
// ../../../../assets/templates/sample-program/pkg/main.cpp
// ../../../../assets/templates/sample-program/pkg/output.cpp
// ../../../../assets/templates/sample-program/pkg/output.h
// DO NOT EDIT!

package io

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsDs_store = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xc1\xaa\xd3\x40\x14\x40\xef\xa4\xb1\x4e\x2a\x62\x16\x82\x5d\x66\x23\xb8\xe8\xa2\x35\x62\x11\x11\x42\xac\x8b\xee\x84\x88\x2e\xaa\xb4\x49\x13\xdb\x40\x9a\x29\x49\x6a\xd0\x18\xe9\x6f\xe8\x1f\xf8\x29\x7e\x81\x9f\xa3\x24\x73\x95\x10\xeb\x7b\xab\xc7\xcb\x7b\xdc\x03\xe5\x4c\x9b\xb9\xd3\xf6\x4e\x3b\xb9\x33\x00\xc0\xec\x83\x3f\x01\xd0\x01\x80\x83\xb4\xa2\xc1\x49\x38\x3e\xfe\x41\x41\xab\xd5\x78\xf5\x18\x21\x6c\xe6\x91\x58\x7b\x91\xf0\x4e\x8f\x45\x74\x8c\x6a\xee\xfa\xb0\x06\x01\x31\xbc\x6f\xcd\x5f\xf5\xa3\x78\x0a\x00\x0f\x7e\xd5\xd4\xfd\x35\xc8\x20\x80\x1d\xec\x21\x02\xb7\x6e\xa7\xad\x88\xef\xe7\x47\x78\x79\xba\xc7\x88\x1f\xde\x3e\x0a\xd3\x6c\x3c\xfe\xc9\x94\x9e\x7a\xa3\x7f\x93\xf3\x01\x1f\xdc\x1e\xbc\x73\xb6\x22\x77\x32\x37\x3b\xa4\xb6\x9b\x2c\xaa\x67\x2f\xdd\x6c\xeb\x61\xfb\x95\x10\xd1\xdf\xb6\xeb\xbd\x0e\x83\x7c\xa9\xdf\x7d\x2e\xe2\xcc\x0d\xe3\x20\xa9\x83\x43\x3f\xf0\xdc\xe4\xed\x9b\x30\xf6\x45\x6e\x8b\x43\xec\xa7\x8b\xc6\x05\xce\x35\xae\x2d\xf5\x61\x51\x3c\x34\xa7\x23\xc3\x34\x9f\x94\x23\xa3\x98\x4e\xc7\x23\xe3\x91\xf9\xb8\x2c\x35\x7e\xef\xfe\xe4\xd9\x7c\xb5\xfb\xf8\xa9\xf8\x5c\x7e\xf9\x2a\xf3\xc5\x18\x26\xee\x4e\x2b\x91\xdf\x4e\x7f\xd5\x0f\x4e\x12\x47\x22\xde\xc8\xbf\x08\x41\x10\x44\x37\xc0\x05\x89\xdf\xba\xec\x0f\x42\x10\x44\xe7\xa8\xd6\x07\x03\x6d\xa1\x8f\xd2\x0c\xaf\x2b\x68\xb5\x11\xa3\xa3\x0d\xb4\x85\x3e\x4a\x33\xec\xa7\xa0\x55\x34\x47\xeb\x68\x03\x6d\xa1\x8f\xd2\xb8\x68\x31\xdc\x7c\x30\x7c\x67\x86\x3b\x14\xa6\xa3\x0d\xb4\x75\x31\xb9\x21\x88\xab\x4e\x4f\x4a\xaf\xee\xff\x2f\xfe\xbf\xff\x27\x08\xe2\x1a\xc3\xd4\x99\x33\xb3\xcf\x38\xa1\x50\xb0\x10\x58\xfd\x09\x68\x15\x02\xd0\x28\x02\x14\x79\x58\x38\x6c\xbc\x4e\x85\x00\x41\x74\x8c\xdf\x01\x00\x00\xff\xff\xd4\x90\x97\x09\x04\x18\x00\x00"

func assetsDs_storeBytes() ([]byte, error) {
	return bindataRead(
		_assetsDs_store,
		"assets/.DS_Store",
	)
}

func assetsDs_store() (*asset, error) {
	bytes, err := assetsDs_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/.DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1527511662, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCliHelperAppHelpTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4d\x6e\xdb\x3a\x10\xde\xf3\x14\x1f\x8c\x2c\x0d\x1e\xc0\xc8\x0b\xe0\x17\xa0\xcd\xaa\x8b\xa0\x49\x17\x4e\x17\x94\x38\x92\x27\xa0\x48\x82\xa4\x92\x06\x02\xef\x5e\x88\x92\x2c\xdb\x69\xeb\x15\xe9\x99\xef\x6f\x46\xd2\x0f\x76\x50\x88\xdc\x79\xc3\x0d\x93\x86\xa6\x37\x32\xce\x77\x64\x13\x7c\x70\x35\xc5\x88\xc6\x05\x50\x57\x91\xd6\xa4\xa1\xbc\x37\x5c\xab\xc4\xce\x46\x29\xee\x03\xa9\x44\x5b\xfc\xdf\xb3\xd1\x5b\x7c\xa7\x98\xb6\x50\x56\xe3\xc9\x1b\xa7\x34\xf6\xcf\x8f\x23\xcd\x2b\xd5\x29\xa2\x09\xae\xc3\xbd\xeb\x3a\x65\xb5\x61\x4b\x52\x88\xf1\xe6\xec\xf2\x67\xdc\x09\x01\x00\xef\xec\x50\x17\x66\xdc\xce\x68\xa4\x0f\x4f\x77\x38\x38\x5f\x94\x7f\xe2\xd6\xf5\xc9\xf7\x09\x9a\x03\xd5\xc9\x85\x8f\xbb\x02\x1d\x7f\x93\x29\x28\x58\x7a\xc7\x98\x70\xe1\x60\x8b\x74\x24\x44\x4f\xf5\x9c\x76\x01\xcb\x55\xb8\x1a\xa3\xac\x42\x27\xd6\x12\xb1\xe0\xcf\x29\x2b\x15\x49\xc3\x59\x28\x63\x4a\xb1\x76\xb6\xe1\xb6\x0f\xd3\x84\xa0\xa9\x61\x4b\x7a\xa5\xef\xa7\xc1\x7c\xe6\x9f\x27\x76\x2d\x90\x1c\x94\x85\x4a\x49\xd5\x47\xd2\xeb\x1e\x34\xbd\x71\x4d\x2b\x6f\xe8\xed\xdf\x4c\xc7\x69\x31\xf1\x7c\x33\xf1\x5a\x28\x0a\xf1\x14\x55\x4b\x3b\x0c\x83\x7c\x20\xe3\xbf\xa9\x8e\x72\xc6\x30\x70\x03\xf9\xcc\x91\x2b\x43\x5f\x8c\x6a\x63\xce\x87\xd6\xb8\x4a\x19\x2c\x72\xc3\x40\x56\xe7\x3c\xb5\x2e\xbb\xcc\x19\xf5\x74\xc4\x61\x39\x5c\x01\x66\xf2\x7d\x68\x63\xd1\x1e\x29\x2e\x6f\x64\x22\xe5\x7c\x50\xa1\xed\xc7\x47\x32\x4a\x29\x17\xf0\x98\xb1\xe0\x0d\x59\xc8\x7d\x9f\x8e\x2e\xc4\x9c\xc5\xd7\x0b\x6f\xbb\xa9\x2d\x28\xdb\xd2\x75\x8c\x61\x90\x0b\xcd\xec\xff\x22\x86\xff\x08\xdc\x1e\x13\x72\x16\xfb\x37\xc5\x46\x55\x86\x96\x48\x71\x27\x4e\xa4\x6b\xe0\x82\xb4\x2e\x41\x3e\xb0\xa6\x71\x88\x39\x17\xfa\x57\xc7\x16\x72\x9c\x68\xc4\x66\x8b\xcd\xd8\x8a\xcd\x4b\x2a\x07\x79\x4a\x8b\xcd\x8b\xdd\xe0\xcc\xc8\x67\x5b\x97\x09\xfe\x15\xf6\x86\xad\xa6\x5f\x5b\xdc\x4c\x45\xec\xfe\xfb\x9c\x9f\x9b\xb9\xed\x6a\x0e\x33\xe6\xcf\x16\x4e\x93\xc9\x79\x7c\x81\xe7\xcb\xac\x7d\x51\x3d\xa7\x2c\xe6\x29\xc4\x42\x2b\x9e\x29\x06\x76\x76\x01\xad\x85\x15\x22\x1e\x7b\x8b\x4d\xf9\x14\xcc\x4f\xcf\xed\x91\x8c\xbf\xdb\x94\xef\x51\xe7\x02\x81\x6d\xe3\x42\x57\xde\x34\xa8\xca\xf5\x09\x6a\x69\x96\xe2\x77\x00\x00\x00\xff\xff\x16\x41\x9f\xbb\xdb\x04\x00\x00"

func assetsCliHelperAppHelpTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsCliHelperAppHelpTxt,
		"assets/cli-helper/app-help.txt",
	)
}

func assetsCliHelperAppHelpTxt() (*asset, error) {
	bytes, err := assetsCliHelperAppHelpTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/cli-helper/app-help.txt", size: 1243, mode: os.FileMode(420), modTime: time.Unix(1527804280, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCliHelperCommandHelpTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x3d\x4e\x34\x31\x0c\x86\xfb\x9c\xc2\xda\x03\xe4\x00\xdb\xad\xbe\x4f\x88\x8a\x02\x01\xcd\x8a\xc2\xb3\x6b\x42\x24\x4f\x32\x8a\xb3\xfc\xc8\xf2\xdd\xd1\xfc\x04\x4d\xa8\xe2\xd7\xf6\x63\xfb\x8d\xaa\x7f\x16\x0c\x64\xe6\xdc\x12\x1c\x41\x35\xbe\xc1\x9a\x7d\xa2\xaf\x6a\xd6\x7a\x9a\x22\x16\x5a\xb2\xf7\xc4\xd3\x03\x8e\x8b\x98\x99\x97\x28\x71\x60\xba\x63\x0c\x62\x06\xe7\x4b\x1e\x47\x4c\x57\xc8\x53\x8d\x39\xc9\xab\x2a\xa5\xab\xd9\xb6\xe1\x54\x82\x6c\xbb\x55\x7b\xb5\x6e\x38\x63\x09\xb7\x91\x52\x15\xef\x7d\x83\x7f\x9f\x79\xc4\x3f\xac\x14\x72\xf9\x9e\xaf\x6f\xf1\xd1\x01\x80\xea\xae\xd6\x21\xff\x49\x2e\x25\x2e\x07\xcd\xd4\x4e\x36\xb0\xeb\xe8\xd8\xde\x9f\x73\xa7\x0f\x8c\x8c\x03\x13\x6c\x4e\x65\x9b\x51\x30\x05\xfa\xdb\xaf\xea\xcd\xd6\xfa\xde\x89\x7b\xbc\x25\x38\x7c\xc6\x0c\xef\xc4\xd3\x01\x6a\x06\x21\x82\xc0\x79\x40\x6e\x5f\xe7\xdd\x4f\x00\x00\x00\xff\xff\xd0\xcb\xcd\x27\xa9\x01\x00\x00"

func assetsCliHelperCommandHelpTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsCliHelperCommandHelpTxt,
		"assets/cli-helper/command-help.txt",
	)
}

func assetsCliHelperCommandHelpTxt() (*asset, error) {
	bytes, err := assetsCliHelperCommandHelpTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/cli-helper/command-help.txt", size: 425, mode: os.FileMode(420), modTime: time.Unix(1527804280, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCliHelperSubcommandHelpTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xc1\x4e\xc4\x30\x0c\x44\xef\xf9\x0a\x2b\x67\x94\x0f\xe8\x6d\x85\x84\x38\x81\x84\x80\xcb\xc2\xc1\xcb\x9a\x10\x94\x26\x55\x9d\x05\x24\xcb\xff\x8e\xba\x49\xba\x2a\x9c\x5a\xbb\x9e\x99\xd7\x11\x71\x4f\x8c\x9e\x54\x8d\x39\xbf\x0c\x20\x12\xde\xa1\x6e\x1f\xe9\xa7\xa8\xf6\x9b\x3e\x51\x64\x3a\x6f\x6f\x29\x4e\x77\x38\x92\x2a\xbc\xe5\x71\xc4\x74\xac\xda\xe7\xc0\xe1\x10\xe9\x26\xa2\x67\x55\xd8\xb7\x8f\x90\xa7\x12\x72\xe2\x57\x11\x4a\x47\xd5\x96\xb4\x9b\x3d\x37\x06\x91\xed\x54\x93\xf6\x38\xfb\xd3\x48\xa9\xb0\x73\xae\x8b\xdb\xc3\x98\xdd\x17\x86\x88\x87\x48\x9d\x81\x07\x91\x19\x93\xa7\x15\xe4\x1a\x0b\xf9\x3c\x07\xe2\x45\xb7\x64\x56\x6a\x03\x00\x22\x6d\x18\x56\xe3\x3f\xe2\xe6\x5a\xcf\x17\xc1\x67\x0e\xa9\x5a\x30\xd8\x2b\xb0\x8b\xc6\xbe\x14\x7b\x69\xea\x82\xb7\x9a\xfe\xef\xc5\xdc\xd7\x3a\x86\x8a\xb1\x4d\x6d\x37\x22\xae\x63\x6e\xfe\xfa\xe1\x94\xc0\x7e\x87\x0c\x1f\x14\x27\x0b\x25\x03\x13\x81\x8f\xf9\x80\xb1\xd7\xec\xcc\x6f\x00\x00\x00\xff\xff\x7a\x3a\xa0\x4c\xdd\x01\x00\x00"

func assetsCliHelperSubcommandHelpTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsCliHelperSubcommandHelpTxt,
		"assets/cli-helper/subcommand-help.txt",
	)
}

func assetsCliHelperSubcommandHelpTxt() (*asset, error) {
	bytes, err := assetsCliHelperSubcommandHelpTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/cli-helper/subcommand-help.txt", size: 477, mode: os.FileMode(420), modTime: time.Unix(1527804280, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigCreate_pathsJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\xd4\xbf\x6a\xc3\x30\x10\x06\xf0\xdd\x4f\x21\x34\xc7\xd6\x9e\xb5\x5b\x69\x49\x08\xdd\x4a\x07\x55\xbe\x28\x57\xcb\xd6\x21\x9d\xd3\x16\xe3\x77\x2f\x36\xb4\x69\x82\x89\xf3\xa7\x49\xba\x18\x23\xbe\x33\x3f\x64\xee\x6b\x12\x21\x24\x69\x5e\x45\x39\x15\xcf\x89\x10\x42\x34\xfd\x53\x08\x89\xb9\x9c\x0a\xa9\x89\x52\x0b\x95\x9c\x7c\x1f\xc7\x60\xba\x73\x86\x92\x9c\x66\x88\xca\xf8\x6a\x89\x56\x51\xf0\x6f\x60\x38\xd5\x44\xd9\x67\xe9\x36\x03\x39\x74\x1f\x97\x4d\x33\x5f\xdc\xa7\x8b\xd9\xec\xa9\x6d\xd5\x3b\xfa\xed\x90\x5f\x43\x08\x98\x83\x9c\x8a\xa5\x76\x11\xfa\xf3\x76\x72\x9a\x28\xea\x92\x1c\xa4\x14\xbc\x0d\xba\x54\x9a\x48\x95\x1a\xab\xcc\x10\xed\x67\xc5\x60\x06\x92\x7f\x6a\xb3\xc8\x68\x2b\x1f\x40\x65\x3f\xaf\xdd\x08\x04\x3d\x72\x67\x9b\xfc\xc9\x34\xe3\xd0\x1f\x8d\xdb\x19\xba\x11\x0d\x73\x50\x7d\xa6\xff\x9d\x77\x8f\xba\x80\x07\x8c\x1c\x33\xfe\xe0\x8c\x69\xe4\xee\xb6\xf3\x57\x47\xce\x03\xae\x35\xc3\xb1\xd6\x5f\x63\x83\x64\x0e\xf5\x3e\x31\x15\xf6\xb8\xd5\xa5\xc2\x5e\x76\x75\xc7\x45\x3b\xab\x4b\x85\x55\xbe\x66\xaa\x39\x5b\xed\x67\x61\x65\x5c\x9d\xc3\x40\xfa\x4a\xbe\x83\xca\x65\x28\x7b\x69\xdf\x61\xd5\xc7\x10\x39\x9e\x57\x7e\xe3\xba\x9b\x95\x5f\x47\xfb\xa7\xe5\x77\x08\x6d\xd3\x2b\x0e\x5f\x6f\x51\x7e\xe7\x20\x2f\x5e\x7e\x89\x10\x2f\x49\x9b\x7c\x05\x00\x00\xff\xff\x60\xef\xe0\xaf\xcc\x08\x00\x00"

func assetsConfigCreate_pathsJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigCreate_pathsJson,
		"assets/config/create_paths.json",
	)
}

func assetsConfigCreate_pathsJson() (*asset, error) {
	bytes, err := assetsConfigCreate_pathsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/create_paths.json", size: 2252, mode: os.FileMode(420), modTime: time.Unix(1527450523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigDefaultsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcf\x31\x6e\xe4\x30\x0c\x85\xe1\x5e\xa7\x78\xa0\xfb\xc1\x6e\x15\xc0\xa7\x48\x91\x0b\xd0\x12\x35\x16\x22\x91\x06\x25\x39\xc8\xed\x03\x27\x93\x29\xc3\x96\x1f\x7e\xe0\x2d\x78\xdb\x4b\x47\x34\x1d\x5c\xb4\x83\x6b\xc5\xd8\x05\x49\x32\xcf\x3a\x70\x72\x9d\xd2\x91\xcd\x11\xad\x35\xd6\x54\x8b\x0a\xd8\xef\xb3\x89\x8e\x1e\x16\xbc\xf2\xd8\x7f\x1d\xbb\x40\x6d\xa0\x68\xac\x33\x49\xc2\x26\x91\x67\x97\xab\xf9\xf9\xfd\x6d\x1c\xf7\xab\xd0\x0f\x89\x25\x97\x18\x42\x49\xb2\x82\xd4\x54\x28\x64\xe7\x26\x1f\xe6\xef\x2b\x28\x5a\x67\x0a\x47\xe5\x91\xcd\xdb\x0a\xe2\xd3\x29\x1c\xe6\xe3\xc9\x4f\xf1\x5e\x4c\x57\xd0\xbf\xdb\xff\xdb\x0b\x85\xcd\xd8\xd3\x0a\x9a\x6a\x14\xb6\xc1\x7e\x97\x4b\x3f\xd6\x10\x1e\xb7\x60\x9b\xa5\x26\xfc\x80\x30\xff\x80\xf3\xa8\xc6\x4f\xf9\x15\x00\x00\xff\xff\x7f\x63\xe3\x56\x2f\x01\x00\x00"

func assetsConfigDefaultsYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigDefaultsYml,
		"assets/config/defaults.yml",
	)
}

func assetsConfigDefaultsYml() (*asset, error) {
	bytes, err := assetsConfigDefaultsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/defaults.yml", size: 303, mode: os.FileMode(420), modTime: time.Unix(1527804355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigPathsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\x4a\x29\xcd\xcc\xcb\xd7\x2d\x4e\xc9\xd6\x2d\x48\x2c\xc9\xb0\x52\x50\x52\xe2\x4a\xce\x2f\x4e\x44\x15\x49\x2c\x2b\x42\xe2\x14\xe5\x22\x38\xb9\x89\xd9\xa9\x48\x3a\x51\xb9\x80\x00\x00\x00\xff\xff\x60\xc2\x95\x1d\x5e\x00\x00\x00"

func assetsConfigPathsYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigPathsYml,
		"assets/config/paths.yml",
	)
}

func assetsConfigPathsYml() (*asset, error) {
	bytes, err := assetsConfigPathsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/paths.yml", size: 94, mode: os.FileMode(420), modTime: time.Unix(1527450523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigUpdate_pathsJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\xd3\x41\x4b\xf4\x30\x10\x06\xe0\x7b\x7e\xc5\x90\xf3\xb6\xb9\xf7\xfa\xdd\x3e\x94\x5d\x16\x6f\xe2\x21\xb6\xb3\x71\x6c\xb6\x19\x92\x71\x55\x4a\xff\xbb\xb4\xa0\x75\x45\xac\x5d\x59\xeb\xa5\x94\x61\xde\xf0\x10\xf2\xb6\x0a\x40\xb3\x95\xbb\xa4\x0b\xb8\x56\x00\x00\xed\xf0\x05\xd0\x54\xe9\x02\xb4\x65\xce\x1c\x36\x7a\xf5\x3a\x4e\xb1\xec\xe7\x82\x7b\xf6\x56\x30\x99\x32\x34\x3b\x72\x86\x63\xb8\xc7\x52\x32\xcb\x9c\x3f\xef\xfd\x18\xa8\xb0\x3f\x5c\xb7\xed\x66\xfb\x3f\xdb\xae\xd7\x57\x5d\x67\x1e\x29\x1c\x2f\x85\x03\xc6\x48\x15\xea\x02\x76\xd6\x27\x1c\xe6\xdd\xea\x34\x91\x23\x21\xd7\x84\x88\x26\x7f\xfb\xed\x23\x18\xed\x84\x6b\xdc\x3f\x99\x56\x7a\x0a\xb3\x71\x1f\x42\x0b\xd1\xa8\x42\x33\xec\x18\xcb\x6c\xfe\x5d\xda\x1a\x2f\x28\x49\xca\xe5\x49\x72\xe1\x89\xbb\x3b\xde\xff\x75\xe4\x26\xd2\xc1\x0a\xce\xb5\xbe\x8b\x7d\x4a\x96\xf8\xf0\x95\x98\x6b\x37\xaf\x1e\x5c\xbb\xf3\xd6\x63\x5a\xb4\x58\x3d\x7a\xda\x1f\xad\xc7\x77\x68\xe3\xcb\xf3\x74\xbb\x44\x3d\x7e\x82\x3c\x7b\x3d\x14\xc0\x8d\xea\xd4\x4b\x00\x00\x00\xff\xff\x0a\x46\xbb\x19\x52\x06\x00\x00"

func assetsConfigUpdate_pathsJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigUpdate_pathsJson,
		"assets/config/update_paths.json",
	)
}

func assetsConfigUpdate_pathsJson() (*asset, error) {
	bytes, err := assetsConfigUpdate_pathsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/update_paths.json", size: 1618, mode: os.FileMode(420), modTime: time.Unix(1527450523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesDs_store = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xc1\x8e\xd2\x40\x18\xc7\xff\x53\xd8\xdd\x29\x46\xed\xc1\x64\xf7\xd8\x8b\x89\x07\x4c\x58\x31\x12\x63\x4c\x08\xae\x87\xbd\x99\x60\xf4\xb0\x9a\xdd\x96\x56\xb6\xb1\x74\x48\x5b\x24\x8a\x18\x2e\x3e\x84\xbe\x81\x8f\xe2\x13\xf8\x20\x3e\x80\x66\x3a\x9f\x5a\x07\xf4\x66\x44\xf3\xfd\x12\xf2\x2b\x9d\xef\x1b\xe0\x2b\x0c\xf3\x15\x80\x18\xcc\xa2\x43\xc0\x03\x20\x61\xec\xb8\xd8\x88\xa4\xc7\x1a\x0e\x79\x4f\xcf\x57\xcd\x11\x1f\xa7\x6a\x14\xa6\x2a\xdc\x3c\x13\xb3\x75\xe8\x6b\xb7\x83\x11\x26\x08\xf0\xfc\xa7\xeb\xa7\xbf\x12\x77\x00\x5c\xfb\x52\x51\x45\xef\x62\x04\x85\x0c\xcf\x90\x60\x6c\xc5\x7e\xf8\x5d\x6c\x38\x2f\xa6\x14\xfb\x31\x9c\xa6\x49\x51\x76\x3a\x9f\x84\xd3\x68\xee\xec\xee\x49\xd9\x92\xad\x8b\xad\xa7\xc3\x73\x35\x1f\x96\x41\x39\x2b\x06\x41\x7e\xa2\x9f\x3d\x08\xca\xf3\x90\x8e\x1f\x2a\x95\x7e\x3f\x0e\xc2\x47\x49\x3c\x3f\xf5\xae\xdc\x53\x59\x19\x24\x59\x9c\x57\xc9\x49\x14\x87\x41\xfe\xe4\x71\x92\x45\x6a\x3e\x50\xb3\x2c\x2a\x4e\x6a\x03\x52\xba\xd2\x3d\xf5\x0e\x16\x8b\x1b\xdd\x5e\xdb\xef\x76\x6f\x2f\xdb\xfe\xa2\xd7\xeb\xb4\xfd\x9b\xdd\x5b\xcb\xa5\x2b\xf7\xaf\x1e\xde\x3d\x3e\x9b\xbc\x7c\xb5\x78\xbd\x7c\xf3\xce\x54\x48\x08\x2a\xd5\x65\xab\x74\xef\xed\x0f\xf9\x62\x98\x67\xa9\xca\xc6\xe6\xe7\x00\x17\x63\x24\x28\xf5\x08\x32\x28\xe4\x76\x79\xc5\xbe\x55\xb2\x06\x12\x44\x6b\x51\x6f\xad\xa8\x4b\x28\x10\x60\x82\x29\x52\xc4\xb8\x8e\x29\x72\x28\x8c\x91\xeb\xb3\x56\xee\x67\x2b\x97\x61\x18\xa6\x82\x16\x36\x79\xe1\x6f\xbf\x11\x86\x61\xb6\x0e\xbd\x3e\xf8\xe4\x3e\x79\x65\x2c\x68\xdc\x21\x37\x6b\x39\x1e\xd9\x27\xf7\xc9\x2b\x63\x41\x71\x0e\xb9\x49\x96\x64\x8f\xec\x93\xfb\xe4\x95\x31\x2d\x5a\x82\x9a\x0f\x41\xaf\x2c\xa8\x43\x11\x1e\xd9\x27\xf7\xff\x4c\x6d\x18\xe6\x5f\xa7\x61\xe4\xe9\xff\xff\xfb\xbf\xee\xff\x19\x86\xf9\x8f\x11\xcd\xa3\xe1\xd1\xe0\x47\x43\xb0\x86\x43\x1b\x81\xb3\x6f\x09\xd6\x46\x00\xb5\x4d\x80\x63\x6e\x16\x1e\xd4\xce\xf3\x46\x80\x61\xb6\x8c\xaf\x01\x00\x00\xff\xff\xde\x6b\x9a\x75\x04\x18\x00\x00"

func assetsTemplatesDs_storeBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesDs_store,
		"assets/templates/.DS_Store",
	)
}

func assetsTemplatesDs_store() (*asset, error) {
	bytes, err := assetsTemplatesDs_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1527511662, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistsappTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x6f\xda\x40\x10\xbd\xfb\x57\x4c\x29\x07\xbb\x07\x40\xcd\x2f\x70\xcc\x92\xd0\x18\x16\xad\x0d\x4d\x4f\xab\x8d\x3d\x86\x6d\xec\xb5\xbb\xbb\x56\x54\x59\xfe\xef\x95\xcd\x47\x00\x35\x55\x5a\xf5\x04\x33\xf3\xf4\xf6\xcd\xcc\x1b\x1b\xb4\x6e\xb0\xf0\x1f\x08\xdf\x10\x06\x37\xa3\xc9\x68\xe2\x39\x5d\x72\xc5\xe8\x17\x12\xc4\x7c\xe9\x2f\x08\x34\xcd\x79\xd8\xb6\x97\x90\x95\x1f\xdf\xc3\xe0\x15\xd3\xc5\x6d\x3b\xd8\x83\xf6\xe4\x31\xa5\x61\x70\xef\xcf\x97\x27\xf0\x65\xe6\x08\x87\x03\x7e\x41\xa7\xeb\x90\x1c\xc0\xc3\x66\x9f\x0c\xd6\x8c\x91\x65\xcc\x23\xba\x66\x01\xe1\xd3\x39\x3b\x3e\x32\x25\x2b\xb2\x9c\x92\x65\xf0\x8d\xcf\xe6\x21\x81\x14\x2b\x54\x29\xaa\x44\xa2\xf1\x1c\xe7\x23\x88\x3c\x07\xbb\x43\xa8\x84\xdd\x19\xb0\x65\x99\x27\x3b\x21\x15\x24\x42\xc1\x13\x82\xb0\xe0\xda\x9d\x34\x20\x0d\x3c\x61\x22\x6a\x83\x50\x66\x90\xca\x2c\x43\x8d\xca\x42\x25\x92\x67\xb1\x45\x28\x84\x12\x5b\xd4\xc6\x73\x64\x06\x2e\x79\x9c\x47\x71\xf4\x2a\xf0\xaa\xa7\xf1\x79\x97\x9d\x2e\xce\x48\xd8\x77\x0a\x00\xf0\xbb\xe1\xf4\xe2\xff\x9e\x0e\x73\x83\xef\xd1\x33\x1a\xfd\x6f\x49\x7f\x62\xbc\x56\x35\xae\x8d\x1e\x9b\x9d\xd0\x38\x7e\x91\xe5\xbf\x2a\x79\x2f\x4b\xf7\xba\xbb\x27\x2b\xd0\x18\xb1\x45\x77\xe6\xc7\x7e\xc8\x09\x63\x94\xc1\x20\x3e\xf7\x80\x2a\x6d\x67\x83\xac\xac\x55\x3a\x82\xdb\x5a\xe6\x29\xdc\x8b\xdc\x62\xfa\xa1\xa3\x52\xa9\xcc\xdc\xde\x47\x95\x2e\x2b\xd4\x56\xa2\xe9\x7d\x17\xfb\xec\x8e\x9c\x6e\xe4\x2c\x3a\x9e\xc8\x2d\xf5\xd9\x14\x9a\xa6\xff\x3d\x26\x67\xcc\x5f\x90\xaf\x94\x3d\x40\xd3\x9c\xfe\x77\x45\x27\x29\xc4\x33\xf2\x42\x2a\x59\xd4\x05\xd7\xf8\xa3\x96\x1a\x53\x77\x43\x58\x34\xa7\x4b\x38\x6e\xe1\x10\xb7\x9e\x53\xe9\xf2\x3b\x26\xd6\x1d\x5e\x1e\x28\x04\x10\x3c\x3e\x82\x1f\x2d\xbc\x03\x67\x55\xe6\x32\xf9\xe9\x46\x24\x86\x60\xb1\x9a\x4c\x3e\xdf\x00\x0d\xa7\x9e\xe3\x48\x95\xe4\x75\x8a\xee\xb0\xb9\x3a\xa2\x4e\x4f\x26\x73\x74\xef\x42\x7a\xcb\x19\x09\xd6\x2c\x22\x10\xb1\xa0\xaf\xf6\x2e\xbb\x38\xf8\xb1\xd1\xc9\xf8\xd3\x28\xa9\xaa\xc1\x9b\xb5\xe4\xed\xd2\xc0\x73\xb6\xa8\x50\x0b\x8b\x5c\xe8\xb4\x96\xaa\xe4\x99\xd4\xc5\x8b\xd0\x9d\xb8\xf3\xd9\xf6\x4b\x8d\x58\x10\xc1\xb0\x39\xe9\xd9\x67\xf7\xf3\x1e\x1e\xe6\xdd\xa7\x56\x94\xc5\xdd\x07\x8c\xb2\xb8\x9b\xb1\x15\x7a\x8b\x96\x27\x65\x51\xc9\x1c\x79\x8a\x99\x54\xd2\xca\x52\x99\xab\x57\x60\xc5\xe6\x1b\x3f\x26\xc0\xb9\xbf\x61\x7c\x78\xb6\x2a\xce\x5f\xb7\x1d\xd0\xc5\xaa\xf3\xdd\x2c\xf4\xef\xa2\xb6\xf5\x7e\x05\x00\x00\xff\xff\xf0\xfe\x56\x19\x51\x05\x00\x00"

func assetsTemplatesCmakeCmakelistsappTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistsappTxtTpl,
		"assets/templates/cmake/CMakeListsApp.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistsappTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistsappTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsApp.txt.tpl", size: 1361, mode: os.FileMode(420), modTime: time.Unix(1527804280, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistspkgTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xdd\x92\xb2\x46\x10\xbd\x0e\x4f\xd1\x31\x5e\x40\x2e\xd4\xca\xf7\x04\x88\xa3\x4b\x16\xc5\x1a\xd0\x6c\xae\xa6\x66\xa1\xd1\xc9\xc7\x5f\x66\x86\xfa\x6a\x8b\xe2\xdd\x53\x20\xba\xfe\x66\x77\x53\xb9\xd2\xee\x3e\x9e\x39\xdd\xa7\x5b\x85\xda\x74\x96\xf6\x33\x61\x5b\x42\xe1\xdb\x68\x32\x9a\x58\x46\x9b\x5c\x53\xff\x77\xe2\x84\x6c\x65\x2f\x09\xd4\xf5\x79\xd8\x34\x97\x90\xb5\x1d\x3e\xc1\xe0\x1d\xd3\xc6\x4d\x33\x38\x80\x0e\xe4\xa1\xef\x7b\xce\x93\xed\xae\x4e\xe0\xcb\xcc\x11\x0e\x3d\x7e\xe9\xcf\x36\x1e\xe9\xc1\xc3\xfa\x90\x74\x36\x94\x92\x55\xc8\x02\x7f\x43\x1d\xc2\x66\x2e\x3d\x3e\x32\x23\x6b\xb2\x9a\x91\x95\xf3\x27\x9b\xbb\x1e\x81\x18\x4b\xcc\x63\xcc\x23\x81\xca\x32\x8c\x5f\x80\xa7\x29\xe8\x3d\x42\xc9\xf5\x5e\x81\x2e\x8a\x34\xda\x73\x91\x43\xc4\x73\x78\x45\xe0\x1a\x4c\xbd\x17\x0a\x84\x82\x57\x8c\x78\xa5\x10\x8a\x04\x62\x91\x24\x28\x31\xd7\x50\xf2\xe8\x3b\xdf\x21\x64\x3c\xe7\x3b\x94\xca\x32\x44\x02\x26\x79\x71\x83\x30\x78\x17\x78\xd5\xd3\xf8\xbc\xcb\x56\x17\xa3\xc4\xeb\x3a\x05\x00\xb8\x37\x9c\x4e\xfc\xd7\xe9\x30\x55\xf8\x19\x3d\xa3\xd1\xff\x2d\xe9\xdf\x18\xaf\x55\x8d\x2b\x25\xc7\x6a\xcf\x25\x8e\x7f\x88\xe2\xbf\x2a\xf9\x2c\x4b\xfb\xba\x79\x20\xcb\x50\x29\xbe\x43\x73\x6e\x87\xb6\xc7\x08\xa5\x3e\x85\x41\x78\xbe\x03\x79\xa1\xdb\x35\x48\x8a\x2a\x8f\x47\x30\xad\x44\x1a\xc3\x13\x4f\x35\xc6\x3f\xb7\x54\x79\x2c\x12\xb3\xdb\xa3\x52\x16\x25\x4a\x2d\x50\x75\x7b\x17\xda\x74\x41\x4e\x37\x72\x16\x1d\x4f\x64\xea\xdb\x74\x06\x75\xdd\x7d\x1e\x93\x73\x6a\x2f\xc9\x1f\x3e\x7d\x86\xba\x3e\x7d\x6f\x8b\x46\x94\xf1\xef\xc8\x32\x91\x8b\xac\xca\x98\xc4\xbf\x2b\x21\x31\x36\xb7\x84\x06\xae\xbf\x82\xa3\x0b\x7d\xdc\x58\x46\x29\x8b\xbf\x30\xd2\xe6\xf0\xf2\x40\xc1\x01\xe7\xe5\x05\xec\x60\x69\xf5\x9c\x65\x91\x8a\xe8\xcd\x0c\x48\x08\xce\x72\x3d\x99\xfc\xf6\x0d\x7c\x6f\x66\x19\x86\xc8\xa3\xb4\x8a\xd1\x1c\xd6\x57\x47\xd4\xea\x49\x44\x8a\xe6\xc2\xf3\xa7\x8c\x12\x67\x43\x03\x02\x9e\x3b\xed\xaa\xdd\x96\x5d\x1c\xfc\x58\xc9\x68\xfc\xeb\x28\x2a\xcb\xc1\xc3\x5a\xf4\xb8\x34\xb0\x8c\x1d\xe6\x28\xb9\x46\xc6\x65\x5c\x89\xbc\x60\xa9\x78\x95\x5c\xbe\x5d\x77\x67\xfc\x14\x50\x27\x80\x61\x7d\x12\xd3\x74\x3e\x1f\x86\x3d\xec\x87\x6d\x19\x9a\xcb\x1d\x6a\x16\x15\x59\x29\x52\x64\x31\x26\x22\x17\x5a\x14\xb9\xba\x99\xd7\x9a\xba\x5b\x3b\x24\xc0\x98\xbd\xa5\x6c\x78\x66\x0b\x63\xed\xbf\xdf\xf3\x82\x39\xfe\x72\xdd\x2e\xd8\xdc\xb3\x17\x41\xf3\x4e\xdf\x0f\x90\xc5\x42\x62\xa4\x0b\x29\xf0\x0e\xfd\x66\xea\xb9\xce\x6d\xef\xfd\x6f\x07\x5f\x23\xeb\xb5\xde\x9b\xe4\xe0\xae\x69\x01\x75\x1e\x99\xa6\x51\x69\xf5\xd0\xb6\x53\xf5\x9e\x71\xa7\xe2\x3d\xeb\x12\x21\xb3\x1f\x5c\xb6\x7b\x75\x7e\x16\x9d\x4f\xbd\x7b\x27\x55\x87\xac\xe7\x4e\xdb\xec\xa5\xd3\xb7\xb6\x76\xa9\xb5\x4f\xc3\xd6\x16\x9f\x86\xcd\x47\x46\x9f\x3f\xff\x91\xcf\x3d\xf6\xc6\xea\x7f\x02\x00\x00\xff\xff\x05\x92\xb6\xba\x26\x07\x00\x00"

func assetsTemplatesCmakeCmakelistspkgTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistspkgTxtTpl,
		"assets/templates/cmake/CMakeListsPkg.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistspkgTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistspkgTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsPkg.txt.tpl", size: 1830, mode: os.FileMode(420), modTime: time.Unix(1527804280, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeDependenciesTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x4f\x6b\xc2\x40\x14\xc4\xcf\xe6\x53\x2c\xc1\x83\xe9\xa1\x7e\x86\xcd\xe6\xc5\x86\xe6\x1f\xbb\x6a\xe9\xe9\x91\x6e\x9e\xf2\x20\x4d\xc2\x1a\x0f\x25\xec\x77\x2f\x14\x69\x11\x54\xe8\x69\x0e\xc3\xfc\x66\x98\x03\x77\xb4\xda\xe4\x55\x8c\x1a\xd4\x4e\x1b\x10\x46\x2b\x4c\xb3\x1c\x8c\x08\xe7\x39\x81\x1a\xca\x04\x4a\xf5\x8e\xb5\xdc\xbe\x78\xbf\x3e\x39\xbb\x7e\x7a\xb6\xe3\x18\x3e\xf4\xed\x63\x3b\x8c\x82\x23\xf5\xe4\x9a\x89\xb0\x71\xed\x99\xfb\x01\x3b\xfe\x70\x8d\xfb\x5a\x5d\xc5\x4a\x59\x80\xf7\xc1\xc2\x68\x65\xc4\x72\xfe\x1d\xe7\x83\x45\x5c\x49\x9d\x88\xe5\xfc\xa3\x3e\x0a\xa6\xc6\x1d\x69\x42\x3b\x7c\x8e\xdc\x11\xb6\x74\xe0\x9e\x27\x1e\xfa\xd3\x2d\xa4\xa8\x75\xb6\x97\x5b\x10\x88\x72\xaf\x71\x39\xa7\x5a\x16\xf0\x56\xe9\x57\x8f\x28\xae\x02\xaa\x2a\xea\x2c\x07\x4c\x73\xb9\x31\xfe\xaf\x89\x7b\xdb\x9d\x5b\xc2\x96\x1d\xd9\x69\x70\x4c\x77\x9a\x76\x71\x9e\xa9\xdb\x7f\x5c\x18\xe1\xff\xa1\x97\xf9\xf7\x5e\x0e\xa3\xef\x00\x00\x00\xff\xff\xc1\x85\xd3\xd1\xdb\x01\x00\x00"

func assetsTemplatesCmakeDependenciesTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeDependenciesTxt,
		"assets/templates/cmake/dependencies.txt",
	)
}

func assetsTemplatesCmakeDependenciesTxt() (*asset, error) {
	bytes, err := assetsTemplatesCmakeDependenciesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/dependencies.txt", size: 475, mode: os.FileMode(420), modTime: time.Unix(1527450523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigAppHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xb1\x6e\xdc\x30\x0c\x86\xf7\x7b\x8a\x1f\xbe\xa5\x1d\xea\x07\xe8\x16\xa0\xc8\xd2\x21\x41\x5a\xa4\x33\x4f\xe2\x9d\xd9\x93\x45\x41\xa4\xce\x75\x9f\xbe\x90\xe3\x14\x4d\x33\xda\x22\xf8\x7f\xff\xc7\x23\x06\x2a\x65\x80\xd3\x05\x41\xb3\x93\x64\x43\xd0\xca\x90\x7c\xd6\x3a\x93\x8b\x66\xd0\x49\x9b\xc3\x27\x46\xa9\xfa\x93\x83\x8f\xf8\x3e\x89\x61\x91\x94\xfa\xaf\xd8\x02\x83\x7f\x71\x68\x4e\xa7\xc4\xa0\x1c\x5f\xde\x4e\x8c\x56\x92\x52\xe4\x78\x38\xc2\x15\x94\xc1\xf3\x89\x63\xe4\x88\xc8\x37\x09\x3c\xe2\x5e\x53\xd2\x45\xf2\x05\x54\x19\xa6\x33\xe3\xca\x2b\x8a\x4a\x76\xdb\xb3\x43\x33\xd7\x59\x7e\xf7\xa9\x55\x5b\x05\x95\x92\x24\x6c\x78\x9f\x0f\x47\x7c\xc2\x7d\xa5\x99\x17\xad\x57\xdb\xd6\x7c\xfb\xf2\xd5\x70\xd6\xfa\x7f\x9c\x75\x74\x5e\x5f\xcb\xc2\xd8\xa1\x67\x24\x39\x55\xaa\xc2\xd6\x21\x9b\x31\x96\x89\x33\x82\x46\xc9\x97\xf1\x70\x04\xf0\x43\x14\xd6\x4a\xd1\xea\xbb\xa1\x21\xa8\xd1\x00\x8b\x57\x7c\xa0\x0c\x2d\x9c\x61\xda\x6a\x60\x3c\x3c\x3c\xe2\xee\xf9\xa9\x67\x72\xd2\x32\x73\x76\x94\x44\xde\x95\x7e\xdc\xf4\xf0\x8d\xb3\x37\x4a\x69\xc5\x40\x35\x36\xc9\xba\xad\x1a\xb7\x32\x8f\xfb\x2c\xc4\x36\xed\xbe\x16\xee\x98\x61\x92\x02\x9f\xa8\x1f\x43\xec\x5f\x09\xef\x7c\xef\x27\x7a\x4d\xed\x67\xba\x49\x64\xdb\xca\xbc\xa9\x4b\x21\xb0\xd9\xcb\xee\x89\x6a\x5c\xba\xbf\xce\x18\x74\x2e\x92\xb8\x6e\x53\xfb\x47\xc7\x99\xc7\xb7\x36\x86\xbb\xe7\xa7\xe1\x6f\xd2\x78\xf8\x13\x00\x00\xff\xff\x1a\xb8\xec\x3c\x55\x02\x00\x00"

func assetsTemplatesConfigAppHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigAppHelperTxt,
		"assets/templates/config/app-helper.txt",
	)
}

func assetsTemplatesConfigAppHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigAppHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/app-helper.txt", size: 597, mode: os.FileMode(420), modTime: time.Unix(1527525785, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigDependenciesHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x41\x8f\x94\x40\x10\x85\xef\xfc\x8a\x17\xb8\xac\x89\x92\xd5\xe3\x9c\x5d\xe3\x61\xe3\x5c\x8c\x17\xb3\x31\x05\x14\x50\x4e\xd3\x85\xdd\x85\x23\xff\xde\x34\x30\x84\xc9\x2a\x37\xc8\xab\xfa\xde\x7b\x45\x81\xbc\xe1\x91\x7d\xc3\xbe\x16\x8e\x39\x8c\x3a\x90\x73\x7a\x8d\x98\x22\x07\x98\x42\x7c\xed\xa6\x86\xa1\xd6\x73\xc0\x48\xf5\x85\x3a\x8e\x10\x6f\x0a\xeb\x59\x02\xc6\xa0\x3f\xb9\xb6\x12\x5f\x7b\x0e\x0c\x89\xa0\x9b\x0e\x03\x79\xea\x38\xa0\x9a\xc4\xd9\x32\x94\x15\xb8\x8a\x82\x7c\x83\x59\x27\xd4\xe4\x31\xd0\x85\x13\x0f\xda\xc2\x7a\x32\x54\x33\xe2\xc8\xb5\xb4\xb3\xf8\xee\xc8\x84\xf5\x12\x93\xcb\x12\x1f\x0f\xc6\x71\x15\xe7\x50\x31\x08\x4e\xa2\xa5\x3d\xfb\x10\xf9\x26\x2b\x76\xd4\xb6\x16\x8d\xb4\x2d\x07\xf6\x06\x1d\x4d\xd4\x47\xb4\x1a\xc0\x54\xf7\xab\x09\x1e\x4a\x7c\xd2\xd4\x44\x72\x40\x81\x11\x75\x60\x5c\x78\xc6\xa8\xe2\x2d\x82\x2a\x9d\x6c\xf1\x93\x67\x05\xde\xe1\x37\x87\x28\xea\x53\xfc\xeb\xd2\x43\x42\xde\x70\xd6\xf3\x2e\x58\xf7\x63\x2f\x7e\xc6\x43\xe0\x5f\x93\x04\x6e\xa0\xde\xcd\x8b\x93\xc0\x83\x1a\xef\x29\xde\x6c\x08\xdf\x68\x58\x0b\x6e\x1d\x75\x6b\x59\x2b\x23\xb5\x20\xaf\x36\xcb\x52\xda\x36\x77\xbb\x89\x06\x78\x35\x3c\x54\x33\x1a\x6e\x69\x4a\x87\xb1\x24\x6d\xc9\x45\x5e\x51\xb5\x0e\xa3\x38\xfe\x91\x30\x71\xc9\xff\xef\x50\x9b\x0e\xab\x2e\x39\xbf\x77\x90\x15\x78\xfa\x43\xc3\xe8\xf8\x94\x15\x38\xfe\x6c\xe9\x1d\x28\xd6\x8b\x2e\x91\xb6\xcc\x07\xfb\x8b\x64\x98\x9f\xa5\x5a\xd5\xe9\xd9\x6a\x3c\xe1\xb1\x7c\x2c\xdf\xef\x9f\xef\x0c\x9f\xf0\x3d\xff\xfc\xf4\xfc\x7c\xce\xdf\x22\xff\x72\x3e\xe7\x2f\xaf\x60\x5b\x27\x77\x4e\x37\xd6\x87\x23\x2c\xa9\x4e\xb0\x30\xf1\xff\x51\xdf\x16\x55\xfe\xf2\x37\x00\x00\xff\xff\x8d\x0a\xcf\x34\x4f\x03\x00\x00"

func assetsTemplatesConfigDependenciesHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigDependenciesHelperTxt,
		"assets/templates/config/dependencies-helper.txt",
	)
}

func assetsTemplatesConfigDependenciesHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigDependenciesHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/dependencies-helper.txt", size: 847, mode: os.FileMode(420), modTime: time.Unix(1527804280, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigPkgHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x52\xcd\x6a\xe4\x38\x10\xbe\xe7\x29\x3e\xdc\x97\x5d\xc8\xf6\x03\xec\x2d\xb0\x04\x96\x39\x24\x64\x86\x0c\x73\x1a\xca\x52\xb9\x5d\xd3\xb2\x4a\x48\xe5\x18\xcf\xd3\x0f\x92\xed\xa6\x73\x2c\xb9\xfc\xd5\xf7\x77\x42\x97\xae\x97\x0e\x46\x17\x38\x8d\x46\x12\x0b\x9c\x66\x86\xc4\x41\xf3\x44\x26\x1a\x41\xbd\xce\x06\x1b\x19\x29\xeb\x2f\x76\x76\xc6\xb7\x51\x0a\x16\x09\xa1\x3e\xf9\xd9\x31\x08\x89\xdc\x95\x2e\x0c\x1b\xc9\xe0\x28\xa2\x67\xcc\x85\x3d\x24\x42\x6d\xe4\xfc\x70\xc2\x22\x7a\x80\x94\x33\xbe\x6f\xd3\x87\x78\x2e\x88\x64\xf2\xc1\x28\x73\x4a\x9a\x0d\x83\xe6\x03\xb1\xc0\x65\x26\x63\x0f\x6b\x67\x69\x05\xc5\x3a\xf0\x0a\x6a\x5c\x5d\x98\x3d\x7b\x0c\x81\x96\xc0\xa5\x84\xf5\xfc\x70\xc2\xb3\x86\xa0\x8b\xc4\x4b\x5b\x2a\x3a\x31\xae\xbc\x22\xa9\x44\x2b\xbb\x28\x37\x17\xd3\x49\x7e\xd7\xad\x55\xe7\xdb\xc9\x7f\x1f\x4e\xf8\x07\xcf\x99\x26\x5e\x34\x5f\x4b\x83\xf8\xfa\xdf\x97\xd2\x78\xf1\xd4\xb3\xaf\x07\x3d\x7f\x88\xe3\x52\xfd\xe0\xf5\x70\x10\x85\x0d\x3a\x20\x48\x9f\x29\x0b\x17\x98\x56\x23\xb0\x8c\x1c\xe1\xd4\x4b\xbc\x54\x7e\x68\xfa\x77\xbd\xbb\xed\x1d\x65\x3f\x4b\xd4\xae\x29\xec\x9c\x16\xea\xf0\x17\x45\x68\xe2\x88\xa2\x73\x76\x8c\x97\x97\x57\x3c\xbd\xbf\xd5\xeb\x1c\x34\x4d\x1c\x0d\x29\x90\xd5\xc4\xfe\x3e\x37\xe6\xaf\xfb\x08\x29\x2d\x38\x5b\x13\x57\x4e\x6e\x94\xb4\x05\xd4\xac\xa4\x94\x82\xb8\x2d\xe5\x96\x66\x8d\x2c\x05\x25\xcf\x7e\x0f\xf9\x00\xbe\x05\xd5\x98\x7f\xd2\x46\xce\x71\x29\x1b\xf6\x48\xd9\x2f\xd5\xac\xca\xdf\xe9\x94\x24\x70\x6e\x5b\xfb\x50\xe9\x4c\xe7\xcf\xd2\xbb\xa7\xf7\xb7\xee\x76\x69\x53\xf0\x43\xe7\x56\xa2\x92\xd8\xc9\xb0\x62\x9a\x83\x49\x0a\x0c\x9a\x6d\xd4\x5c\x1e\x31\xdc\xa5\x13\x3d\x7a\xa5\xec\xcb\xce\xfa\xbe\xbe\x37\x61\xb5\x8b\x95\xc8\xc8\xee\x0a\x19\x9a\x05\x77\x6a\xd6\x6a\x56\x65\x49\x26\x7d\x60\x2c\x62\xe3\x7d\xeb\x21\x56\x37\x7a\xae\x65\xd9\x8b\xbd\x71\xfd\x7f\xa8\xe5\xc1\x42\xd1\x3e\xb5\xa8\x5e\xeb\xf9\x50\xee\x37\x44\xc7\xb9\xb5\x64\x08\x74\x29\x5b\x27\x2a\xd8\xe3\x61\x30\x6c\xd4\xc2\xfb\x67\x89\xc7\xdf\x3f\xb7\x07\xa3\xcb\xf9\x4f\x00\x00\x00\xff\xff\xa5\x00\x6f\x85\xb6\x03\x00\x00"

func assetsTemplatesConfigPkgHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigPkgHelperTxt,
		"assets/templates/config/pkg-helper.txt",
	)
}

func assetsTemplatesConfigPkgHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigPkgHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/pkg-helper.txt", size: 950, mode: os.FileMode(420), modTime: time.Unix(1527450523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectAppYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x89\x41\x0e\xc2\x30\x0c\x04\xef\x7e\xc5\xbe\x23\x5f\x41\x08\x2d\x8d\x53\x45\xc4\x4d\xe4\x1a\xf1\x7d\xe4\x22\x4e\x33\x3b\xcb\xb5\x8a\x00\x07\x4d\x93\xbd\x5e\x58\x83\xd1\xa6\x5b\x7a\x73\x9a\x7e\xa6\xbf\x8a\x48\xd0\x77\x8d\x33\x73\xd5\xc6\xf7\x88\x02\x63\x3f\x04\xd8\x5c\x19\x5a\xf3\xc2\xd5\x7e\x06\x3c\x27\xbd\xfe\xc7\x36\x6d\xf5\xa1\x8f\x36\xb8\x9f\x05\xb7\xbb\x7c\x03\x00\x00\xff\xff\xc1\xca\x6e\x3d\x81\x00\x00\x00"

func assetsTemplatesConfigProjectAppYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectAppYml,
		"assets/templates/config/project-app.yml",
	)
}

func assetsTemplatesConfigProjectAppYml() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectAppYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-app.yml", size: 129, mode: os.FileMode(420), modTime: time.Unix(1527804280, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectPkgYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x4d\x6e\x03\x21\x0c\x85\xf7\x9c\xc2\x27\x88\xd2\x2d\xbb\xee\x73\x83\x28\xaa\x3c\x83\x99\x5a\x01\x3c\x32\xa6\x51\x7b\xfa\xca\x93\xb0\xca\x06\xff\x3c\xde\xf7\xe4\xc2\x4b\x0c\x00\x0d\x2b\x79\x4d\xd4\x57\xe5\xdd\x58\x9a\x8f\x43\x8b\x97\x1f\xd2\xee\x1b\x38\x9f\xce\xa7\x8f\x00\x80\xc3\xbe\x45\x5d\x5a\xa5\x99\xf2\x32\x4c\xb4\x47\xb8\xde\x02\x80\xe8\x86\x8d\xff\x70\x42\x0a\xaf\xd4\xfa\x81\xdf\x0b\x5a\x16\xad\xde\x67\xc5\x4a\x0f\xd1\xfb\xcb\x76\xa7\xdf\x87\x68\x9a\x94\x45\x50\x53\x84\xeb\xe7\xe5\x72\x3b\x72\xea\xce\x85\xbe\x72\xc1\x6d\x7e\xe1\x44\xd1\x9f\x10\x0c\x75\x23\xeb\xcf\x0b\x32\x8e\x62\x11\x8c\xba\xb9\x51\x09\x8d\x92\x4b\x70\xec\x9e\xdd\x0c\x78\x0d\xef\xf8\xff\x00\x00\x00\xff\xff\x2c\x2f\x2e\xd4\x19\x01\x00\x00"

func assetsTemplatesConfigProjectPkgYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectPkgYml,
		"assets/templates/config/project-pkg.yml",
	)
}

func assetsTemplatesConfigProjectPkgYml() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectPkgYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-pkg.yml", size: 281, mode: os.FileMode(420), modTime: time.Unix(1527804280, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigTargetsHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x90\x41\x8e\x83\x30\x0c\x45\xf7\x3d\xc5\x57\xd9\x8e\x38\xc4\xdc\x62\x96\x26\x71\xc0\x52\xb0\x51\x6c\x8a\xb8\xfd\x28\x94\xaa\x5b\xfb\xf9\xbf\x2f\x0f\x78\x06\xb5\x99\xc3\x9f\x08\x9a\x41\xb5\xda\xe1\x28\xd6\x10\xec\x21\x3a\x83\x34\x23\xf3\x8b\xab\x6d\x2b\x6b\x5c\xbb\x17\x35\xb1\xdd\xe1\x1c\x9d\xf1\x0b\x4a\xa6\x45\xe6\xbd\x51\x88\xa9\x8f\xf8\xb3\x1d\x89\x14\xa9\x31\x05\x3f\x06\xac\x7b\x0d\xd9\x2a\xe3\x56\xe2\x58\xb8\x31\xce\x9b\xcb\x5c\x44\x19\x59\x4a\xe1\xd6\x4d\x71\x6e\xec\xb0\x82\xc9\xa8\xe5\x8f\x64\xdd\xa4\x32\x4a\xa5\xd9\x47\xfc\x9e\xfd\x8c\xf6\x1a\x30\xfd\x04\x3f\x06\x88\xdf\xda\xfc\x83\x63\x91\xb4\xf4\xc9\x5b\x90\x31\x91\x73\x86\xe9\xb7\x7e\x5a\xcc\x59\x31\x9d\x57\x19\x51\xc4\xc2\xef\x80\xfe\x81\xad\x59\x62\xf7\xf1\x3f\x00\x00\xff\xff\xc3\xbc\x9e\x47\x2d\x01\x00\x00"

func assetsTemplatesConfigTargetsHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigTargetsHelperTxt,
		"assets/templates/config/targets-helper.txt",
	)
}

func assetsTemplatesConfigTargetsHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigTargetsHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/targets-helper.txt", size: 301, mode: os.FileMode(420), modTime: time.Unix(1527525854, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreClion = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x4f\x6b\xc2\x40\x10\xc5\xef\xf3\x29\x16\xbc\x45\x1c\xed\x27\x28\xc5\x1c\x7a\x50\x14\x22\xed\xa1\x14\xd9\x3f\x53\x33\x3a\xc9\xa6\xbb\x13\xad\xdf\xbe\x24\xc5\x56\xe8\x61\x77\x1e\x6f\xde\xfb\xc1\x4c\xcc\x85\x23\xe0\x85\xe3\x1c\x60\x62\x96\xc2\xb1\x85\xe5\xda\x9e\x68\xc5\x59\xf3\x36\xf1\xd9\x2a\xa1\x7e\x29\x20\x07\xb2\x73\xf0\x8d\x3d\xd1\xcc\xf5\x2c\x61\x16\xc8\xf5\x87\xb1\xb8\xb6\xde\x6c\x2a\xc0\xb2\xda\x57\x1a\x13\xfd\xa9\x47\xc0\xa7\xae\x13\x2a\x63\xef\x84\x00\x57\xd5\xe6\x4c\x29\x71\x20\xc0\x7d\x01\x58\x75\x51\x85\x0f\xb5\xce\x5e\x1e\x16\x0b\xc0\x5d\xb2\xb9\xa6\x0c\x54\x6b\xdd\x37\x2e\x63\x70\xb0\xfb\x55\x30\x31\xaf\xdc\x86\x78\xc9\x77\xe6\x7d\xf4\xa6\xf7\x67\xce\x6a\x07\xe7\xad\x0c\xef\x94\x4f\x1a\x3b\xe4\x96\x61\x3c\x73\x3a\x35\xdb\x44\x89\x3e\x7b\xce\xac\x94\xa1\xc0\x70\x5b\x2c\x63\xd3\xb1\x50\x30\x1b\x77\x24\xaf\xe6\x83\x65\x0c\x64\x89\x50\xe0\xf8\x8d\xcf\x1d\xef\x50\xfe\x56\x7a\x26\x1b\x28\x0d\xf9\x83\xaf\xa1\xc0\xce\xd7\xff\xc0\xe5\xb5\xb5\x0d\x7b\x23\xec\x92\x4d\xfc\x43\x1f\x98\xe1\x2a\xec\x86\x29\x02\xdf\x01\x00\x00\xff\xff\xfc\x0e\x9c\x6e\x9a\x01\x00\x00"

func assetsTemplatesGitignoreGitignoreClionBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreClion,
		"assets/templates/gitignore/.gitignore-clion",
	)
}

func assetsTemplatesGitignoreGitignoreClion() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreClionBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-clion", size: 410, mode: os.FileMode(420), modTime: time.Unix(1527804280, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreGeneral = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8c\x4f\x4b\xf4\x30\x10\xc6\xef\xf3\x29\x02\xbd\x75\x79\xe7\x5d\x3f\x81\xc8\xf6\xe0\x41\xa9\xd0\x45\x0f\x22\x25\x7f\xc6\xcd\xac\x69\x13\x93\x74\xcb\x7e\x7b\x49\xa5\x5a\xf0\x90\xcc\xc3\x33\xbf\xf9\x55\x62\x66\x0f\x38\xb3\xff\x0f\x50\x89\x47\xa9\x45\xdb\x01\x36\x5d\xdf\x65\x1f\xe9\x37\xdd\x02\xde\x85\xe0\xa8\xf1\x93\x72\x04\xf8\xd0\xb5\x17\x8a\x91\x0d\x01\xf6\x35\x60\x17\x7c\x76\x7c\xb2\xf9\xdf\xf3\xcd\x7e\x0f\x78\x8c\x32\x59\x4a\x40\x36\xdb\x69\x50\x09\x8d\x82\xe3\x4f\x82\x4a\xbc\xf0\x68\xfc\x9c\x36\xe5\x16\x5d\x73\x7f\xe1\x94\x65\x69\x5e\x1b\xf3\x46\xe9\x23\xfb\x80\x3c\x32\x14\xc5\x61\xb7\x13\x4f\x91\x22\x7d\x4e\x9c\x38\x53\x82\x1a\xcd\xba\x38\xf8\x21\xb0\x23\x23\x5a\x75\x26\x9d\xc5\x3b\xbb\x05\x48\xce\x43\x8d\xcb\xb7\x3c\x75\xde\xa8\xf4\x7a\x74\x4f\xd2\x50\x2c\xfc\x49\x5b\xa8\x31\x68\xfb\x47\xdc\x5c\x47\x39\xb0\x16\x8e\x55\x94\x91\xbf\xed\xc5\x69\xae\x8e\x55\x99\xce\xc1\x57\x00\x00\x00\xff\xff\xea\xd9\x9e\x4f\x61\x01\x00\x00"

func assetsTemplatesGitignoreGitignoreGeneralBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreGeneral,
		"assets/templates/gitignore/.gitignore-general",
	)
}

func assetsTemplatesGitignoreGitignoreGeneral() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreGeneralBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-general", size: 353, mode: os.FileMode(420), modTime: time.Unix(1527804280, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsTxtTpl,
		"assets/templates/ide/clion/app/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(420), modTime: time.Unix(1527450523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(420), modTime: time.Unix(1527450523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsTxtTpl,
		"assets/templates/ide/clion/lib/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(420), modTime: time.Unix(1527450523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(420), modTime: time.Unix(1527450523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesReadmeApp_readmeMd = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xa8\xae\x0e\x08\xf2\xf7\x72\x75\x0e\x89\xf7\x73\xf4\x75\xad\xad\xe5\xe2\x0a\xc9\xc8\x2c\x56\xc8\x2c\x56\x48\x54\x28\xcf\xcc\x57\xa8\xae\x76\x0b\x72\xf4\x75\x0d\xf7\x0f\xf2\xae\xad\x05\xa9\xf6\x71\x0c\x71\xf3\x0f\xf2\xad\xad\x55\x48\x2c\x28\xc8\xc9\x4c\x4e\x2c\xc9\xcc\xcf\xd3\xe3\xe2\x0a\xc9\x57\x48\x2a\xcd\xcc\x49\x51\x28\x01\xe9\x47\x92\xe3\x4a\x48\x48\x48\x4a\x2c\xce\xe0\x02\x19\x57\x54\x0a\xe6\x83\x54\x97\x16\xe4\xe4\x27\x12\x56\xae\xa0\xab\x5b\x90\x5f\x54\xa2\x60\x03\x22\xed\xc0\x9a\x01\x01\x00\x00\xff\xff\x4d\x81\xd3\xf1\xb6\x00\x00\x00"

func assetsTemplatesReadmeApp_readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesReadmeApp_readmeMd,
		"assets/templates/readme/APP_README.md",
	)
}

func assetsTemplatesReadmeApp_readmeMd() (*asset, error) {
	bytes, err := assetsTemplatesReadmeApp_readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/readme/APP_README.md", size: 182, mode: os.FileMode(420), modTime: time.Unix(1527804280, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesReadmePkg_readmeMd = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xcb\x6a\x84\x30\x14\x40\xf7\xf9\x8a\x0b\xdd\xb9\xe8\x07\xb8\x6a\x6c\x15\xfa\xb0\x29\x51\xe8\xb2\x5e\x93\x4b\x0d\x3e\x12\x4c\x06\x19\x42\xfe\x7d\x88\xcc\x6e\xd6\xe7\xc0\x39\x4f\x10\xe3\x8f\x14\x1f\xf5\x6b\xff\xf7\xcd\xdb\x3a\x25\xc6\xfa\xc9\x78\x30\x1e\x10\x0e\x63\x33\xff\xe2\x7d\x23\x64\x9b\x12\x38\x54\x33\xfe\xd3\x33\xbc\x87\x6c\x28\xbb\x3a\x0c\x66\x5c\x08\x0e\x13\xa6\x92\x15\xd0\xec\xb8\xd2\x61\xf7\xd9\x97\x10\x63\x23\x79\x5b\xff\x0a\xf9\xd9\xa5\xc4\x0a\xa8\x2c\xee\xfa\x04\x95\xe0\xf2\xad\x3b\x6b\x16\xcc\xa6\x96\x8b\x26\x08\x39\x7c\x4f\x00\x7a\xd0\xe4\x68\xd3\xb4\xa9\x2b\x1b\x86\x61\x44\x3f\xb1\x7c\xe4\x50\x01\x6a\xfd\x70\xfe\xb2\x60\x20\x1f\xb2\xcb\x6e\x01\x00\x00\xff\xff\x87\xa0\x61\xc8\xd8\x00\x00\x00"

func assetsTemplatesReadmePkg_readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesReadmePkg_readmeMd,
		"assets/templates/readme/PKG_README.md",
	)
}

func assetsTemplatesReadmePkg_readmeMd() (*asset, error) {
	bytes, err := assetsTemplatesReadmePkg_readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/readme/PKG_README.md", size: 216, mode: os.FileMode(420), modTime: time.Unix(1527804280, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramAppMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\x50\x72\xce\x2f\x4e\xd4\x0f\x0a\x09\xd1\xcb\xc8\x50\xe2\x42\x13\xf6\x2f\x2d\x29\x28\x2d\x09\xc8\xcc\x03\x4b\x72\xc1\xb9\x0a\x39\xa9\x29\x01\x99\x79\x1a\x4e\xf9\x89\x45\x29\x56\x56\x3e\xae\x2e\x9a\xd6\x5c\x5c\x65\xf9\x99\x29\x0a\xc5\xa9\x25\xa5\x05\x1a\x9a\x0a\xd5\x5c\x0a\x0a\x0a\x0a\x41\x21\x21\x56\x56\x49\xa9\xe9\x99\x79\x1a\x9a\xd6\x5c\xb5\x50\x35\x39\xf9\xf9\x08\x25\x10\xa3\xf4\xf2\xc1\x2a\x40\x02\x29\xa9\x39\x89\x95\x1a\xa6\x06\x50\x2e\x4c\x3e\x2d\x0d\x5d\x81\x01\xd8\x48\x40\x00\x00\x00\xff\xff\xae\x1c\x30\xf2\xca\x00\x00\x00"

func assetsTemplatesSampleProgramAppMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramAppMainCpp,
		"assets/templates/sample-program/app/main.cpp",
	)
}

func assetsTemplatesSampleProgramAppMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramAppMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/app/main.cpp", size: 202, mode: os.FileMode(420), modTime: time.Unix(1527450523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\x50\x72\xce\x2f\x4e\xd4\x0f\x0a\x09\xd1\xcb\xc8\x50\xe2\x42\x08\xe7\x97\x96\x14\x94\x96\xe8\x65\x28\x71\x71\x95\xe5\x67\xa6\x28\x14\xa7\x96\x94\x16\x68\x68\x2a\x54\x73\x29\x28\x28\x28\x04\x85\x84\x58\x59\x25\xa5\xa6\x67\xe6\x69\x68\x5a\x73\xd5\x42\xd5\xe4\xe4\xe7\x23\x94\x24\x95\x66\xe6\x94\xf8\xa4\xa6\xf8\x83\x95\x80\x44\x52\x52\x73\x12\x2b\x35\x4c\x0d\xa0\x5c\xb8\x82\xb4\x34\x74\x15\x06\x60\x43\x01\x01\x00\x00\xff\xff\x28\x81\xa1\x32\xa4\x00\x00\x00"

func assetsTemplatesSampleProgramPkgMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgMainCpp,
		"assets/templates/sample-program/pkg/main.cpp",
	)
}

func assetsTemplatesSampleProgramPkgMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg/main.cpp", size: 164, mode: os.FileMode(420), modTime: time.Unix(1527450523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgOutputCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\x50\x72\xce\x2f\x4e\xd4\xf7\x2f\x2d\x29\x28\x2d\x09\xc8\xcc\xd3\xcb\xc8\x50\xe2\x42\x48\xe6\x83\xc5\xf5\x32\x94\xb8\xb8\xe0\x4a\x14\x72\x52\x53\x02\x32\xf3\x34\x9c\xf2\x13\x8b\x52\xac\xac\x7c\x5c\x5d\x34\xad\xb9\xb8\xca\xf2\x33\x53\x14\x92\x4a\x33\x73\x4a\x7c\x52\x53\xfc\xf3\x34\x34\x15\xaa\xb9\x14\x14\x14\xa0\x8a\xf5\xf2\xf3\x34\x34\xad\xb9\x6a\xd1\xd5\xa5\xa5\x61\x28\x04\x09\x81\x54\x02\x02\x00\x00\xff\xff\xf7\x81\x83\xa4\xa2\x00\x00\x00"

func assetsTemplatesSampleProgramPkgOutputCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgOutputCpp,
		"assets/templates/sample-program/pkg/output.cpp",
	)
}

func assetsTemplatesSampleProgramPkgOutputCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgOutputCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg/output.cpp", size: 162, mode: os.FileMode(420), modTime: time.Unix(1527450523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgOutputH = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xcb\xcf\x4c\x51\x48\x2a\xcd\xcc\x29\xf1\x49\x4d\xf1\xcf\xd3\xd0\xb4\xe6\x42\x15\x4a\x4b\xd3\xd0\xb4\x06\x04\x00\x00\xff\xff\x5a\xa3\x43\x34\x26\x00\x00\x00"

func assetsTemplatesSampleProgramPkgOutputHBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgOutputH,
		"assets/templates/sample-program/pkg/output.h",
	)
}

func assetsTemplatesSampleProgramPkgOutputH() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgOutputHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg/output.h", size: 38, mode: os.FileMode(420), modTime: time.Unix(1527450523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/.DS_Store": assetsDs_store,
	"assets/cli-helper/app-help.txt": assetsCliHelperAppHelpTxt,
	"assets/cli-helper/command-help.txt": assetsCliHelperCommandHelpTxt,
	"assets/cli-helper/subcommand-help.txt": assetsCliHelperSubcommandHelpTxt,
	"assets/config/create_paths.json": assetsConfigCreate_pathsJson,
	"assets/config/defaults.yml": assetsConfigDefaultsYml,
	"assets/config/paths.yml": assetsConfigPathsYml,
	"assets/config/update_paths.json": assetsConfigUpdate_pathsJson,
	"assets/templates/.DS_Store": assetsTemplatesDs_store,
	"assets/templates/cmake/CMakeListsApp.txt.tpl": assetsTemplatesCmakeCmakelistsappTxtTpl,
	"assets/templates/cmake/CMakeListsPkg.txt.tpl": assetsTemplatesCmakeCmakelistspkgTxtTpl,
	"assets/templates/cmake/dependencies.txt": assetsTemplatesCmakeDependenciesTxt,
	"assets/templates/config/app-helper.txt": assetsTemplatesConfigAppHelperTxt,
	"assets/templates/config/dependencies-helper.txt": assetsTemplatesConfigDependenciesHelperTxt,
	"assets/templates/config/pkg-helper.txt": assetsTemplatesConfigPkgHelperTxt,
	"assets/templates/config/project-app.yml": assetsTemplatesConfigProjectAppYml,
	"assets/templates/config/project-pkg.yml": assetsTemplatesConfigProjectPkgYml,
	"assets/templates/config/targets-helper.txt": assetsTemplatesConfigTargetsHelperTxt,
	"assets/templates/gitignore/.gitignore-clion": assetsTemplatesGitignoreGitignoreClion,
	"assets/templates/gitignore/.gitignore-general": assetsTemplatesGitignoreGitignoreGeneral,
	"assets/templates/ide/clion/app/CMakeLists.txt.tpl": assetsTemplatesIdeClionAppCmakelistsTxtTpl,
	"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
	"assets/templates/ide/clion/lib/CMakeLists.txt.tpl": assetsTemplatesIdeClionLibCmakelistsTxtTpl,
	"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
	"assets/templates/readme/APP_README.md": assetsTemplatesReadmeApp_readmeMd,
	"assets/templates/readme/PKG_README.md": assetsTemplatesReadmePkg_readmeMd,
	"assets/templates/sample-program/app/main.cpp": assetsTemplatesSampleProgramAppMainCpp,
	"assets/templates/sample-program/pkg/main.cpp": assetsTemplatesSampleProgramPkgMainCpp,
	"assets/templates/sample-program/pkg/output.cpp": assetsTemplatesSampleProgramPkgOutputCpp,
	"assets/templates/sample-program/pkg/output.h": assetsTemplatesSampleProgramPkgOutputH,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		".DS_Store": &bintree{assetsDs_store, map[string]*bintree{}},
		"cli-helper": &bintree{nil, map[string]*bintree{
			"app-help.txt": &bintree{assetsCliHelperAppHelpTxt, map[string]*bintree{}},
			"command-help.txt": &bintree{assetsCliHelperCommandHelpTxt, map[string]*bintree{}},
			"subcommand-help.txt": &bintree{assetsCliHelperSubcommandHelpTxt, map[string]*bintree{}},
		}},
		"config": &bintree{nil, map[string]*bintree{
			"create_paths.json": &bintree{assetsConfigCreate_pathsJson, map[string]*bintree{}},
			"defaults.yml": &bintree{assetsConfigDefaultsYml, map[string]*bintree{}},
			"paths.yml": &bintree{assetsConfigPathsYml, map[string]*bintree{}},
			"update_paths.json": &bintree{assetsConfigUpdate_pathsJson, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			".DS_Store": &bintree{assetsTemplatesDs_store, map[string]*bintree{}},
			"cmake": &bintree{nil, map[string]*bintree{
				"CMakeListsApp.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistsappTxtTpl, map[string]*bintree{}},
				"CMakeListsPkg.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistspkgTxtTpl, map[string]*bintree{}},
				"dependencies.txt": &bintree{assetsTemplatesCmakeDependenciesTxt, map[string]*bintree{}},
			}},
			"config": &bintree{nil, map[string]*bintree{
				"app-helper.txt": &bintree{assetsTemplatesConfigAppHelperTxt, map[string]*bintree{}},
				"dependencies-helper.txt": &bintree{assetsTemplatesConfigDependenciesHelperTxt, map[string]*bintree{}},
				"pkg-helper.txt": &bintree{assetsTemplatesConfigPkgHelperTxt, map[string]*bintree{}},
				"project-app.yml": &bintree{assetsTemplatesConfigProjectAppYml, map[string]*bintree{}},
				"project-pkg.yml": &bintree{assetsTemplatesConfigProjectPkgYml, map[string]*bintree{}},
				"targets-helper.txt": &bintree{assetsTemplatesConfigTargetsHelperTxt, map[string]*bintree{}},
			}},
			"gitignore": &bintree{nil, map[string]*bintree{
				".gitignore-clion": &bintree{assetsTemplatesGitignoreGitignoreClion, map[string]*bintree{}},
				".gitignore-general": &bintree{assetsTemplatesGitignoreGitignoreGeneral, map[string]*bintree{}},
			}},
			"ide": &bintree{nil, map[string]*bintree{
				"clion": &bintree{nil, map[string]*bintree{
					"app": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
					"lib": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
				}},
			}},
			"readme": &bintree{nil, map[string]*bintree{
				"APP_README.md": &bintree{assetsTemplatesReadmeApp_readmeMd, map[string]*bintree{}},
				"PKG_README.md": &bintree{assetsTemplatesReadmePkg_readmeMd, map[string]*bintree{}},
			}},
			"sample-program": &bintree{nil, map[string]*bintree{
				"app": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramAppMainCpp, map[string]*bintree{}},
				}},
				"pkg": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramPkgMainCpp, map[string]*bintree{}},
					"output.cpp": &bintree{assetsTemplatesSampleProgramPkgOutputCpp, map[string]*bintree{}},
					"output.h": &bintree{assetsTemplatesSampleProgramPkgOutputH, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

