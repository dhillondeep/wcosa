// Code generated by go-bindata.
// sources:
// ../../../../assets/config/defaults.yml
// ../../../../assets/config/paths.json
// ../../../../assets/config/paths.yml
// ../../../../assets/templates/cmake/CMakeLists.txt-app.tpl
// ../../../../assets/templates/cmake/CMakeLists.txt-lib.tpl
// ../../../../assets/templates/cmake/CMakeTarget.cmake-app.tpl
// ../../../../assets/templates/cmake/CMakeTarget.cmake-lib.tpl
// ../../../../assets/templates/config/project-app-help
// ../../../../assets/templates/config/project-app.yml
// ../../../../assets/templates/config/project-lib-help
// ../../../../assets/templates/config/project-lib.yml
// ../../../../assets/templates/gitignore/.gitignore-clion
// ../../../../assets/templates/gitignore/.gitignore-general
// ../../../../assets/templates/ide/clion/app/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/sample-program/app/main.cpp
// ../../../../assets/templates/sample-program/lib/lib.cpp
// ../../../../assets/templates/sample-program/lib/lib.h
// ../../../../assets/templates/sample-program/lib/main.cpp
// DO NOT EDIT!

package io

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsConfigDefaultsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\x41\x6e\x03\x21\x0c\x85\xe1\x3d\xa7\x78\x22\xfb\x28\xdd\xce\x29\xba\xe8\x05\x3c\x60\x32\xa8\xc6\x1e\x19\x48\xd5\xdb\x57\xd3\xa4\x53\x76\xe8\xff\xf4\x16\xbe\xe0\x63\xab\x1d\xc9\x74\x50\xd5\x0e\x12\xc1\xd8\x18\x99\x0b\x4d\x19\x78\x90\x4c\xee\x28\xe6\x48\xd6\x1a\x69\x96\xaa\x0c\xf2\xfb\x6c\xac\xa3\x87\x0b\xde\x69\x6c\x7f\x8e\x9c\xa1\x36\x50\x35\xc9\xcc\x9c\xb1\x72\xa2\xd9\xf9\xd8\xfc\xfe\xad\x8d\xd2\x76\x2c\xf4\x9d\x53\x2d\x35\x85\x50\x33\x2f\x88\x6a\xca\x31\x14\xa7\xc6\x5f\xe6\x9f\x0b\x62\xb2\x4e\x31\xec\x42\xa3\x98\xb7\x05\x91\x1e\x1e\x43\xa9\xf2\xcf\x77\xf3\x71\x7e\x1e\xec\xbd\x9a\x2e\x88\xb7\xeb\xed\xfa\x16\xc3\x6a\xe4\xf9\xcc\xeb\x20\xbf\xf3\xc1\x49\x24\xe2\xf5\x2e\x58\x67\x95\x8c\x67\x0c\xf3\x44\xaf\x03\xc4\x27\x9a\xbb\x18\x9d\xea\x27\x00\x00\xff\xff\xb3\x5e\xcb\x79\x35\x01\x00\x00"

func assetsConfigDefaultsYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigDefaultsYml,
		"assets/config/defaults.yml",
	)
}

func assetsConfigDefaultsYml() (*asset, error) {
	bytes, err := assetsConfigDefaultsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/defaults.yml", size: 309, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigPathsJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\xcf\x4e\x83\x40\x10\x87\xef\x3c\xc5\x66\xcf\x85\xbd\xf7\xea\xcd\x68\xda\x34\xde\x8c\x87\x29\x4c\xe9\xd8\x85\x9d\xec\xae\x55\x43\x78\x77\xb3\x98\xb6\x16\xab\xd0\x3f\x58\x0f\x10\x32\xf9\x0d\xf9\x32\x3b\xfb\x55\x91\x10\x92\xc1\x2f\x9d\x1c\x8b\xc7\x48\x08\x21\xaa\xe6\x2d\x84\xa4\x4c\x8e\x85\x04\xe6\x38\xc7\x52\x8e\x36\x65\x67\xd3\x50\xf7\x58\xb0\x06\x8f\x4e\xa5\xa6\x5c\x50\xae\xd8\x9a\x67\x4c\x7d\x0c\xcc\xc9\x7b\xa1\x77\x0d\x19\x86\x9f\xcb\xaa\x9a\xce\x6e\xe3\xd9\x64\xf2\x50\xd7\x9b\xf0\x7e\xd0\xac\xd1\x5a\xca\x50\x8e\xc5\x02\xb4\xc3\xa6\x5e\x8f\x4e\xa4\x2a\x60\x85\xea\xe6\x1e\x56\x78\x47\xce\xbb\xc4\xbf\x7d\xb2\x79\xee\x60\x4b\x5e\xc9\xb4\x1a\x0f\x32\x7a\xfb\x72\x1e\xa2\x83\x82\x35\xc6\x6c\x4d\x6e\xa1\x50\xc0\xac\x0a\xa0\x32\x49\x99\x7f\x27\x74\x36\x3d\x90\xbc\xe8\xf8\x72\xf2\x94\x97\xc6\xa2\x4a\xb6\x9f\xa1\x05\x2d\x74\x8d\x6f\x9b\x3f\x19\x2d\xd5\x64\x8e\x86\x6b\x35\x5d\x09\x8d\x32\x54\x4d\xa6\x39\xce\xfd\x2d\xea\x5e\xbd\x1e\x5b\x37\x24\xe4\xd4\xd2\x1a\x3c\x1e\xcb\xfa\xa5\xed\x94\x8b\xa2\x69\x7e\x9c\x61\x34\xcd\x87\x37\x4c\x0f\xaa\x43\x86\x09\x6c\x7f\x65\x98\x6e\xc4\x96\x61\x34\xcd\xc3\x93\x2c\xbb\xf5\xd2\x8a\x5d\x74\x70\x3f\x50\xf5\xd2\xde\xb7\xe0\xd0\x64\xfd\x8c\xec\xd1\xf9\xf3\x94\xdc\x0d\x77\x35\x25\x07\xb4\x7f\xaa\xe4\x3e\x68\x3b\xdb\x85\xf3\xbc\x82\x92\xcf\x81\x1c\x5c\xc9\x91\x10\x4f\x51\x1d\x7d\x04\x00\x00\xff\xff\x5a\x25\x26\x57\x09\x0a\x00\x00"

func assetsConfigPathsJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigPathsJson,
		"assets/config/paths.json",
	)
}

func assetsConfigPathsJson() (*asset, error) {
	bytes, err := assetsConfigPathsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/paths.json", size: 2569, mode: os.FileMode(420), modTime: time.Unix(1522385287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigPathsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\x4a\x29\xcd\xcc\xcb\xd7\x2d\x4e\xc9\xd6\x2d\x48\x2c\xc9\xb0\x52\x50\x52\xe2\x4a\xce\x2f\x4e\x44\x15\x49\x2c\x2b\x42\xe2\x14\xe5\x22\x38\xb9\x89\xd9\xa9\x48\x3a\x51\xb9\x80\x00\x00\x00\xff\xff\x60\xc2\x95\x1d\x5e\x00\x00\x00"

func assetsConfigPathsYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigPathsYml,
		"assets/config/paths.yml",
	)
}

func assetsConfigPathsYml() (*asset, error) {
	bytes, err := assetsConfigPathsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/paths.yml", size: 94, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistsTxtAppTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x52\xd1\x8e\xda\x30\x10\x7c\xcf\x57\xac\x52\x4e\xe2\x2a\x05\xbe\x21\x97\x4b\x7b\xa8\x40\x90\x43\xe9\x3d\x9c\x64\x19\x7b\x01\xb7\x89\x4d\x6d\xa7\xa7\x6a\x95\x7f\xaf\x9c\x00\xbd\xaa\x7d\xef\x5b\x3c\xb3\x33\x9e\xcc\xda\x63\x98\x7e\x29\xaa\x3a\xe7\x9b\x7c\xfb\x04\x29\xd1\xab\xb4\x5e\x64\x67\x11\x4e\x7d\x9f\xde\x27\x71\x60\x57\x32\x20\x92\xad\xf8\x86\xd9\x0f\x74\x5e\x5b\xd3\xf7\x23\xb5\xce\x57\x25\x10\x9d\x9d\xfd\x8a\x32\x64\x46\xb4\x18\xa9\xe4\x1d\x14\xd6\x0b\xd8\x5a\xdb\xc8\x93\xd0\x66\x18\x2e\x56\xf9\xa7\x92\x6f\xab\x6a\x59\x3c\xe5\x8b\x35\xff\xb0\x58\x96\x90\x4e\xe8\x77\x80\x7e\x1e\xae\x8a\xf9\x70\xdf\x3c\xda\xdc\x5c\x66\x03\x96\xde\x27\xc9\xf0\xc1\x5b\x6d\x74\xdb\xb5\xdc\xe1\xf7\x4e\x3b\x54\x31\x69\xbd\xa8\xd6\x30\xa1\x5d\xc9\x62\x8e\x4b\xb0\xe9\x84\x62\xd2\x1e\x0a\x28\x9e\x9f\x21\xaf\x57\x43\x46\xa1\x14\x78\x14\x4e\x9e\x20\xfe\xb0\x87\x83\x75\x20\x9a\x06\xc2\x09\xa1\xf3\xe8\xa0\xd1\x7b\x27\x9c\x46\x0f\xc2\x28\xd8\x77\xba\x51\x91\x6c\x93\xbb\x48\x65\xa3\x38\x21\xd2\x46\x36\x9d\x42\xae\xb4\x43\x19\x6c\x54\x4c\x53\xa2\x38\x73\xad\xb2\xef\x13\xa2\x23\x1a\x74\x22\x20\x17\x4e\x75\xda\x58\x3e\x5e\xf0\x73\x4a\x34\x76\xf7\x62\x5e\x42\xcd\x8a\x1a\x88\xbc\x93\x7e\x04\x9e\x1e\x59\x04\x4e\xca\x5d\x80\x87\x2a\x67\x8f\x40\xb4\xb7\xc2\xa9\xbe\x1f\xbd\x83\x70\x47\x0c\x5c\xda\xf6\xac\x1b\xe4\x0a\x0f\xda\xe8\xa0\xad\xf1\x37\x77\xd8\xb0\xc5\x2e\xdf\x96\xc0\x79\xbe\x63\x3c\x96\xcb\x79\xdc\x6d\xe7\x83\x6d\xb3\x37\x92\xd1\xf4\x0e\xd0\xa8\x24\x39\xe8\x06\xa7\x1f\x97\xd5\x03\x67\x65\xf1\x99\xd5\x25\xd4\xac\x18\xd6\x57\x43\x3a\x9b\xcd\xbd\x93\xf3\xf7\x33\x79\x3e\xa7\x6f\x8f\xf2\x8f\x53\x3a\x34\x2e\x1d\x8a\x80\x43\xbf\x07\xed\xda\x57\xe1\x30\xb9\xbb\x7d\x66\x47\x34\xff\x2a\xe9\xca\xff\xdd\xd2\x84\x6e\x49\x06\x30\x67\x8f\xcb\xc5\x43\x2c\x6b\x78\xc6\xb7\xf5\x8d\x92\x0b\xd5\xe8\xfd\x05\xd8\x54\x6c\x1b\x9f\xaf\x75\xe1\x7f\x14\xfb\x2b\x00\x00\xff\xff\xfe\xd3\x72\xb3\x7e\x03\x00\x00"

func assetsTemplatesCmakeCmakelistsTxtAppTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistsTxtAppTpl,
		"assets/templates/cmake/CMakeLists.txt-app.tpl",
	)
}

func assetsTemplatesCmakeCmakelistsTxtAppTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistsTxtAppTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeLists.txt-app.tpl", size: 894, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistsTxtLibTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x52\xd1\x8e\xda\x30\x10\x7c\xcf\x57\xac\x52\x4e\xe2\x2a\x05\xbe\x21\x97\x4b\x7b\xa8\x40\x90\x43\xe9\x3d\x9c\x64\x19\x7b\x01\xb7\x89\x4d\x6d\xa7\xa7\x6a\x95\x7f\xaf\x9c\x00\xbd\xaa\x7d\xef\x5b\x3c\xb3\x33\x9e\xcc\xda\x63\x98\x7e\x29\xaa\x3a\xe7\x9b\x7c\xfb\x04\x29\xd1\xab\xb4\x5e\x64\x67\x11\x4e\x7d\x9f\xde\x27\x71\x60\x57\x32\x20\x92\xad\xf8\x86\xd9\x0f\x74\x5e\x5b\xd3\xf7\x23\xb5\xce\x57\x25\x10\x9d\x9d\xfd\x8a\x32\x64\x46\xb4\x18\xa9\xe4\x1d\x14\xd6\x0b\xd8\x5a\xdb\xc8\x93\xd0\x66\x18\x2e\x56\xf9\xa7\x92\x6f\xab\x6a\x59\x3c\xe5\x8b\x35\xff\xb0\x58\x96\x90\x4e\xe8\x77\x80\x7e\x1e\xae\x8a\xf9\x70\xdf\x3c\xda\xdc\x5c\x66\x03\x96\xde\x27\xc9\xf0\xc1\x5b\x6d\x74\xdb\xb5\xdc\xe1\xf7\x4e\x3b\x54\x31\x69\xbd\xa8\xd6\x30\xa1\x5d\xc9\x62\x8e\x4b\xb0\xe9\x84\x62\xd2\x1e\x0a\x28\x9e\x9f\x21\xaf\x57\x43\x46\xa1\x14\x78\x14\x4e\x9e\x20\xfe\xb0\x87\x83\x75\x20\x9a\x06\xc2\x09\xa1\xf3\xe8\xa0\xd1\x7b\x27\x9c\x46\x0f\xc2\x28\xd8\x77\xba\x51\x91\x6c\x93\xbb\x48\x65\xa3\x38\x21\xd2\x46\x36\x9d\x42\xae\xb4\x43\x19\x6c\x54\x4c\x53\xa2\x38\x73\xad\xb2\xef\x13\xa2\x23\x1a\x74\x22\x20\x17\x4e\x75\xda\x58\x3e\x5e\xf0\x73\x4a\x34\x76\xf7\x62\x5e\x42\xcd\x8a\x1a\x88\xbc\x93\x7e\x04\x9e\x1e\x59\x04\x4e\xca\x5d\x80\x87\x2a\x67\x8f\x40\xb4\xb7\xc2\xa9\xbe\x1f\xbd\x83\x70\x47\x0c\x5c\xda\xf6\xac\x1b\xe4\x0a\x0f\xda\xe8\xa0\xad\xf1\x37\x77\xd8\xb0\xc5\x2e\xdf\x96\xc0\x79\xbe\x63\x3c\x96\xcb\x79\xdc\x6d\xe7\x83\x6d\xb3\x37\x92\xd1\xf4\x0e\xd0\xa8\x24\x39\xe8\x06\xa7\x1f\x97\xd5\x03\x67\x65\xf1\x99\xd5\x25\xd4\xac\x18\xd6\x57\x43\x3a\x9b\xcd\xbd\x93\xf3\xf7\x33\x79\x3e\xa7\x6f\x8f\xf2\x8f\x53\x3a\x34\x2e\x1d\x8a\x80\x43\xbf\x07\xed\xda\x57\xe1\x30\xb9\xbb\x7d\x66\x47\x34\xff\x2a\xe9\xca\xff\xdd\xd2\x84\x6e\x49\x06\x30\x67\x8f\xcb\xc5\x43\x2c\x6b\x78\xc6\xb7\xf5\x8d\x92\x0b\xd5\xe8\xfd\x05\xd8\x54\x6c\x1b\x9f\xaf\x75\xe1\x7f\x14\xfb\x2b\x00\x00\xff\xff\xfe\xd3\x72\xb3\x7e\x03\x00\x00"

func assetsTemplatesCmakeCmakelistsTxtLibTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistsTxtLibTpl,
		"assets/templates/cmake/CMakeLists.txt-lib.tpl",
	)
}

func assetsTemplatesCmakeCmakelistsTxtLibTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistsTxtLibTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeLists.txt-lib.tpl", size: 894, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmaketargetCmakeAppTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x52\xd1\x8e\xda\x30\x10\x7c\xcf\x57\xac\x52\x4e\xe2\x2a\x05\xbe\x21\x97\x4b\x7b\xa8\x40\x90\x43\xe9\x3d\x9c\x64\x19\x7b\x01\xb7\x89\x4d\x6d\xa7\xa7\x6a\x95\x7f\xaf\x9c\x00\xbd\xaa\x7d\xef\x5b\x3c\xb3\x33\x9e\xcc\xda\x63\x98\x7e\x29\xaa\x3a\xe7\x9b\x7c\xfb\x04\x29\xd1\xab\xb4\x5e\x64\x67\x11\x4e\x7d\x9f\xde\x27\x71\x60\x57\x32\x20\x92\xad\xf8\x86\xd9\x0f\x74\x5e\x5b\xd3\xf7\x23\xb5\xce\x57\x25\x10\x9d\x9d\xfd\x8a\x32\x64\x46\xb4\x18\xa9\xe4\x1d\x14\xd6\x0b\xd8\x5a\xdb\xc8\x93\xd0\x66\x18\x2e\x56\xf9\xa7\x92\x6f\xab\x6a\x59\x3c\xe5\x8b\x35\xff\xb0\x58\x96\x90\x4e\xe8\x77\x80\x7e\x1e\xae\x8a\xf9\x70\xdf\x3c\xda\xdc\x5c\x66\x03\x96\xde\x27\xc9\xf0\xc1\x5b\x6d\x74\xdb\xb5\xdc\xe1\xf7\x4e\x3b\x54\x31\x69\xbd\xa8\xd6\x30\xa1\x5d\xc9\x62\x8e\x4b\xb0\xe9\x84\x62\xd2\x1e\x0a\x28\x9e\x9f\x21\xaf\x57\x43\x46\xa1\x14\x78\x14\x4e\x9e\x20\xfe\xb0\x87\x83\x75\x20\x9a\x06\xc2\x09\xa1\xf3\xe8\xa0\xd1\x7b\x27\x9c\x46\x0f\xc2\x28\xd8\x77\xba\x51\x91\x6c\x93\xbb\x48\x65\xa3\x38\x21\xd2\x46\x36\x9d\x42\xae\xb4\x43\x19\x6c\x54\x4c\x53\xa2\x38\x73\xad\xb2\xef\x13\xa2\x23\x1a\x74\x22\x20\x17\x4e\x75\xda\x58\x3e\x5e\xf0\x73\x4a\x34\x76\xf7\x62\x5e\x42\xcd\x8a\x1a\x88\xbc\x93\x7e\x04\x9e\x1e\x59\x04\x4e\xca\x5d\x80\x87\x2a\x67\x8f\x40\xb4\xb7\xc2\xa9\xbe\x1f\xbd\x83\x70\x47\x0c\x5c\xda\xf6\xac\x1b\xe4\x0a\x0f\xda\xe8\xa0\xad\xf1\x37\x77\xd8\xb0\xc5\x2e\xdf\x96\xc0\x79\xbe\x63\x3c\x96\xcb\x79\xdc\x6d\xe7\x83\x6d\xb3\x37\x92\xd1\xf4\x0e\xd0\xa8\x24\x39\xe8\x06\xa7\x1f\x97\xd5\x03\x67\x65\xf1\x99\xd5\x25\xd4\xac\x18\xd6\x57\x43\x3a\x9b\xcd\xbd\x93\xf3\xf7\x33\x79\x3e\xa7\x6f\x8f\xf2\x8f\x53\x3a\x34\x2e\x1d\x8a\x80\x43\xbf\x07\xed\xda\x57\xe1\x30\xb9\xbb\x7d\x66\x47\x34\xff\x2a\xe9\xca\xff\xdd\xd2\x84\x6e\x49\x06\x30\x67\x8f\xcb\xc5\x43\x2c\x6b\x78\xc6\xb7\xf5\x8d\x92\x0b\xd5\xe8\xfd\x05\xd8\x54\x6c\x1b\x9f\xaf\x75\xe1\x7f\x14\xfb\x2b\x00\x00\xff\xff\xfe\xd3\x72\xb3\x7e\x03\x00\x00"

func assetsTemplatesCmakeCmaketargetCmakeAppTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmaketargetCmakeAppTpl,
		"assets/templates/cmake/CMakeTarget.cmake-app.tpl",
	)
}

func assetsTemplatesCmakeCmaketargetCmakeAppTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmaketargetCmakeAppTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeTarget.cmake-app.tpl", size: 894, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmaketargetCmakeLibTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x52\xd1\x8e\xda\x30\x10\x7c\xcf\x57\xac\x52\x4e\xe2\x2a\x05\xbe\x21\x97\x4b\x7b\xa8\x40\x90\x43\xe9\x3d\x9c\x64\x19\x7b\x01\xb7\x89\x4d\x6d\xa7\xa7\x6a\x95\x7f\xaf\x9c\x00\xbd\xaa\x7d\xef\x5b\x3c\xb3\x33\x9e\xcc\xda\x63\x98\x7e\x29\xaa\x3a\xe7\x9b\x7c\xfb\x04\x29\xd1\xab\xb4\x5e\x64\x67\x11\x4e\x7d\x9f\xde\x27\x71\x60\x57\x32\x20\x92\xad\xf8\x86\xd9\x0f\x74\x5e\x5b\xd3\xf7\x23\xb5\xce\x57\x25\x10\x9d\x9d\xfd\x8a\x32\x64\x46\xb4\x18\xa9\xe4\x1d\x14\xd6\x0b\xd8\x5a\xdb\xc8\x93\xd0\x66\x18\x2e\x56\xf9\xa7\x92\x6f\xab\x6a\x59\x3c\xe5\x8b\x35\xff\xb0\x58\x96\x90\x4e\xe8\x77\x80\x7e\x1e\xae\x8a\xf9\x70\xdf\x3c\xda\xdc\x5c\x66\x03\x96\xde\x27\xc9\xf0\xc1\x5b\x6d\x74\xdb\xb5\xdc\xe1\xf7\x4e\x3b\x54\x31\x69\xbd\xa8\xd6\x30\xa1\x5d\xc9\x62\x8e\x4b\xb0\xe9\x84\x62\xd2\x1e\x0a\x28\x9e\x9f\x21\xaf\x57\x43\x46\xa1\x14\x78\x14\x4e\x9e\x20\xfe\xb0\x87\x83\x75\x20\x9a\x06\xc2\x09\xa1\xf3\xe8\xa0\xd1\x7b\x27\x9c\x46\x0f\xc2\x28\xd8\x77\xba\x51\x91\x6c\x93\xbb\x48\x65\xa3\x38\x21\xd2\x46\x36\x9d\x42\xae\xb4\x43\x19\x6c\x54\x4c\x53\xa2\x38\x73\xad\xb2\xef\x13\xa2\x23\x1a\x74\x22\x20\x17\x4e\x75\xda\x58\x3e\x5e\xf0\x73\x4a\x34\x76\xf7\x62\x5e\x42\xcd\x8a\x1a\x88\xbc\x93\x7e\x04\x9e\x1e\x59\x04\x4e\xca\x5d\x80\x87\x2a\x67\x8f\x40\xb4\xb7\xc2\xa9\xbe\x1f\xbd\x83\x70\x47\x0c\x5c\xda\xf6\xac\x1b\xe4\x0a\x0f\xda\xe8\xa0\xad\xf1\x37\x77\xd8\xb0\xc5\x2e\xdf\x96\xc0\x79\xbe\x63\x3c\x96\xcb\x79\xdc\x6d\xe7\x83\x6d\xb3\x37\x92\xd1\xf4\x0e\xd0\xa8\x24\x39\xe8\x06\xa7\x1f\x97\xd5\x03\x67\x65\xf1\x99\xd5\x25\xd4\xac\x18\xd6\x57\x43\x3a\x9b\xcd\xbd\x93\xf3\xf7\x33\x79\x3e\xa7\x6f\x8f\xf2\x8f\x53\x3a\x34\x2e\x1d\x8a\x80\x43\xbf\x07\xed\xda\x57\xe1\x30\xb9\xbb\x7d\x66\x47\x34\xff\x2a\xe9\xca\xff\xdd\xd2\x84\x6e\x49\x06\x30\x67\x8f\xcb\xc5\x43\x2c\x6b\x78\xc6\xb7\xf5\x8d\x92\x0b\xd5\xe8\xfd\x05\xd8\x54\x6c\x1b\x9f\xaf\x75\xe1\x7f\x14\xfb\x2b\x00\x00\xff\xff\xfe\xd3\x72\xb3\x7e\x03\x00\x00"

func assetsTemplatesCmakeCmaketargetCmakeLibTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmaketargetCmakeLibTpl,
		"assets/templates/cmake/CMakeTarget.cmake-lib.tpl",
	)
}

func assetsTemplatesCmakeCmaketargetCmakeLibTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmaketargetCmakeLibTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeTarget.cmake-lib.tpl", size: 894, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectAppHelp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x50\x31\x4e\xc4\x30\x10\xec\xf3\x8a\x91\xd2\xdc\x15\xdc\x03\xd2\x51\x80\x68\x40\x48\x54\x08\x21\xb4\x71\x36\xc1\x9c\xe3\xb5\xd6\xeb\x83\xfc\x1e\xc5\x47\x74\x40\xe7\xf5\xce\xcc\xce\x4c\x0b\x4a\x09\x46\x13\x7c\x86\xbd\x33\x9c\x28\xc3\xc7\x51\x74\x26\xf3\x12\x41\xbd\x14\xab\xab\xa4\xf2\xc1\xce\x0e\xb8\x63\x65\x2c\x52\xe0\x28\x22\x27\x76\x7e\x5c\xce\x88\x40\xb6\x32\x41\x71\xc0\xa8\x34\xf3\xa7\xe8\x11\x25\xf3\xd0\xb4\x18\x45\x2b\x8a\x52\x0a\xde\x55\xf5\x03\x9e\x64\x66\x1c\x79\x41\x12\x1f\x2d\x77\x4d\x8b\x2b\x3c\xff\x68\x3b\x65\x32\xc6\x5c\x82\xf9\x14\x18\x46\x3a\xb1\x65\xec\xf8\x8b\x5d\x31\xea\x03\xe7\x3d\x4c\x60\x9c\x6d\x75\xa4\xbf\xc5\xb1\x1b\x78\xa4\x12\x6c\xcd\x26\x71\xa3\xef\xeb\x89\xdb\xcd\x5d\x46\x2e\x29\x89\x1a\x0f\x20\xe5\x0e\x74\xd2\x8a\x78\xdc\xc2\xfc\xdb\x3b\xc9\xf4\xc7\xe5\xd6\x00\xc5\x05\xc1\xf7\x4a\xea\x79\x2d\x93\x6c\x25\xa0\x67\x1f\xa7\xda\x01\xfa\xe5\x6c\xf2\x8c\x5a\x9a\x16\xb8\x30\xba\x3a\x02\x0f\xd7\xf7\x37\xdb\x1b\x28\x1a\x2e\xc3\x89\x35\x7b\x89\x97\x0f\x27\x73\xf2\x81\xdf\xc6\x40\x53\xee\xf0\xf2\xda\x7c\x07\x00\x00\xff\xff\x45\x0e\x99\x5f\xd1\x01\x00\x00"

func assetsTemplatesConfigProjectAppHelpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectAppHelp,
		"assets/templates/config/project-app-help",
	)
}

func assetsTemplatesConfigProjectAppHelp() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectAppHelpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-app-help", size: 465, mode: os.FileMode(420), modTime: time.Unix(1522274298, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectAppYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8d\x41\x0e\xc2\x30\x0c\x04\xef\x7e\xc5\xbe\xc3\x5f\x41\xa8\xda\x52\xa7\x8a\x88\x9b\xc8\x09\xe2\xfb\xa8\x0d\x82\xcb\x78\x3c\x97\x65\x6b\x2a\xc0\x41\x37\xbd\x28\x40\xde\x4c\x4f\x08\xd0\x0a\x47\xaa\xe1\xfa\x33\x01\x52\xd0\xed\x5d\xe3\xa9\x7f\x15\x60\xb3\xc4\x57\x19\xcb\x60\xec\x36\x14\xce\x7c\x88\x00\xf3\xef\xe7\x0c\xae\x38\x0d\x58\x2b\x63\xd3\x79\xbe\xe9\x51\xbd\xe5\x62\x4b\x2a\xdc\xbb\xe2\x76\x17\x29\x79\x0d\x46\xb6\xae\x9f\x00\x00\x00\xff\xff\x3b\xea\xd1\x39\xac\x00\x00\x00"

func assetsTemplatesConfigProjectAppYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectAppYml,
		"assets/templates/config/project-app.yml",
	)
}

func assetsTemplatesConfigProjectAppYml() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectAppYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-app.yml", size: 172, mode: os.FileMode(420), modTime: time.Unix(1522257594, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectLibHelp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\xcf\x6a\xdc\x30\x10\xc6\xef\xfb\x14\x1f\xd9\xcb\x06\xd2\x3e\xc0\xde\x72\x68\xe9\x21\x2d\x85\xd2\x43\x29\xa5\x8c\xec\xf1\x5a\x44\xd6\x98\x99\x51\xb6\x7e\xfb\x22\xc5\x8b\x71\xc8\xcd\xb2\x66\x7e\xdf\x1f\x1d\x91\x62\x80\xd3\x05\xd1\xe0\x23\xa3\x13\x65\xc4\x3c\x88\x4e\xe4\x51\x32\x28\x48\xf1\x76\x95\x62\x50\xd2\xe5\x23\xbe\xb0\x32\x16\x29\xe8\x28\xc3\x66\xee\xe2\xb0\x80\x52\x6a\x53\x13\x3b\xed\x00\x3e\x92\x1f\x8e\xb8\xc6\x94\x10\x18\x36\xca\x35\xc3\xa5\x0d\x17\x63\x85\x0c\x15\xa6\x1b\xff\x87\x4c\x8c\x67\x5e\x30\x4b\xcc\x6e\xe7\xc3\x11\x1f\xf0\xeb\x8d\xde\x54\x92\xc7\x39\x31\xa8\xf8\x28\x6a\x0f\x98\x13\x79\x95\xb5\x07\x0c\x4a\x13\x5f\x45\x9f\x0d\x94\x7b\x04\x21\xed\xad\x61\x7e\x1a\x37\xe5\x86\xa1\x54\x65\xae\xa2\x3d\xee\x1e\x9f\x9e\xee\xaa\xad\x1b\xbf\xda\x6e\xa1\x5e\x97\x41\xba\x2e\x0d\x91\x7b\x9c\x7c\x8c\x56\x3b\xeb\x79\xa0\x92\xfc\x7e\xe7\xb1\x53\x26\xe7\xcd\xa2\x93\x5e\xd8\x0d\x27\xfe\xc7\x5d\x71\x0a\x89\xed\xbe\x75\xc0\xe6\xbb\xf0\x38\xad\xc0\xca\x96\x7c\x5b\x7d\xc5\x7f\xde\x52\x59\x99\x67\x51\xe7\xbe\xfa\x3a\x83\x5e\xb4\x4d\x7c\x5f\x2b\x78\x7b\xdf\x89\xd1\xbb\x2d\x52\x5e\x56\xe9\xc8\xb6\x66\x56\x46\xe0\x98\x2f\xf5\x75\x7a\x84\x65\x67\xf0\x70\x04\xb6\x8d\x73\x3b\x02\xdf\x1e\xbf\x7e\xba\x7d\x03\x45\xd3\x76\x78\x61\xb5\x28\x79\xfb\xd1\xc9\x34\xc7\xc4\x7f\x87\x44\x17\x3b\xe3\xf7\x9f\xc3\xff\x00\x00\x00\xff\xff\xb8\xd7\x62\xb7\x85\x02\x00\x00"

func assetsTemplatesConfigProjectLibHelpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectLibHelp,
		"assets/templates/config/project-lib-help",
	)
}

func assetsTemplatesConfigProjectLibHelp() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectLibHelpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-lib-help", size: 645, mode: os.FileMode(420), modTime: time.Unix(1522274300, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectLibYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xbd\x0e\x83\x30\x0c\x84\x77\x3f\xc5\x3d\x01\xa2\xab\xb7\xee\xbc\x01\xaa\x90\x01\x87\x46\x4d\x08\x72\x42\xfb\xfa\x15\x3f\x65\xe9\x72\xbe\xef\x64\x9d\x1d\x7c\xcf\x04\xcc\x12\x95\x77\x25\xe0\xad\x96\x7d\x9a\x19\x75\x55\x57\x37\x02\x64\x2d\xcf\x64\x99\xd1\x3e\x08\x08\x7e\xd0\x39\xeb\x49\x4b\x90\xe2\x92\x45\xbe\x1c\x01\xce\x24\xea\x27\xd9\xeb\x5c\xea\x93\xd8\xc8\x68\xef\x4d\xb3\xe1\x90\xe2\xe2\x83\x76\x2e\xc8\xf4\x6b\xf5\xa3\xf2\x26\x04\x8c\xea\x64\x0d\xa5\x2b\x62\x93\x16\x46\xd1\x5c\x88\x80\x83\xf3\xf6\x2f\xf6\xf0\x70\x57\xfd\x3e\xce\xe8\xff\x04\x05\xdf\x9b\x98\xd7\xcc\xdf\x00\x00\x00\xff\xff\xa8\x10\x9d\x4d\xf5\x00\x00\x00"

func assetsTemplatesConfigProjectLibYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectLibYml,
		"assets/templates/config/project-lib.yml",
	)
}

func assetsTemplatesConfigProjectLibYml() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectLibYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-lib.yml", size: 245, mode: os.FileMode(420), modTime: time.Unix(1522260204, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreClion = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\xcf\xcc\xd7\xe7\x72\xf6\x4d\xcc\x4e\xf5\xc9\x2c\x2e\x29\x0e\x28\xca\x2c\x4b\x2c\x49\xd5\x2b\xa9\x28\xe1\xd2\xcb\x4c\x49\x4d\xd4\xe7\x4a\xce\x4d\xcc\x4e\xd5\x4d\x2a\xcd\xcc\x49\xd1\x4d\x49\x4d\x2a\x4d\xd7\xe7\x02\x04\x00\x00\xff\xff\x88\xc9\x2b\x5b\x36\x00\x00\x00"

func assetsTemplatesGitignoreGitignoreClionBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreClion,
		"assets/templates/gitignore/.gitignore-clion",
	)
}

func assetsTemplatesGitignoreGitignoreClion() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreClionBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-clion", size: 54, mode: os.FileMode(420), modTime: time.Unix(1522260315, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreGeneral = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\xcf\xcc\xd7\xe7\x02\x04\x00\x00\xff\xff\xdd\x1c\xfa\x30\x06\x00\x00\x00"

func assetsTemplatesGitignoreGitignoreGeneralBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreGeneral,
		"assets/templates/gitignore/.gitignore-general",
	)
}

func assetsTemplatesGitignoreGitignoreGeneral() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreGeneralBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-general", size: 6, mode: os.FileMode(420), modTime: time.Unix(1522260325, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsTxtTpl,
		"assets/templates/ide/clion/app/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsTxtTpl,
		"assets/templates/ide/clion/lib/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramAppMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\x50\x72\xce\x2f\x4e\xd4\x0f\x0a\x09\xd1\xcb\xc8\x50\xe2\x42\x13\xf6\x2f\x2d\x29\x28\x2d\x09\xc8\xcc\x03\x4b\x72\xc1\xb9\x0a\x39\xa9\x29\x01\x99\x79\x1a\x4e\xf9\x89\x45\x29\x56\x56\x3e\xae\x2e\x9a\xd6\x5c\x5c\x65\xf9\x99\x29\x0a\xc5\xa9\x25\xa5\x05\x1a\x9a\x0a\xd5\x5c\x0a\x0a\x0a\x0a\x41\x21\x21\x56\x56\x49\xa9\xe9\x99\x79\x1a\x9a\xd6\x5c\xb5\x50\x35\x39\xf9\xf9\x08\x25\x10\xa3\xf4\xf2\xc1\x2a\x40\x02\x29\xa9\x39\x89\x95\x1a\xa6\x06\x50\x2e\x4c\x3e\x2d\x0d\x5d\x81\x01\xd8\x48\x40\x00\x00\x00\xff\xff\xae\x1c\x30\xf2\xca\x00\x00\x00"

func assetsTemplatesSampleProgramAppMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramAppMainCpp,
		"assets/templates/sample-program/app/main.cpp",
	)
}

func assetsTemplatesSampleProgramAppMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramAppMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/app/main.cpp", size: 202, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramLibLibCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibLibCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramLibLibCpp,
		"assets/templates/sample-program/lib/lib.cpp",
	)
}

func assetsTemplatesSampleProgramLibLibCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramLibLibCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/lib/lib.cpp", size: 0, mode: os.FileMode(420), modTime: time.Unix(1522258405, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramLibLibH = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibLibHBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramLibLibH,
		"assets/templates/sample-program/lib/lib.h",
	)
}

func assetsTemplatesSampleProgramLibLibH() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramLibLibHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/lib/lib.h", size: 0, mode: os.FileMode(420), modTime: time.Unix(1522258398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramLibMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramLibMainCpp,
		"assets/templates/sample-program/lib/main.cpp",
	)
}

func assetsTemplatesSampleProgramLibMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramLibMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/lib/main.cpp", size: 0, mode: os.FileMode(420), modTime: time.Unix(1522258388, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/config/defaults.yml": assetsConfigDefaultsYml,
	"assets/config/paths.json": assetsConfigPathsJson,
	"assets/config/paths.yml": assetsConfigPathsYml,
	"assets/templates/cmake/CMakeLists.txt-app.tpl": assetsTemplatesCmakeCmakelistsTxtAppTpl,
	"assets/templates/cmake/CMakeLists.txt-lib.tpl": assetsTemplatesCmakeCmakelistsTxtLibTpl,
	"assets/templates/cmake/CMakeTarget.cmake-app.tpl": assetsTemplatesCmakeCmaketargetCmakeAppTpl,
	"assets/templates/cmake/CMakeTarget.cmake-lib.tpl": assetsTemplatesCmakeCmaketargetCmakeLibTpl,
	"assets/templates/config/project-app-help": assetsTemplatesConfigProjectAppHelp,
	"assets/templates/config/project-app.yml": assetsTemplatesConfigProjectAppYml,
	"assets/templates/config/project-lib-help": assetsTemplatesConfigProjectLibHelp,
	"assets/templates/config/project-lib.yml": assetsTemplatesConfigProjectLibYml,
	"assets/templates/gitignore/.gitignore-clion": assetsTemplatesGitignoreGitignoreClion,
	"assets/templates/gitignore/.gitignore-general": assetsTemplatesGitignoreGitignoreGeneral,
	"assets/templates/ide/clion/app/CMakeLists.txt.tpl": assetsTemplatesIdeClionAppCmakelistsTxtTpl,
	"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
	"assets/templates/ide/clion/lib/CMakeLists.txt.tpl": assetsTemplatesIdeClionLibCmakelistsTxtTpl,
	"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
	"assets/templates/sample-program/app/main.cpp": assetsTemplatesSampleProgramAppMainCpp,
	"assets/templates/sample-program/lib/lib.cpp": assetsTemplatesSampleProgramLibLibCpp,
	"assets/templates/sample-program/lib/lib.h": assetsTemplatesSampleProgramLibLibH,
	"assets/templates/sample-program/lib/main.cpp": assetsTemplatesSampleProgramLibMainCpp,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"config": &bintree{nil, map[string]*bintree{
			"defaults.yml": &bintree{assetsConfigDefaultsYml, map[string]*bintree{}},
			"paths.json": &bintree{assetsConfigPathsJson, map[string]*bintree{}},
			"paths.yml": &bintree{assetsConfigPathsYml, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"cmake": &bintree{nil, map[string]*bintree{
				"CMakeLists.txt-app.tpl": &bintree{assetsTemplatesCmakeCmakelistsTxtAppTpl, map[string]*bintree{}},
				"CMakeLists.txt-lib.tpl": &bintree{assetsTemplatesCmakeCmakelistsTxtLibTpl, map[string]*bintree{}},
				"CMakeTarget.cmake-app.tpl": &bintree{assetsTemplatesCmakeCmaketargetCmakeAppTpl, map[string]*bintree{}},
				"CMakeTarget.cmake-lib.tpl": &bintree{assetsTemplatesCmakeCmaketargetCmakeLibTpl, map[string]*bintree{}},
			}},
			"config": &bintree{nil, map[string]*bintree{
				"project-app-help": &bintree{assetsTemplatesConfigProjectAppHelp, map[string]*bintree{}},
				"project-app.yml": &bintree{assetsTemplatesConfigProjectAppYml, map[string]*bintree{}},
				"project-lib-help": &bintree{assetsTemplatesConfigProjectLibHelp, map[string]*bintree{}},
				"project-lib.yml": &bintree{assetsTemplatesConfigProjectLibYml, map[string]*bintree{}},
			}},
			"gitignore": &bintree{nil, map[string]*bintree{
				".gitignore-clion": &bintree{assetsTemplatesGitignoreGitignoreClion, map[string]*bintree{}},
				".gitignore-general": &bintree{assetsTemplatesGitignoreGitignoreGeneral, map[string]*bintree{}},
			}},
			"ide": &bintree{nil, map[string]*bintree{
				"clion": &bintree{nil, map[string]*bintree{
					"app": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
					"lib": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
				}},
			}},
			"sample-program": &bintree{nil, map[string]*bintree{
				"app": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramAppMainCpp, map[string]*bintree{}},
				}},
				"lib": &bintree{nil, map[string]*bintree{
					"lib.cpp": &bintree{assetsTemplatesSampleProgramLibLibCpp, map[string]*bintree{}},
					"lib.h": &bintree{assetsTemplatesSampleProgramLibLibH, map[string]*bintree{}},
					"main.cpp": &bintree{assetsTemplatesSampleProgramLibMainCpp, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

