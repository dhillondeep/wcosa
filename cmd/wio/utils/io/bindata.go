// Code generated by go-bindata.
// sources:
// ../../../../assets/config/create_paths.json
// ../../../../assets/config/defaults.yml
// ../../../../assets/config/paths.yml
// ../../../../assets/config/update_paths.json
// ../../../../assets/templates/cmake/CMakeListsApp.txt.tpl
// ../../../../assets/templates/cmake/CMakeListsPkg.txt.tpl
// ../../../../assets/templates/cmake/dependencies.txt
// ../../../../assets/templates/config/app-helper.txt
// ../../../../assets/templates/config/dependencies-helper.txt
// ../../../../assets/templates/config/pkg-helper.txt
// ../../../../assets/templates/config/project-app.yml
// ../../../../assets/templates/config/project-pkg.yml
// ../../../../assets/templates/config/targets-helper.txt
// ../../../../assets/templates/gitignore/.gitignore-clion
// ../../../../assets/templates/gitignore/.gitignore-general
// ../../../../assets/templates/ide/clion/app/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/sample-program/app/main.cpp
// ../../../../assets/templates/sample-program/pkg/main.cpp
// ../../../../assets/templates/sample-program/pkg/output.cpp
// ../../../../assets/templates/sample-program/pkg/output.h
// DO NOT EDIT!

package io

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsConfigCreate_pathsJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\xd4\xbf\x6a\xc3\x30\x10\x06\xf0\xdd\x4f\x21\x34\xc7\xd6\x9e\xb5\x5b\x69\x49\x08\xdd\x4a\x07\x55\xbe\x28\x57\xcb\xd6\x21\x9d\xd3\x16\xe3\x77\x2f\x36\xb4\x69\x82\x89\xf3\xa7\x49\xba\x18\x23\xbe\x33\x3f\x64\xee\x6b\x12\x21\x24\x69\x5e\x45\x39\x15\xcf\x89\x10\x42\x34\xfd\x53\x08\x89\xb9\x9c\x0a\xa9\x89\x52\x0b\x95\x9c\x7c\x1f\xc7\x60\xba\x73\x86\x92\x9c\x66\x88\xca\xf8\x6a\x89\x56\x51\xf0\x6f\x60\x38\xd5\x44\xd9\x67\xe9\x36\x03\x39\x74\x1f\x97\x4d\x33\x5f\xdc\xa7\x8b\xd9\xec\xa9\x6d\xd5\x3b\xfa\xed\x90\x5f\x43\x08\x98\x83\x9c\x8a\xa5\x76\x11\xfa\xf3\x76\x72\x9a\x28\xea\x92\x1c\xa4\x14\xbc\x0d\xba\x54\x9a\x48\x95\x1a\xab\xcc\x10\xed\x67\xc5\x60\x06\x92\x7f\x6a\xb3\xc8\x68\x2b\x1f\x40\x65\x3f\xaf\xdd\x08\x04\x3d\x72\x67\x9b\xfc\xc9\x34\xe3\xd0\x1f\x8d\xdb\x19\xba\x11\x0d\x73\x50\x7d\xa6\xff\x9d\x77\x8f\xba\x80\x07\x8c\x1c\x33\xfe\xe0\x8c\x69\xe4\xee\xb6\xf3\x57\x47\xce\x03\xae\x35\xc3\xb1\xd6\x5f\x63\x83\x64\x0e\xf5\x3e\x31\x15\xf6\xb8\xd5\xa5\xc2\x5e\x76\x75\xc7\x45\x3b\xab\x4b\x85\x55\xbe\x66\xaa\x39\x5b\xed\x67\x61\x65\x5c\x9d\xc3\x40\xfa\x4a\xbe\x83\xca\x65\x28\x7b\x69\xdf\x61\xd5\xc7\x10\x39\x9e\x57\x7e\xe3\xba\x9b\x95\x5f\x47\xfb\xa7\xe5\x77\x08\x6d\xd3\x2b\x0e\x5f\x6f\x51\x7e\xe7\x20\x2f\x5e\x7e\x89\x10\x2f\x49\x9b\x7c\x05\x00\x00\xff\xff\x60\xef\xe0\xaf\xcc\x08\x00\x00"

func assetsConfigCreate_pathsJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigCreate_pathsJson,
		"assets/config/create_paths.json",
	)
}

func assetsConfigCreate_pathsJson() (*asset, error) {
	bytes, err := assetsConfigCreate_pathsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/create_paths.json", size: 2252, mode: os.FileMode(420), modTime: time.Unix(1527448723, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigDefaultsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcf\x31\x6e\xe4\x30\x0c\x85\xe1\x5e\xa7\x78\xa0\xfb\xc1\x6c\xeb\x53\x6c\x91\x0b\xd0\x12\x35\x16\x22\x91\x06\x25\x39\xc8\xed\x03\x27\x93\xa9\xc2\x96\x1f\x7e\xe0\x2d\x78\xdb\x4b\x47\x34\x1d\x5c\xb4\x83\x6b\xc5\xd8\x05\x49\x32\xcf\x3a\x70\x72\x9d\xd2\x91\xcd\x11\xad\x35\xd6\x54\x8b\x0a\xd8\x1f\xb3\x89\x8e\x1e\x16\xfc\xe7\xb1\xff\x3a\x76\x81\xda\x40\xd1\x58\x67\x92\x84\x4d\x22\xcf\x2e\x57\xf3\xf3\xfb\xdb\x38\xee\x57\xa1\x1f\x12\x4b\x2e\x31\x84\x92\x64\x05\xa9\xa9\x50\xc8\xce\x4d\x3e\xcc\xdf\x57\x50\xb4\xce\x14\x8e\xca\x23\x9b\xb7\x15\xc4\xa7\x53\x38\xcc\xc7\x8b\x9f\xe2\xbd\x98\xae\xa0\xfb\xed\x7e\xfb\x47\x61\x33\xf6\xb4\x82\xa6\x1a\x85\x6d\xb0\x3f\xe4\xd2\xcf\x35\x84\xe7\x2d\xd8\x66\xa9\x09\x3f\x20\xcc\x3f\xe1\x82\x79\x54\xe3\x97\xfa\x0a\x00\x00\xff\xff\x7f\xb1\x41\xe6\x2b\x01\x00\x00"

func assetsConfigDefaultsYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigDefaultsYml,
		"assets/config/defaults.yml",
	)
}

func assetsConfigDefaultsYml() (*asset, error) {
	bytes, err := assetsConfigDefaultsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/defaults.yml", size: 299, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigPathsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\x4a\x29\xcd\xcc\xcb\xd7\x2d\x4e\xc9\xd6\x2d\x48\x2c\xc9\xb0\x52\x50\x52\xe2\x4a\xce\x2f\x4e\x44\x15\x49\x2c\x2b\x42\xe2\x14\xe5\x22\x38\xb9\x89\xd9\xa9\x48\x3a\x51\xb9\x80\x00\x00\x00\xff\xff\x60\xc2\x95\x1d\x5e\x00\x00\x00"

func assetsConfigPathsYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigPathsYml,
		"assets/config/paths.yml",
	)
}

func assetsConfigPathsYml() (*asset, error) {
	bytes, err := assetsConfigPathsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/paths.yml", size: 94, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigUpdate_pathsJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\xd3\x41\x4b\xf4\x30\x10\x06\xe0\x7b\x7e\xc5\x90\xf3\xb6\xb9\xf7\xfa\xdd\x3e\x94\x5d\x16\x6f\xe2\x21\xb6\xb3\x71\x6c\xb6\x19\x92\x71\x55\x4a\xff\xbb\xb4\xa0\x75\x45\xac\x5d\x59\xeb\xa5\x94\x61\xde\xf0\x10\xf2\xb6\x0a\x40\xb3\x95\xbb\xa4\x0b\xb8\x56\x00\x00\xed\xf0\x05\xd0\x54\xe9\x02\xb4\x65\xce\x1c\x36\x7a\xf5\x3a\x4e\xb1\xec\xe7\x82\x7b\xf6\x56\x30\x99\x32\x34\x3b\x72\x86\x63\xb8\xc7\x52\x32\xcb\x9c\x3f\xef\xfd\x18\xa8\xb0\x3f\x5c\xb7\xed\x66\xfb\x3f\xdb\xae\xd7\x57\x5d\x67\x1e\x29\x1c\x2f\x85\x03\xc6\x48\x15\xea\x02\x76\xd6\x27\x1c\xe6\xdd\xea\x34\x91\x23\x21\xd7\x84\x88\x26\x7f\xfb\xed\x23\x18\xed\x84\x6b\xdc\x3f\x99\x56\x7a\x0a\xb3\x71\x1f\x42\x0b\xd1\xa8\x42\x33\xec\x18\xcb\x6c\xfe\x5d\xda\x1a\x2f\x28\x49\xca\xe5\x49\x72\xe1\x89\xbb\x3b\xde\xff\x75\xe4\x26\xd2\xc1\x0a\xce\xb5\xbe\x8b\x7d\x4a\x96\xf8\xf0\x95\x98\x6b\x37\xaf\x1e\x5c\xbb\xf3\xd6\x63\x5a\xb4\x58\x3d\x7a\xda\x1f\xad\xc7\x77\x68\xe3\xcb\xf3\x74\xbb\x44\x3d\x7e\x82\x3c\x7b\x3d\x14\xc0\x8d\xea\xd4\x4b\x00\x00\x00\xff\xff\x0a\x46\xbb\x19\x52\x06\x00\x00"

func assetsConfigUpdate_pathsJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigUpdate_pathsJson,
		"assets/config/update_paths.json",
	)
}

func assetsConfigUpdate_pathsJson() (*asset, error) {
	bytes, err := assetsConfigUpdate_pathsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/update_paths.json", size: 1618, mode: os.FileMode(420), modTime: time.Unix(1527448637, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistsappTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\x4d\x6f\x9b\x40\x10\xbd\xf3\x2b\x46\x2e\x07\xe8\xc1\xb1\x9a\x5f\xb0\x59\xc6\x0e\x0d\xb0\x68\xc1\x6e\x7a\x5a\x59\x30\x8e\xb6\x35\x1f\x5d\x63\x55\x15\xe2\xbf\x57\x6b\xc0\xb1\x23\xe5\x04\xf3\xe6\x69\xe6\xbd\x37\x7b\xa2\xce\xe3\x31\x7b\x41\xb5\x43\x09\x8f\xcb\xd5\x72\xe5\x3b\x16\x4c\xa5\xf8\x8e\x3c\x57\x09\x8b\x11\xfa\xfe\xb6\x1c\x86\x7b\x4a\xca\xf2\x67\x58\xbc\x73\x6c\x3d\x0c\x8b\x91\x34\x0e\xcf\x85\x88\xf8\x33\x0b\x13\xb5\x0e\x23\xb4\xe4\x7b\x64\xa6\xc3\xc4\x8f\x45\xb0\x8d\x70\x9a\xec\xf6\x23\xc8\xb7\x52\x62\x92\xab\x4c\x6c\x25\x47\x15\x84\x72\x5e\x12\x60\x8a\x49\x80\x09\xff\x39\xce\x2f\xa9\xa5\xba\xa4\xba\xd0\x74\xf2\x1d\xe7\x0b\xb4\xa6\x69\xc9\x74\x9a\x4e\x17\x7e\xce\xe4\x06\xaf\xde\x6e\xaa\xd9\xda\x93\x60\x32\x80\xbe\xbf\x7c\x67\x70\x2d\x59\x8c\x3f\x84\x7c\x81\xbe\xbf\xfe\xdb\xa6\x53\x54\xfb\xdf\xa4\x2a\x5d\xeb\xea\x5c\x29\x43\x7f\xce\xda\x50\xe9\xed\x50\x66\xa1\x48\x60\x36\x30\xd5\x83\xef\xb4\xa6\xf9\x45\x45\xe7\xb9\xf7\xc1\x02\x07\xfe\xfa\x0a\x2c\x8b\xfd\x69\x66\xdb\x1c\x75\xf1\xcf\xcb\x30\x07\x1e\xa7\xab\xd5\xb7\x47\x10\x51\xe0\x3b\x8e\xae\x8b\xe3\xb9\x24\xcf\xed\x3f\x98\xb7\x7a\x0e\xfa\x48\xde\x26\x12\x4f\x4a\x22\xdf\xca\x0c\x21\x93\xfc\xd2\xcd\x6c\x9c\x77\x87\x7a\x38\x99\xe2\xe1\xeb\xb2\x68\xdb\xc5\xa7\xbd\xe2\xf3\xd6\xc2\x77\xde\xa8\x26\xb3\xef\x48\xed\x4d\x79\xd6\x75\xa3\x0e\xda\x54\x7f\xf7\xc6\x8a\xbb\xcd\xd6\x01\x00\x2b\x24\x03\xb7\xbf\xea\x19\xd1\x31\x6f\x77\xca\xfb\x02\xa5\x42\xe6\xf6\xe1\x09\x99\xdb\x8c\xbb\xbd\x79\xa3\x4e\x15\x4d\xd5\xea\x23\xa9\x92\x0e\xba\xd6\x9d\x6e\xea\xd3\x87\x2d\x90\xca\x70\xc7\x72\x04\xa5\xd8\x4e\x2a\xf7\xe6\x54\x4a\xbd\x5f\x9b\x8b\x38\x0d\x23\x54\xeb\x88\x6d\xb2\x61\xf0\xff\x07\x00\x00\xff\xff\x7b\x30\x4d\x7b\x09\x03\x00\x00"

func assetsTemplatesCmakeCmakelistsappTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistsappTxtTpl,
		"assets/templates/cmake/CMakeListsApp.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistsappTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistsappTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsApp.txt.tpl", size: 777, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistspkgTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\xcf\x8e\x9b\x30\x10\xc6\xcf\xf5\x53\x58\x94\x03\xf4\x90\x8d\xba\x4f\xe0\x18\x27\x4b\x03\x18\x19\x92\x6e\x4f\x16\x85\xc9\xca\x6d\xf8\x53\x43\x54\xad\x10\xef\x5e\x11\x08\x9b\x6c\x12\xad\x7a\x82\x99\xf9\x18\xcf\x7c\x3f\x53\x43\x63\x51\x9f\xac\x99\xdc\x32\x81\x1f\x67\xf3\xd9\xdc\x46\x7d\x32\x14\xfc\x1b\xa3\xb1\x0c\x88\xcf\x70\xdb\x9e\x87\x5d\x77\x29\x09\x49\xfc\x84\x8d\x37\x4d\x1f\x77\x9d\x31\x88\x86\xe6\x31\xe7\x1e\x7d\x22\x6e\x20\x97\xae\xc7\x7a\xf1\x65\xe6\x24\xc7\xa3\xde\xe7\xce\xc6\x63\x63\x67\xb3\x1d\x92\x74\x23\x04\x0b\x62\x19\xf1\x8d\xa0\x4c\x3a\xae\x38\x1d\xe2\xb0\x90\x05\x0e\x0b\xe8\x8f\xa1\x7f\x06\x15\x14\x19\x14\xa9\x82\xda\x46\xe8\x33\xae\x74\x59\x81\x6e\x14\xd4\x47\x7d\x4c\xc4\x8a\x4d\xbb\x9d\x45\xa7\xd5\x16\x9c\x08\x07\xb7\xed\xf1\x79\x4a\x2e\x05\xf1\xd9\x77\x2e\xd6\xb8\x6d\xa7\xf7\xbe\x88\xd2\x3c\xf9\x0d\x32\x57\x85\xca\x0f\xb9\xd4\xf0\xe7\xa0\x34\x64\xd6\x96\x89\xc8\xe5\x01\x3e\x2d\x30\xc6\x9d\x8d\x2a\x5d\xfe\x82\xb4\xb1\xcc\x4b\x63\x31\xc5\xf4\xf9\x19\x93\xc8\xb7\xc7\x9e\x55\xb9\x57\xe9\xab\x15\xb1\x18\x53\x3f\x9c\xcf\xbf\x3e\x62\xee\x39\x36\x42\xaa\x48\xf7\x87\x0c\x2c\xb3\x7d\xb7\x7c\x3f\xcf\x4e\xed\xc1\x5a\x79\x7c\x21\x05\xa3\x1b\x11\x31\xec\xb9\x8b\x63\x35\xea\xed\xbc\x00\xf5\x50\xeb\xf4\xe1\xcb\x2c\xad\x2a\xe3\x6e\x2d\xbd\x5f\x32\x6c\xf4\x02\x05\xe8\xa4\x01\x99\xe8\xec\xa0\x8a\x52\xee\xd5\x4f\x9d\xe8\xd7\xf7\xdb\xa1\x4f\x91\xa0\x11\x36\xdb\x69\x98\x0e\x61\x8c\xf1\x60\xb6\x39\x9a\x6d\xa3\x26\xd1\x2f\xd0\xc8\xb4\xcc\x2b\xb5\x07\x99\xc1\x4e\x15\xaa\x51\x65\x51\x5f\xf9\x15\x0a\x77\x4b\x62\x86\xa5\x24\x5b\x21\xcd\x33\x2c\x52\xf6\xb7\x76\xbd\x92\x94\xfb\xa1\xeb\x31\xb9\xf4\xc8\x2a\xea\xde\xda\x8f\x06\xca\x4c\x69\x48\x9b\x52\x2b\xb8\xd1\x7e\xb3\xf0\x5c\x7a\xbd\xfb\xf8\xad\xf1\x7f\xcd\xc6\x59\x6f\x39\x69\xdc\x84\x16\x09\x7a\x0f\x5a\x03\x75\x53\xdf\xc5\x36\x55\x6f\x81\x9b\x8a\xb7\xd0\xed\x94\xce\xff\x26\xba\xbf\x57\xe7\xbf\xc5\x91\xd3\x48\x6f\x9a\x6a\xc8\x7a\xee\xa2\xcf\x5e\x92\xbe\xc6\x7a\x4c\x85\x5c\xc4\x3d\x16\x2e\xe2\xee\x23\xd0\xe7\xc7\x7f\xc4\x79\xd4\x5e\xa1\xfe\x17\x00\x00\xff\xff\xe7\x2d\xc2\xfe\xde\x04\x00\x00"

func assetsTemplatesCmakeCmakelistspkgTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistspkgTxtTpl,
		"assets/templates/cmake/CMakeListsPkg.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistspkgTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistspkgTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsPkg.txt.tpl", size: 1246, mode: os.FileMode(420), modTime: time.Unix(1527449800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeDependenciesTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x4f\x6b\xc2\x40\x14\xc4\xcf\xe6\x53\x2c\xc1\x83\xe9\xa1\x7e\x86\xcd\xe6\xc5\x86\xe6\x1f\xbb\x6a\xe9\xe9\x91\x6e\x9e\xf2\x20\x4d\xc2\x1a\x0f\x25\xec\x77\x2f\x14\x69\x11\x54\xe8\x69\x0e\xc3\xfc\x66\x98\x03\x77\xb4\xda\xe4\x55\x8c\x1a\xd4\x4e\x1b\x10\x46\x2b\x4c\xb3\x1c\x8c\x08\xe7\x39\x81\x1a\xca\x04\x4a\xf5\x8e\xb5\xdc\xbe\x78\xbf\x3e\x39\xbb\x7e\x7a\xb6\xe3\x18\x3e\xf4\xed\x63\x3b\x8c\x82\x23\xf5\xe4\x9a\x89\xb0\x71\xed\x99\xfb\x01\x3b\xfe\x70\x8d\xfb\x5a\x5d\xc5\x4a\x59\x80\xf7\xc1\xc2\x68\x65\xc4\x72\xfe\x1d\xe7\x83\x45\x5c\x49\x9d\x88\xe5\xfc\xa3\x3e\x0a\xa6\xc6\x1d\x69\x42\x3b\x7c\x8e\xdc\x11\xb6\x74\xe0\x9e\x27\x1e\xfa\xd3\x2d\xa4\xa8\x75\xb6\x97\x5b\x10\x88\x72\xaf\x71\x39\xa7\x5a\x16\xf0\x56\xe9\x57\x8f\x28\xae\x02\xaa\x2a\xea\x2c\x07\x4c\x73\xb9\x31\xfe\xaf\x89\x7b\xdb\x9d\x5b\xc2\x96\x1d\xd9\x69\x70\x4c\x77\x9a\x76\x71\x9e\xa9\xdb\x7f\x5c\x18\xe1\xff\xa1\x97\xf9\xf7\x5e\x0e\xa3\xef\x00\x00\x00\xff\xff\xc1\x85\xd3\xd1\xdb\x01\x00\x00"

func assetsTemplatesCmakeDependenciesTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeDependenciesTxt,
		"assets/templates/cmake/dependencies.txt",
	)
}

func assetsTemplatesCmakeDependenciesTxt() (*asset, error) {
	bytes, err := assetsTemplatesCmakeDependenciesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/dependencies.txt", size: 475, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigAppHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\x31\x6f\xdd\x30\x0c\x84\xf7\xf7\x2b\x0e\x7e\x4b\x3b\xd4\x3f\xa0\x5b\x80\x22\x4b\x87\x04\x69\x91\xce\xb4\xc4\xf7\xcc\x46\x16\x05\x91\x8a\xeb\xfe\xfa\x42\x8e\x53\x34\xcd\x48\x89\xb8\xfb\xee\x78\xc6\x40\xa5\x0c\x70\xba\x22\x68\x76\x92\x6c\x08\x5a\x19\x92\x2f\x5a\x17\x72\xd1\x0c\x9a\xb4\x39\x7c\x66\x94\xaa\x3f\x39\xf8\x88\xef\xb3\x18\x56\x49\xa9\x3f\xc5\x16\x18\xfc\x8b\x43\x73\x9a\x12\x83\x72\x7c\xf9\x9b\x18\xad\x24\xa5\xc8\xf1\x74\x86\x2b\x28\x83\x97\x89\x63\xe4\x88\xc8\xcf\x12\x78\xc4\xad\xa6\xa4\xab\xe4\x2b\xa8\x32\x4c\x17\xc6\x13\x6f\x28\x2a\xd9\xed\xf0\x0e\xcd\x5c\x17\xf9\xdd\xb7\x36\x6d\x15\x54\x4a\x92\xb0\xe3\x7d\x3e\x9d\xf1\x09\xb7\x95\x16\x5e\xb5\x3e\xd9\x2e\xf3\xed\xcb\x57\xc3\x45\xeb\xff\x76\xd6\xd1\x79\x7b\x0d\x0b\x63\x87\x5e\x90\x64\xaa\x54\x85\xad\x43\x36\x63\xac\x33\x67\x04\x8d\x92\xaf\xe3\xe9\x0c\xe0\x87\x28\xac\x95\xa2\xd5\x8f\x86\x06\xaa\xb1\x49\xd6\x61\xcf\x3b\x04\x35\x1a\xf0\x81\x32\xb4\x70\x86\x69\xab\x81\x71\x77\x77\x8f\x9b\xc7\x87\xee\xce\x49\xcb\xc2\xd9\x51\x12\x79\x2f\xf7\xe3\xb8\x93\xdf\x1f\x23\xc4\xf6\x8e\x7d\x2b\xdc\x99\xc2\x2c\x05\x3e\x53\x6f\x5e\xec\xdf\xc4\xef\xca\x3d\xee\xf1\x2a\xdc\x6f\xf2\x2c\x91\x6d\x27\x7f\x93\x8d\x42\x60\xb3\x17\xed\x99\x6a\x5c\x7b\x59\x9d\x3f\xe8\x52\x24\x71\xdd\xb7\x8e\xa1\xe3\x2c\xe3\xdb\xe8\xc3\xcd\xe3\xc3\xf0\xd7\x69\xfc\x13\x00\x00\xff\xff\x60\xbe\xd0\xd6\x41\x02\x00\x00"

func assetsTemplatesConfigAppHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigAppHelperTxt,
		"assets/templates/config/app-helper.txt",
	)
}

func assetsTemplatesConfigAppHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigAppHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/app-helper.txt", size: 577, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigDependenciesHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xc1\x8e\x9b\x30\x10\x86\xef\x3c\xc5\x2f\x73\x6d\x91\xba\xc7\x9c\x9b\xb4\x87\xa8\x91\xb6\xed\xa9\xaa\xaa\xc1\x0c\xe0\xc6\x78\x2c\x7b\x50\xca\xdb\x57\x86\x4d\x96\x95\x96\x13\x0c\xe3\xff\xfb\x3c\x76\x0d\xd3\x71\xe4\xd0\x71\xb0\x8e\xb3\x81\xd2\x00\xf2\x5e\x6e\x19\x73\xe6\x04\x15\xb8\x60\xfd\xdc\x31\x44\x47\x4e\x88\x64\xaf\x34\x70\x86\x0b\x2a\xd0\x91\x5d\x42\x4c\xf2\x97\xad\x36\xf8\x31\x72\x62\xb8\x0c\xba\xf7\x61\xa2\x40\x03\x27\xb4\xb3\xf3\xba\x2e\xaa\x6a\xdc\x9c\x80\x42\x87\x45\x66\x58\x0a\x98\xe8\xca\x85\x07\xe9\xa1\x23\x29\xda\x05\x39\xb2\x75\xfd\xe2\xc2\xb0\x67\x42\x47\x97\x8b\x65\x83\xcf\x3b\x71\xdc\x9c\xf7\x68\x19\x04\xef\xb2\x96\x9c\xc7\x22\x0a\x5d\x55\x3f\x50\x2f\xb1\xe8\x5c\xdf\x73\xe2\xa0\x90\xa8\x4e\x42\x46\x2f\x09\x4c\x76\xdc\x24\x78\x6a\x70\x92\x32\x89\x62\x40\x89\x91\x65\x62\x5c\x79\x41\x14\x17\x34\x83\x5a\x99\x75\xf5\x31\x55\x8d\x8f\x98\x93\x2f\x5b\xbf\xad\x33\x28\xb8\x3b\x4a\x47\x5e\x7f\x6e\xb9\x77\xb1\x06\xdf\x05\x27\x4a\x90\xe0\x17\x98\x2f\x4e\x0d\xf2\x1c\xa3\x24\xe5\xae\xf4\xe7\x95\x4a\xd6\x72\x54\xee\x9a\x95\x91\xb8\x7f\xcb\xd8\x6f\x89\xd0\x26\x0a\x76\x2c\x87\x66\x47\xb6\xd7\xcd\x8f\xe1\x5d\x9b\x28\x2d\xe8\x93\x4c\x6b\x8c\x95\x29\x3a\xcf\x7f\x7a\x4f\xc3\x86\x79\xdf\xfa\xa5\x0f\x5b\x5f\x19\x50\xa9\x3e\x6e\xcc\x52\xd5\x38\xfe\xa3\x29\x7a\x3e\x54\x35\xf6\x37\xa9\x7c\x03\xd3\x72\x76\xed\xf6\x5a\x9e\x39\xf9\x03\xcc\xcf\xe7\xf3\x27\xf3\xa8\x25\xee\x0f\x30\xcf\xc7\xd3\xae\xf6\x46\xef\x80\x5f\xe6\xeb\xf1\x7c\xbe\x98\x0f\x30\xdf\x2e\x17\xf3\xfb\x35\xfa\xe9\x9d\xec\x27\xf3\x3f\x00\x00\xff\xff\x6a\xf8\x92\xa3\xd5\x02\x00\x00"

func assetsTemplatesConfigDependenciesHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigDependenciesHelperTxt,
		"assets/templates/config/dependencies-helper.txt",
	)
}

func assetsTemplatesConfigDependenciesHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigDependenciesHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/dependencies-helper.txt", size: 725, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigPkgHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x52\xcd\x6a\xe4\x38\x10\xbe\xe7\x29\x3e\xdc\x97\x5d\xc8\xf6\x03\xec\x2d\xb0\x04\x96\x39\x24\x64\x86\x0c\x73\x1a\xca\x52\xb9\x5d\xd3\xb2\x4a\x48\xe5\x18\xcf\xd3\x0f\x92\xed\xa6\x73\x2c\xb9\xfc\xd5\xf7\x77\x42\x97\xae\x97\x0e\x46\x17\x38\x8d\x46\x12\x0b\x9c\x66\x86\xc4\x41\xf3\x44\x26\x1a\x41\xbd\xce\x06\x1b\x19\x29\xeb\x2f\x76\x76\xc6\xb7\x51\x0a\x16\x09\xa1\x3e\xf9\xd9\x31\x08\x89\xdc\x95\x2e\x0c\x1b\xc9\xe0\x28\xa2\x67\xcc\x85\x3d\x24\x42\x6d\xe4\xfc\x70\xc2\x22\x7a\x80\x94\x33\xbe\x6f\xd3\x87\x78\x2e\x88\x64\xf2\xc1\x28\x73\x4a\x9a\x0d\x83\xe6\x03\xb1\xc0\x65\x26\x63\x0f\x6b\x67\x69\x05\xc5\x3a\xf0\x0a\x6a\x5c\x5d\x98\x3d\x7b\x0c\x81\x96\xc0\xa5\x84\xf5\xfc\x70\xc2\xb3\x86\xa0\x8b\xc4\x4b\x5b\x2a\x3a\x31\xae\xbc\x22\xa9\x44\x2b\xbb\x28\x37\x17\xd3\x49\x7e\xd7\xad\x55\xe7\xdb\xc9\x7f\x1f\x4e\xf8\x07\xcf\x99\x26\x5e\x34\x5f\x4b\x83\xf8\xfa\xdf\x97\xd2\x78\xf1\xd4\xb3\xaf\x07\x3d\x7f\x88\xe3\x52\xfd\xe0\xf5\x70\x10\x85\x0d\x3a\x20\x48\x9f\x29\x0b\x17\x98\x56\x23\xb0\x8c\x1c\xe1\xd4\x4b\xbc\x54\x7e\x68\xfa\x77\xbd\xbb\xed\x1d\x65\x3f\x4b\xd4\xae\x29\xec\x9c\x16\xea\xf0\x17\x45\x68\xe2\x88\xa2\x73\x76\x8c\x97\x97\x57\x3c\xbd\xbf\xd5\xeb\x1c\x34\x4d\x1c\x0d\x29\x90\xd5\xc4\xfe\x3e\x37\xe6\xaf\xfb\x08\x29\x2d\x38\x5b\x13\x57\x4e\x6e\x94\xb4\x05\xd4\xac\xa4\x94\x82\xb8\x2d\xe5\x96\x66\x8d\x2c\x05\x25\xcf\x7e\x0f\xf9\x00\xbe\x05\xd5\x98\x7f\xd2\x46\xce\x71\x29\x1b\xf6\x48\xd9\x2f\xd5\xac\xca\xdf\xe9\x94\x24\x70\x6e\x5b\xfb\x50\xe9\x4c\xe7\xcf\xd2\xbb\xa7\xf7\xb7\xee\x76\x69\x53\xf0\x43\xe7\x56\xa2\x92\xd8\xc9\xb0\x62\x9a\x83\x49\x0a\x0c\x9a\x6d\xd4\x5c\x1e\x31\xdc\xa5\x13\x3d\x7a\xa5\xec\xcb\xce\xfa\xbe\xbe\x37\x61\xb5\x8b\x95\xc8\xc8\xee\x0a\x19\x9a\x05\x77\x6a\xd6\x6a\x56\x65\x49\x26\x7d\x60\x2c\x62\xe3\x7d\xeb\x21\x56\x37\x7a\xae\x65\xd9\x8b\xbd\x71\xfd\x7f\xa8\xe5\xc1\x42\xd1\x3e\xb5\xa8\x5e\xeb\xf9\x50\xee\x37\x44\xc7\xb9\xb5\x64\x08\x74\x29\x5b\x27\x2a\xd8\xe3\x61\x30\x6c\xd4\xc2\xfb\x67\x89\xc7\xdf\x3f\xb7\x07\xa3\xcb\xf9\x4f\x00\x00\x00\xff\xff\xa5\x00\x6f\x85\xb6\x03\x00\x00"

func assetsTemplatesConfigPkgHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigPkgHelperTxt,
		"assets/templates/config/pkg-helper.txt",
	)
}

func assetsTemplatesConfigPkgHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigPkgHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/pkg-helper.txt", size: 950, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectAppYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8c\x41\x0a\xc3\x30\x0c\x04\xef\x7a\xc5\xbe\x43\x5f\x29\xa5\x6c\x63\x39\x98\xda\xb1\x51\x54\xfa\xfd\xe2\xa4\x34\x97\xd1\x30\x82\xe5\x18\x2a\xc0\xc6\x66\x7a\x50\x80\x92\x4c\x27\x04\x18\x95\x91\xbb\x37\xfd\x9b\x00\xd9\xd9\xec\xd3\xfd\xa5\x97\x8a\x04\x7d\xb5\xd8\xe7\x5a\xb2\xcc\x77\x0d\x45\x63\xd9\x04\x58\xdc\x18\x96\xe6\x0b\x47\x3b\x0d\x78\x76\x7a\xd2\xf3\xfc\xd2\xd2\xdb\x28\xd5\x1e\xb9\x72\xdd\x15\xb7\xbb\x7c\x03\x00\x00\xff\xff\x5f\x68\x86\xf6\xa3\x00\x00\x00"

func assetsTemplatesConfigProjectAppYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectAppYml,
		"assets/templates/config/project-app.yml",
	)
}

func assetsTemplatesConfigProjectAppYml() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectAppYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-app.yml", size: 163, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectPkgYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\xc5\x7d\x41\x90\xae\xdc\xba\xe7\x0f\x82\xa0\xa0\x25\x3a\x55\x23\x9b\x06\x45\xd5\xe8\xdf\x17\x52\x13\x2f\x5d\x28\xe2\xde\x1d\x4e\x2c\x79\xa2\x00\xac\xbc\x08\x8d\x19\x80\x24\x35\x5a\xde\x3c\xeb\x4a\x60\xec\x59\xb1\x99\x7e\x49\xf4\x00\x34\x2b\x3d\xf0\x2d\x56\x07\x3f\x9f\xce\xa7\xb7\x00\x70\xf3\x4f\xb5\x8e\xa2\xae\x6e\x79\x6a\xae\x56\x09\xd7\x5b\x00\x4a\x8e\xb2\x56\xe9\x74\x2b\xec\xb3\xda\x42\xc7\x16\x80\xd9\x78\x91\x5d\xed\xf1\xf4\x3f\xe4\x67\x57\x4b\xaf\xf8\xa4\x6c\x89\x70\x7d\xbf\x5c\x6e\xa3\x60\xd9\x72\x91\x8f\xb9\xf0\xfd\x65\xc9\x49\xa8\x8f\x10\x9c\xed\x2e\x5e\x69\x1c\x32\x73\x2b\x4e\x70\xa9\xfd\xef\xd1\x84\x5d\x52\x47\x18\xda\xdf\x76\x14\x8c\xe7\x29\xfd\x2f\xf9\x0d\x00\x00\xff\xff\xf5\x16\xeb\xff\x2b\x01\x00\x00"

func assetsTemplatesConfigProjectPkgYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectPkgYml,
		"assets/templates/config/project-pkg.yml",
	)
}

func assetsTemplatesConfigProjectPkgYml() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectPkgYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-pkg.yml", size: 299, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigTargetsHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x90\x41\x8e\x83\x30\x0c\x45\xf7\x3d\xc5\x57\xd9\x8e\x38\xc4\xdc\x62\x96\x26\x71\xc0\x52\xb0\x51\x6c\x8a\xb8\xfd\x28\x94\xaa\x5b\xfb\xf9\xbf\x2f\x0f\x78\x06\xb5\x99\xc3\x9f\x08\x9a\x41\xb5\xda\xe1\x28\xd6\x10\xec\x21\x3a\x83\x34\x23\xf3\x8b\xab\x6d\x2b\x6b\x5c\xbb\x17\x35\xb1\xdd\xe1\x1c\x9d\xf1\x0b\x4a\xa6\x45\xe6\xbd\x51\x88\xa9\x8f\xf8\xb3\x1d\x89\x14\xa9\x31\x05\x3f\x06\xac\x7b\x0d\xd9\x2a\xe3\x56\xe2\x58\xb8\x31\xce\x9b\xcb\x5c\x44\x19\x59\x4a\xe1\xd6\x4d\x71\x6e\xec\xb0\x82\xc9\xa8\xe5\x8f\x64\xdd\xa4\x32\x4a\xa5\xd9\x47\xfc\x9e\xfd\x8c\xf6\x1a\x30\xfd\x04\x3f\x06\x88\xdf\xda\xfc\x83\x63\x91\xb4\xf4\xc9\x5b\x90\x31\x91\x73\x86\xe9\xb7\x7e\x5a\xcc\x59\x31\x9d\x57\x19\x51\xc4\xc2\xef\x80\xfe\x81\xad\x59\x62\xf7\xf1\x3f\x00\x00\xff\xff\xc3\xbc\x9e\x47\x2d\x01\x00\x00"

func assetsTemplatesConfigTargetsHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigTargetsHelperTxt,
		"assets/templates/config/targets-helper.txt",
	)
}

func assetsTemplatesConfigTargetsHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigTargetsHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/targets-helper.txt", size: 301, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreClion = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\xcf\xcc\xd7\xe7\x72\xf6\x4d\xcc\x4e\xf5\xc9\x2c\x2e\x29\x0e\x28\xca\x2c\x4b\x2c\x49\xd5\x2b\xa9\x28\xe1\xd2\xcb\x4c\x49\x4d\xd4\xe7\x4a\xce\x4d\xcc\x4e\xd5\x4d\x2a\xcd\xcc\x49\xd1\x4d\x49\x4d\x2a\x4d\xd7\xe7\x02\x04\x00\x00\xff\xff\x88\xc9\x2b\x5b\x36\x00\x00\x00"

func assetsTemplatesGitignoreGitignoreClionBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreClion,
		"assets/templates/gitignore/.gitignore-clion",
	)
}

func assetsTemplatesGitignoreGitignoreClion() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreClionBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-clion", size: 54, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreGeneral = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\xcf\xcc\xd7\xe7\x02\x04\x00\x00\xff\xff\xdd\x1c\xfa\x30\x06\x00\x00\x00"

func assetsTemplatesGitignoreGitignoreGeneralBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreGeneral,
		"assets/templates/gitignore/.gitignore-general",
	)
}

func assetsTemplatesGitignoreGitignoreGeneral() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreGeneralBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-general", size: 6, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsTxtTpl,
		"assets/templates/ide/clion/app/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsTxtTpl,
		"assets/templates/ide/clion/lib/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramAppMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\x50\x72\xce\x2f\x4e\xd4\x0f\x0a\x09\xd1\xcb\xc8\x50\xe2\x42\x13\xf6\x2f\x2d\x29\x28\x2d\x09\xc8\xcc\x03\x4b\x72\xc1\xb9\x0a\x39\xa9\x29\x01\x99\x79\x1a\x4e\xf9\x89\x45\x29\x56\x56\x3e\xae\x2e\x9a\xd6\x5c\x5c\x65\xf9\x99\x29\x0a\xc5\xa9\x25\xa5\x05\x1a\x9a\x0a\xd5\x5c\x0a\x0a\x0a\x0a\x41\x21\x21\x56\x56\x49\xa9\xe9\x99\x79\x1a\x9a\xd6\x5c\xb5\x50\x35\x39\xf9\xf9\x08\x25\x10\xa3\xf4\xf2\xc1\x2a\x40\x02\x29\xa9\x39\x89\x95\x1a\xa6\x06\x50\x2e\x4c\x3e\x2d\x0d\x5d\x81\x01\xd8\x48\x40\x00\x00\x00\xff\xff\xae\x1c\x30\xf2\xca\x00\x00\x00"

func assetsTemplatesSampleProgramAppMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramAppMainCpp,
		"assets/templates/sample-program/app/main.cpp",
	)
}

func assetsTemplatesSampleProgramAppMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramAppMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/app/main.cpp", size: 202, mode: os.FileMode(420), modTime: time.Unix(1527447457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\x50\x72\xce\x2f\x4e\xd4\x0f\x0a\x09\xd1\xcb\xc8\x50\xe2\x42\x08\xe7\x97\x96\x14\x94\x96\xe8\x65\x28\x71\x71\x95\xe5\x67\xa6\x28\x14\xa7\x96\x94\x16\x68\x68\x2a\x54\x73\x29\x28\x28\x28\x04\x85\x84\x58\x59\x25\xa5\xa6\x67\xe6\x69\x68\x5a\x73\xd5\x42\xd5\xe4\xe4\xe7\x23\x94\x24\x95\x66\xe6\x94\xf8\xa4\xa6\xf8\x83\x95\x80\x44\x52\x52\x73\x12\x2b\x35\x4c\x0d\xa0\x5c\xb8\x82\xb4\x34\x74\x15\x06\x60\x43\x01\x01\x00\x00\xff\xff\x28\x81\xa1\x32\xa4\x00\x00\x00"

func assetsTemplatesSampleProgramPkgMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgMainCpp,
		"assets/templates/sample-program/pkg/main.cpp",
	)
}

func assetsTemplatesSampleProgramPkgMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg/main.cpp", size: 164, mode: os.FileMode(420), modTime: time.Unix(1527449943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgOutputCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\x50\x72\xce\x2f\x4e\xd4\xf7\x2f\x2d\x29\x28\x2d\x09\xc8\xcc\xd3\xcb\xc8\x50\xe2\x42\x48\xe6\x83\xc5\xf5\x32\x94\xb8\xb8\xe0\x4a\x14\x72\x52\x53\x02\x32\xf3\x34\x9c\xf2\x13\x8b\x52\xac\xac\x7c\x5c\x5d\x34\xad\xb9\xb8\xca\xf2\x33\x53\x14\x92\x4a\x33\x73\x4a\x7c\x52\x53\xfc\xf3\x34\x34\x15\xaa\xb9\x14\x14\x14\xa0\x8a\xf5\xf2\xf3\x34\x34\xad\xb9\x6a\xd1\xd5\xa5\xa5\x61\x28\x04\x09\x81\x54\x02\x02\x00\x00\xff\xff\xf7\x81\x83\xa4\xa2\x00\x00\x00"

func assetsTemplatesSampleProgramPkgOutputCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgOutputCpp,
		"assets/templates/sample-program/pkg/output.cpp",
	)
}

func assetsTemplatesSampleProgramPkgOutputCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgOutputCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg/output.cpp", size: 162, mode: os.FileMode(420), modTime: time.Unix(1527450010, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgOutputH = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xcb\xcf\x4c\x51\x48\x2a\xcd\xcc\x29\xf1\x49\x4d\xf1\xcf\xd3\xd0\xb4\xe6\x42\x15\x4a\x4b\xd3\xd0\xb4\x06\x04\x00\x00\xff\xff\x5a\xa3\x43\x34\x26\x00\x00\x00"

func assetsTemplatesSampleProgramPkgOutputHBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgOutputH,
		"assets/templates/sample-program/pkg/output.h",
	)
}

func assetsTemplatesSampleProgramPkgOutputH() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgOutputHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg/output.h", size: 38, mode: os.FileMode(420), modTime: time.Unix(1527449999, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/config/create_paths.json": assetsConfigCreate_pathsJson,
	"assets/config/defaults.yml": assetsConfigDefaultsYml,
	"assets/config/paths.yml": assetsConfigPathsYml,
	"assets/config/update_paths.json": assetsConfigUpdate_pathsJson,
	"assets/templates/cmake/CMakeListsApp.txt.tpl": assetsTemplatesCmakeCmakelistsappTxtTpl,
	"assets/templates/cmake/CMakeListsPkg.txt.tpl": assetsTemplatesCmakeCmakelistspkgTxtTpl,
	"assets/templates/cmake/dependencies.txt": assetsTemplatesCmakeDependenciesTxt,
	"assets/templates/config/app-helper.txt": assetsTemplatesConfigAppHelperTxt,
	"assets/templates/config/dependencies-helper.txt": assetsTemplatesConfigDependenciesHelperTxt,
	"assets/templates/config/pkg-helper.txt": assetsTemplatesConfigPkgHelperTxt,
	"assets/templates/config/project-app.yml": assetsTemplatesConfigProjectAppYml,
	"assets/templates/config/project-pkg.yml": assetsTemplatesConfigProjectPkgYml,
	"assets/templates/config/targets-helper.txt": assetsTemplatesConfigTargetsHelperTxt,
	"assets/templates/gitignore/.gitignore-clion": assetsTemplatesGitignoreGitignoreClion,
	"assets/templates/gitignore/.gitignore-general": assetsTemplatesGitignoreGitignoreGeneral,
	"assets/templates/ide/clion/app/CMakeLists.txt.tpl": assetsTemplatesIdeClionAppCmakelistsTxtTpl,
	"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
	"assets/templates/ide/clion/lib/CMakeLists.txt.tpl": assetsTemplatesIdeClionLibCmakelistsTxtTpl,
	"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
	"assets/templates/sample-program/app/main.cpp": assetsTemplatesSampleProgramAppMainCpp,
	"assets/templates/sample-program/pkg/main.cpp": assetsTemplatesSampleProgramPkgMainCpp,
	"assets/templates/sample-program/pkg/output.cpp": assetsTemplatesSampleProgramPkgOutputCpp,
	"assets/templates/sample-program/pkg/output.h": assetsTemplatesSampleProgramPkgOutputH,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"config": &bintree{nil, map[string]*bintree{
			"create_paths.json": &bintree{assetsConfigCreate_pathsJson, map[string]*bintree{}},
			"defaults.yml": &bintree{assetsConfigDefaultsYml, map[string]*bintree{}},
			"paths.yml": &bintree{assetsConfigPathsYml, map[string]*bintree{}},
			"update_paths.json": &bintree{assetsConfigUpdate_pathsJson, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"cmake": &bintree{nil, map[string]*bintree{
				"CMakeListsApp.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistsappTxtTpl, map[string]*bintree{}},
				"CMakeListsPkg.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistspkgTxtTpl, map[string]*bintree{}},
				"dependencies.txt": &bintree{assetsTemplatesCmakeDependenciesTxt, map[string]*bintree{}},
			}},
			"config": &bintree{nil, map[string]*bintree{
				"app-helper.txt": &bintree{assetsTemplatesConfigAppHelperTxt, map[string]*bintree{}},
				"dependencies-helper.txt": &bintree{assetsTemplatesConfigDependenciesHelperTxt, map[string]*bintree{}},
				"pkg-helper.txt": &bintree{assetsTemplatesConfigPkgHelperTxt, map[string]*bintree{}},
				"project-app.yml": &bintree{assetsTemplatesConfigProjectAppYml, map[string]*bintree{}},
				"project-pkg.yml": &bintree{assetsTemplatesConfigProjectPkgYml, map[string]*bintree{}},
				"targets-helper.txt": &bintree{assetsTemplatesConfigTargetsHelperTxt, map[string]*bintree{}},
			}},
			"gitignore": &bintree{nil, map[string]*bintree{
				".gitignore-clion": &bintree{assetsTemplatesGitignoreGitignoreClion, map[string]*bintree{}},
				".gitignore-general": &bintree{assetsTemplatesGitignoreGitignoreGeneral, map[string]*bintree{}},
			}},
			"ide": &bintree{nil, map[string]*bintree{
				"clion": &bintree{nil, map[string]*bintree{
					"app": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
					"lib": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
				}},
			}},
			"sample-program": &bintree{nil, map[string]*bintree{
				"app": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramAppMainCpp, map[string]*bintree{}},
				}},
				"pkg": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramPkgMainCpp, map[string]*bintree{}},
					"output.cpp": &bintree{assetsTemplatesSampleProgramPkgOutputCpp, map[string]*bintree{}},
					"output.h": &bintree{assetsTemplatesSampleProgramPkgOutputH, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

